{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/contract/contract-add/contract-add.component.html","./src/app/contract/contract-main/contract-main.component.html","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.html","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.html","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.html","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.html","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.html","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.html","./src/app/entities/creditor/creditor-add/creditor-add.component.html","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.html","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.html","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.html","./src/app/entities/creditor/creditor-detail/creditor-detail.component.html","./src/app/entities/creditor/creditor-main/creditor-main.component.html","./src/app/entities/detran/detran-add/detran-add.component.html","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.html","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.html","./src/app/entities/detran/detran-contacts/detran-contacts.component.html","./src/app/entities/detran/detran-detail/detran-detail.component.html","./src/app/entities/detran/detran-main/detran-main.component.html","./src/app/entities/registrar/registrar.component.html","./src/app/help/help.component.html","./src/app/home/home.component.html","./src/app/registers/groups/group-add/group-add.component.html","./src/app/registers/groups/group-main/group-main.component.html","./src/app/registers/groups/groups-detail/groups-detail.component.html","./src/app/registers/user/user-add/user-add.component.html","./src/app/registers/user/user-detail/user-detail.component.html","./src/app/registers/user/user-main/user-main.component.html","./src/app/reports/audit-history/audit-contract-detail/audit-contract-detail.component.html","./src/app/reports/audit-history/audit-creditor-detail/audit-creditor-detail.component.html","./src/app/reports/audit-history/audit-detran-detail/audit-detran-detail.component.html","./src/app/reports/audit-history/audit-group-detail/audit-group-detail.component.html","./src/app/reports/audit-history/audit-user-detail/audit-user-detail.component.html","./src/app/reports/financial-transaction/financial-transaction.component.html","./src/app/reports/transaction-billing/transaction-billing.component.html","./src/app/system-access/login/login.component.html","./src/app/system-access/password-recover-failed/password-recover-failed.component.html","./src/app/system-access/password-recover-success/password-recover-success.component.html","./src/app/system-access/password-recover/password-recover.component.html","./src/app/system-access/password-reset/password-reset.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/contract/contract-add/contract-add.component.css","./src/app/contract/contract-add/contract-add.component.ts","./src/app/contract/contract-main/contract-main.component.css","./src/app/contract/contract-main/contract-main.component.ts","./src/app/contract/contract-services/contract-add.service.ts","./src/app/contract/contract-services/contract-main.service.ts","./src/app/detran.service.ts","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.css","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.ts","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.css","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.ts","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.css","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.ts","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.css","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.ts","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.css","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.ts","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.css","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-add-contact.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-add.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-contact-detail.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-contacts.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-detail.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-main.service.ts","./src/app/entities/creditor/creditor-add/creditor-add.component.css","./src/app/entities/creditor/creditor-add/creditor-add.component.ts","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.css","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.ts","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.css","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.ts","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.css","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.ts","./src/app/entities/creditor/creditor-detail/creditor-detail.component.css","./src/app/entities/creditor/creditor-detail/creditor-detail.component.ts","./src/app/entities/creditor/creditor-main/creditor-main.component.css","./src/app/entities/creditor/creditor-main/creditor-main.component.ts","./src/app/entities/creditor/creditor-services/creditor-add-contact.service.ts","./src/app/entities/creditor/creditor-services/creditor-add.service.ts","./src/app/entities/creditor/creditor-services/creditor-contact-detail.service.ts","./src/app/entities/creditor/creditor-services/creditor-contacts.service.ts","./src/app/entities/creditor/creditor-services/creditor-detail.service.ts","./src/app/entities/creditor/creditor-services/creditor-main.service.ts","./src/app/entities/detran/detran-add/detran-add.component.css","./src/app/entities/detran/detran-add/detran-add.component.ts","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.css","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.ts","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.css","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.ts","./src/app/entities/detran/detran-contacts/detran-contacts.component.css","./src/app/entities/detran/detran-contacts/detran-contacts.component.ts","./src/app/entities/detran/detran-detail/detran-detail.component.css","./src/app/entities/detran/detran-detail/detran-detail.component.ts","./src/app/entities/detran/detran-main/detran-main.component.css","./src/app/entities/detran/detran-main/detran-main.component.ts","./src/app/entities/detran/detran-services/detran-add-contact.service.ts","./src/app/entities/detran/detran-services/detran-add.service.ts","./src/app/entities/detran/detran-services/detran-contact-detail.service.ts","./src/app/entities/detran/detran-services/detran-contacts.service.ts","./src/app/entities/detran/detran-services/detran-detail.service.ts","./src/app/entities/detran/detran-services/detran-main.service.ts","./src/app/entities/entities-services/entities.service.ts","./src/app/entities/registrar/registrar.component.css","./src/app/entities/registrar/registrar.component.ts","./src/app/help/help.component.css","./src/app/help/help.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/pipes/filter-description.pipe.ts","./src/app/pipes/filter-entity-name.pipe.ts","./src/app/pipes/filter-feature-name.pipe.ts","./src/app/pipes/filter-name.pipe.ts","./src/app/pipes/filter-status.pipe.ts","./src/app/pipes/filter-user.pipe.ts","./src/app/registers/groups/group-add/group-add.component.css","./src/app/registers/groups/group-add/group-add.component.ts","./src/app/registers/groups/group-main/group-main.component.css","./src/app/registers/groups/group-main/group-main.component.ts","./src/app/registers/groups/group-services/group-add.service.ts","./src/app/registers/groups/group-services/group-detail.service.ts","./src/app/registers/groups/group-services/group-main.service.ts","./src/app/registers/groups/groups-detail/groups-detail.component.css","./src/app/registers/groups/groups-detail/groups-detail.component.ts","./src/app/registers/user/user-add/user-add.component.css","./src/app/registers/user/user-add/user-add.component.ts","./src/app/registers/user/user-detail/user-detail.component.css","./src/app/registers/user/user-detail/user-detail.component.ts","./src/app/registers/user/user-main/user-main.component.css","./src/app/registers/user/user-main/user-main.component.ts","./src/app/registers/user/user-services/user-add.service.ts","./src/app/registers/user/user-services/user-detail.service.ts","./src/app/registers/user/user-services/user-main.service.ts","./src/app/reports/audit-history/audit-contract-detail/audit-contract-detail.component.css","./src/app/reports/audit-history/audit-contract-detail/audit-contract-detail.component.ts","./src/app/reports/audit-history/audit-creditor-detail/audit-creditor-detail.component.css","./src/app/reports/audit-history/audit-creditor-detail/audit-creditor-detail.component.ts","./src/app/reports/audit-history/audit-detran-detail/audit-detran-detail.component.css","./src/app/reports/audit-history/audit-detran-detail/audit-detran-detail.component.ts","./src/app/reports/audit-history/audit-group-detail/audit-group-detail.component.css","./src/app/reports/audit-history/audit-group-detail/audit-group-detail.component.ts","./src/app/reports/audit-history/audit-user-detail/audit-user-detail.component.css","./src/app/reports/audit-history/audit-user-detail/audit-user-detail.component.ts","./src/app/reports/financial-transaction/financial-transaction.component.css","./src/app/reports/financial-transaction/financial-transaction.component.ts","./src/app/reports/transaction-billing/csv.service.ts","./src/app/reports/transaction-billing/excel.service.ts","./src/app/reports/transaction-billing/fixed-data-transaction-billing.ts","./src/app/reports/transaction-billing/transaction-billing.component.css","./src/app/reports/transaction-billing/transaction-billing.component.ts","./src/app/system-access/login/login.component.css","./src/app/system-access/login/login.component.ts","./src/app/system-access/password-recover-failed/password-recover-failed.component.css","./src/app/system-access/password-recover-failed/password-recover-failed.component.ts","./src/app/system-access/password-recover-success/password-recover-success.component.css","./src/app/system-access/password-recover-success/password-recover-success.component.ts","./src/app/system-access/password-recover/password-recover.component.css","./src/app/system-access/password-recover/password-recover.component.ts","./src/app/system-access/password-reset/password-reset.component.css","./src/app/system-access/password-reset/password-reset.component.ts","./src/app/system-access/system-access-services/auth.service.ts","./src/app/token-interceptor.service.ts","./src/custom/confirm-equal-validator.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div style=\\\"padding: 80px 0px 0px 0px; padding-block-end: 80px; background-image:url('../assets/images/blue-circuit.jpg');\\\">\\r\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-white shadow fixed-top\\\" *ngIf=\\\"_authService.loggedIn()\\\">\\r\\n    \\r\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/principal\\\" routerLinkActive=\\\"active\\\"><img src=\\\"../assets/images/logo.png\\\" class=\\\"img-reponsive\\\"></a>\\r\\n      \\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    \\r\\n    <div class=\\\"collapse navbar-collapse\\\"  id=\\\"navbarSupportedContent\\\">\\r\\n      <ul class=\\\"nav navbar-nav mr-auto\\\" >\\r\\n        <div class= \\\"row justify-content-lg align-items-center\\\" *ngIf=\\\"_authService.loggedIn()\\\">       \\r\\n          <li class=\\\"dropdown px-3\\\"  >\\r\\n            <a class=\\\"nav-link\\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Registro de Contratos\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n              <ul class=\\\"dropdown-menu\\\"  >\\r\\n                <li >\\r\\n                  <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/contratos\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                  <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/registrar-contrato\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n                </li>\\r\\n                <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                  <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n                </li> -->\\r\\n              </ul>\\r\\n          </li>     \\r\\n          \\r\\n          <li class=\\\"px-3\\\">\\r\\n            <div class=\\\"dropdown\\\">\\r\\n              <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Instituições\\r\\n                <span class=\\\"caret\\\"></span></a>\\r\\n                <ul class=\\\"dropdown-menu multi-level\\\" role=\\\"menu\\\" aria-labelledby=\\\"dropdownMenu\\\">\\r\\n                    <li class=\\\"dropdown-submenu\\\">\\r\\n                      <a  class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\">Detrans</a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/detran\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" style=\\\"cursor:pointer\\\" (click)=\\\"checkDetranAvaiability(content)\\\">Adicionar</a>                         \\r\\n                      </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"dropdown-submenu\\\">\\r\\n                      <a  class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\">Credoras</a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/credora\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/credor-adicionar\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n                      </ul>\\r\\n                    </li>                     \\r\\n                    <li class=\\\"dropdown-submenu\\\">\\r\\n                      <a  class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\">Gestoras</a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/gestora\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                        <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/gestor-adicionar\\\" routerLinkActive=\\\"active\\\">Adicionar</a>                      \\r\\n                      </ul>\\r\\n                    </li>  \\r\\n                  </ul>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li class=\\\"px-3\\\">\\r\\n            <div class=\\\"dropdown\\\">\\r\\n              <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Administração\\r\\n                <span class=\\\"caret\\\"></span></a>\\r\\n                <ul class=\\\"dropdown-menu multi-level\\\" role=\\\"menu\\\" aria-labelledby=\\\"dropdownMenu\\\">\\r\\n                    <li class=\\\"dropdown-submenu\\\">\\r\\n                      <a  class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\">Usuários</a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/usuarios\\\" routerLinkActive=\\\"active\\\" >Consultar</a>\\r\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/usuarios-adicionar\\\" routerLinkActive=\\\"active\\\" >Adcionar</a>                         \\r\\n                      </ul>\\r\\n                    </li>\\r\\n                    <li class=\\\"dropdown-submenu\\\">\\r\\n                      <a  class=\\\"dropdown-item\\\" tabindex=\\\"-1\\\">Grupos</a>\\r\\n                      <ul class=\\\"dropdown-menu\\\">\\r\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/grupos\\\" routerLinkActive=\\\"active\\\" >Consultar</a>\\r\\n                        <a class=\\\"dropdown-item\\\" routerLink=\\\"/grupos-adicionar\\\" routerLinkActive=\\\"active\\\" >Adicionar</a>                          \\r\\n                      </ul>\\r\\n                    </li>                     \\r\\n                  </ul>\\r\\n            </div>\\r\\n          </li>\\r\\n          <li class=\\\"dropdown px-3\\\">\\r\\n            <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Relatórios\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n              <ul class=\\\"dropdown-menu\\\">\\r\\n                <li>\\r\\n                  <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/bilhetagem-transacoes\\\" routerLinkActive=\\\"active\\\" >Bilhetagem de transações</a>\\r\\n                  <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/transacoes-financeiras\\\" routerLinkActive=\\\"active\\\" >Transações financeira</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n          </li>  \\r\\n          <li class=\\\"dropdown px-3\\\">\\r\\n            <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Auditoria\\r\\n            <span class=\\\"caret\\\"></span></a>\\r\\n              <ul class=\\\"dropdown-menu\\\">\\r\\n                <li>\\r\\n                    <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/historico-transacao\\\" routerLinkActive=\\\"active\\\" >Histórico de auditoria</a>\\r\\n                    <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"\\\" routerLinkActive=\\\"active\\\" >Consulta de Acesso</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </li>\\r\\n      </div>   \\r\\n    </ul> \\r\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n          <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" >Perfil</a>\\r\\n          <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"_authService.logoutUser()\\\">Sair</a>\\r\\n      </ul> \\r\\n    </div>\\r\\n  </nav>  \\r\\n  \\r\\n  <ng-template  #content let-modal>\\r\\n    \\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Aviso</h4>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"dateOfBirth\\\">Todos os Detrans já foram cadastrados.</label>\\r\\n          </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-rainti\\\" (click)=\\\"modal.close()\\\">OK</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  \\r\\n  <nav class=\\\"navbar-sm fixed-bottom \\\" >\\r\\n      <div class=\\\"col\\\" style=\\\"padding-top: 5px;\\\" >\\r\\n        \\r\\n        <h6  class=\\\"text-center text-light font-weight-lighter\\\" >© 2019 - RainTI Tecnologia e Sistemas de Informação LTDA <br> Rua Paulino Corado, 20, Jardim Santa Teresa - Jundiaí/SP - Todos os direitos reservados.</h6>\\r\\n      </div> \\r\\n  </nav>\\r\\n  \\r\\n  <div class=\\\"container\\\" style=\\\"height: 820px; white-space: nowrap;\\\">\\r\\n    \\r\\n    <router-outlet ></router-outlet>  \\r\\n             \\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"    <div class=\\\"col-md-8 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\" >\\r\\n            <div class=\\\"card-body \\\" >\\r\\n                <h4 class=\\\"card-title mb-4 mt-1\\\">Registro de contrato</h4>\\r\\n                <hr/>                    \\r\\n                <nav>\\r\\n                    <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-credor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-credor\\\" [ngClass]=\\\"{'active':_activeTab==='nav-credor'}\\\" (click)=\\\"nextTab('nav-credor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-credor\\\" aria-selected=\\\"true\\\">Credor</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-veiculo-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-veiculo\\\" [ngClass]=\\\"{'active':_activeTab==='nav-veiculo'}\\\" (click)=\\\"nextTab('nav-veiculo')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-veiculo\\\" aria-selected=\\\"false\\\">Veículo</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-devedor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-devedor\\\" [ngClass]=\\\"{'active':_activeTab==='nav-devedor'}\\\" (click)=\\\"nextTab('nav-devedor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-devedor\\\" aria-selected=\\\"false\\\">Devedor</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-garantidor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-garantidor\\\" [ngClass]=\\\"{'active':_activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-garantidor\\\" aria-selected=\\\"false\\\">Garantidor</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contrato-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contrato\\\" [ngClass]=\\\"{'active':_activeTab==='nav-contrato'}\\\" (click)=\\\"nextTab('nav-contrato')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contrato\\\" aria-selected=\\\"false\\\">Contrato </a>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                \\r\\n                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                    <div [ngClass]=\\\"{'show active':_activeTab==='nav-credor'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-credor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-credor-tab\\\"> <br>\\r\\n                        <form class=\\\"form\\\" #entitiesForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">                                        \\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Detran</label>\\r\\n                                </div>                                    \\r\\n                                <div class=\\\"col\\\" *ngIf=\\\"!_detransLoad\\\">                                        \\r\\n                                    <select class=\\\"custom-select\\\" #detran=\\\"ngModel\\\" [class.is-invalid]=\\\"detransHasError && detran.touched\\\"\\r\\n                                    name=\\\"detran\\\" [(ngModel)]=\\\"contractData.detran\\\" (change)=\\\"validateDetrans(detran.value)\\\" (blur)=\\\"validateDetrans(detran.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Detran</option>\\r\\n                                        <option *ngFor=\\\"let detran of _detrans\\\">{{ detran.description}}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!detransHasError || detran.untouched\\\">Escolha um Detran</small>\\r\\n                                </div>                                    \\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_detransLoad\\\">\\r\\n                                    <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </div>   \\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col\\\">\\r\\n                                        <label for=\\\"uname1\\\">Credora</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col\\\" *ngIf=\\\"!_creditorsLoad\\\">\\r\\n                                        <select class=\\\"custom-select\\\" #creditor=\\\"ngModel\\\" [class.is-invalid]=\\\"creditorsHasError && creditor.touched\\\"\\r\\n                                        name=\\\"creditor\\\" [(ngModel)]=\\\"contractData.creditor\\\" (change)=\\\"validateCreditors(creditor.value)\\\" (blur)=\\\"validateCreditors(creditor.value)\\\">                            \\r\\n                                            <option value=\\\"default\\\">--Escolha uma credora</option>\\r\\n                                            <option *ngFor=\\\"let creditor of _creditors\\\">{{ creditor.description }}</option>\\r\\n                                        </select>\\r\\n                                        <small class=\\\"text-danger\\\" [class.d-none]=\\\"!creditorsHasError || creditor.untouched\\\">Escolha uma credora</small>\\r\\n                                    </div>           \\r\\n                                    \\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_creditorsLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>      \\r\\n                            </div>\\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-6\\\"> \\r\\n                                        <button class=\\\"btn btn-info btn-block\\\" routerLink=\\\"/contratos\\\">Cancelar</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-6\\\">      \\r\\n                                        <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-contrato'}\\\" (click)=\\\"nextTab('nav-veiculo')\\\" class=\\\"btn btn-rainti btn-block\\\"> Próximo </button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"{'show active':_activeTab==='nav-veiculo'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-veiculo\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-veiculo-tab\\\"><br>\\r\\n                        <form class=\\\"form\\\" #vehicleForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Chassi</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.chassi\\\" name=\\\"chassi\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^([A-HJ-NPR-Za-hj-npr-z\\\\d]{13})\\\\d{4}$\\\" \\r\\n                                    [class.is-invalid]=\\\"chassi.invalid && chassi.touched\\\" #chassi=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassi.valid || chassi.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"chassi.errors && chassi.errors.required\\\">\\r\\n                                            Chassi obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"chassi.errors && chassi.errors.pattern\\\">\\r\\n                                            Chassi inválido (Formato: AAAAAAAAAAAAANNNN)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Confirme o chassi</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.chassiConfirmation\\\" name=\\\"chassiConfirmation\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^([A-HJ-NPR-Za-hj-npr-z\\\\d]{13})\\\\d{4}$\\\" \\r\\n                                    [class.is-invalid]=\\\"chassiConfirmation.invalid && chassiConfirmation.touched\\\" #chassiConfirmation=\\\"ngModel\\\" \\r\\n                                    appConfirmEqualValidator=\\\"chassi\\\"required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassiConfirmation.valid || chassiConfirmation.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"chassiConfirmation.errors && chassiConfirmation.errors.required\\\">\\r\\n                                            confirmação de chassi obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"chassiConfirmation.errors && chassiConfirmation.errors.pattern\\\">\\r\\n                                            Chassi inválido (Formato: AAAAAAAAAAAAANNNN)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassiConfirmation.valid || chassiConfirmation.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"chassiConfirmation.errors && chassiConfirmation.errors?.notEqual\\\">\\r\\n                                            confirmação de chassi incorreto\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                            <div class=\\\"row\\\">   \\r\\n                                <div class=\\\"form-group col-sm-6\\\" > \\r\\n                                    <label for=\\\"uname1 \\\">Chassi Remarcado</label> <br>                                                                               \\r\\n                                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                        <input type=\\\"radio\\\" id=\\\"customRadioInlinechassi1\\\" name=\\\"customRadioInlinechassi\\\" class=\\\"custom-control-input\\\" (click)=\\\"chassiSelect('NÃO')\\\" checked>\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlinechassi1\\\">Não</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                        <input type=\\\"radio\\\" id=\\\"customRadioInlinechassi2\\\" name=\\\"customRadioInlinechassi\\\" class=\\\"custom-control-input\\\" (click)=\\\"chassiSelect('SIM')\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlinechassi2\\\">Sim</label>\\r\\n                                    </div>   \\r\\n                                </div>                               \\r\\n                                <div class=\\\"form-group col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Placa </label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.plate\\\" name=\\\"plate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"plate.invalid && plate.touched\\\" #plate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"plate.valid || plate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"plate.errors && plate.errors.required\\\">\\r\\n                                            Placa obrigatória\\r\\n                                        </small>\\r\\n                                    </div>   \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">UF da placa</label><br>\\r\\n                                    <div *ngIf=\\\"_statesLoad\\\">\\r\\n                                        <span  role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #plateState=\\\"ngModel\\\" [class.is-invalid]=\\\"plateStatesHasError && plateState.touched\\\"\\r\\n                                        name=\\\"plateState\\\" [(ngModel)]=\\\"contractData.plateState\\\" (change)=\\\"validatePlateStates(plateState.value)\\\" (blur)=\\\"validatePlateStates(plateState.value, plateState)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha uma UF</option>\\r\\n                                        <option *ngFor=\\\"let state of _plateStates\\\">{{ state.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!plateStatesHasError || plateState.untouched\\\">Escolha uma UF</small>\\r\\n                                </div>    \\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Renavan</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.renavam\\\" name=\\\"renavam\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"renavam.invalid && renavam.touched\\\" #renavam=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"renavam.valid || renavam.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"renavam.errors && renavam.errors.required\\\">\\r\\n                                            Renavan obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">UF Licenciamento</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_statesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #licensingState=\\\"ngModel\\\" [class.is-invalid]=\\\"licensingStatesHasError && licensingState.touched\\\"\\r\\n                                        name=\\\"licensingState\\\" [(ngModel)]=\\\"contractData.licensingState\\\" (change)=\\\"validateLicensingStates(licensingState.value)\\\" (blur)=\\\"validateLicensingStates(licensingState.value, licensingState)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha uma UF</option>\\r\\n                                        <option *ngFor=\\\"let state of _licensingStates\\\">{{ state.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!licensingStatesHasError || licensingState.untouched\\\">Escolha uma UF</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Espécie</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_speciesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #specie=\\\"ngModel\\\" [class.is-invalid]=\\\"speciesHasError && specie.touched\\\"\\r\\n                                        name=\\\"specie\\\" [(ngModel)]=\\\"contractData.specie\\\" (change)=\\\"validateSpecies(specie.value)\\\" (blur)=\\\"validateSpecies(specie.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha uma espécie</option>\\r\\n                                        <option *ngFor=\\\"let specie of _species\\\">{{ specie.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!speciesHasError || specie.untouched\\\">Escolha uma espécie</small>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Ano de Fabricação</label> <br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_yearsLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #fabricationYear=\\\"ngModel\\\" [class.is-invalid]=\\\"fabricationYearsHasError && fabricationYear.touched\\\"\\r\\n                                        name=\\\"fabricationYear\\\" [(ngModel)]=\\\"contractData.fabricationYear\\\" (change)=\\\"validateFabricationYears(fabricationYear.value)\\\" (blur)=\\\"validateFabricationYears(fabricationYear.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Ano</option>\\r\\n                                        <option *ngFor=\\\"let year of _fabricationYears\\\">{{ year.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!fabricationYearsHasError || fabricationYear.untouched\\\">Escolha um Ano</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Marca </label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_brandsLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #brand=\\\"ngModel\\\" [class.is-invalid]=\\\"brandsHasError && brand.touched\\\"\\r\\n                                        name=\\\"brand\\\" [(ngModel)]=\\\"contractData.brand\\\" (change)=\\\"validateBrands($event, brand.value)\\\" (blur)=\\\"validateBrands($event, brand.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha uma marca  </option>\\r\\n                                        <option *ngFor=\\\"let brand of _brands\\\" >{{ brand.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!brandsHasError || brand.untouched\\\">Escolha uma marca </small>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Modelo  </label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_modelsLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                        <select class=\\\"custom-select\\\" #model=\\\"ngModel\\\" [class.is-invalid]=\\\"modelsHasError && model.touched\\\"\\r\\n                                        name=\\\"model\\\" [(ngModel)]=\\\"contractData.model\\\" (change)=\\\"validateModels($event, model.value)\\\" (blur)=\\\"validateModels($event, model.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um modelo  </option>\\r\\n                                        <option *ngFor=\\\"let model of _models\\\">{{ model.description}}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!modelsHasError || model.untouched\\\">Escolha um modelo </small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Ano do modelo</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_modelYearsLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #modelYear=\\\"ngModel\\\" [class.is-invalid]=\\\"modelYearsHasError && modelYear.touched\\\"\\r\\n                                        name=\\\"modelYear\\\" [(ngModel)]=\\\"contractData.modelYear\\\" (change)=\\\"validateModelYears(modelYear.value, $event)\\\" (blur)=\\\"validateModelYears(modelYear.value, modelYear)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Ano</option>\\r\\n                                        <option *ngFor=\\\"let year of _modelYears\\\">{{ year.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!modelYearsHasError || modelYear.untouched\\\">Escolha um Ano</small>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Cor</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.color\\\" name=\\\"color\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"color.invalid && color.touched\\\" #color=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"color.valid || color.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"color.errors && color.errors.required\\\">\\r\\n                                            Cor obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-veiculo'}\\\" (click)=\\\"nextTab('nav-credor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">      \\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-veiculo'}\\\" (click)=\\\"nextTab('nav-devedor')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"{'show active':_activeTab==='nav-devedor'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-devedor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-devedor-tab\\\"><br>\\r\\n                        <form class=\\\"form\\\" #buyerForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-xl\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome completo</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerName\\\" name=\\\"buyerName\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerName.invalid && buyerName.touched\\\" #buyerName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerName.valid || buyerName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerName.errors && buyerName.errors.required\\\">\\r\\n                                            Nome completo obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div> \\r\\n                            <div class=\\\"row\\\">       \\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #buyerEmail=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    [(ngModel)]=\\\"contractData.buyerEmail\\\" name=\\\"buyerEmail\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerEmail.invalid && buyerEmail.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerEmail.valid || buyerEmail.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerEmail.errors && buyerEmail.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"buyerEmail.errors && buyerEmail.errors.pattern\\\">\\r\\n                                            e-mail inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-6 d-inline-block\\\"> \\r\\n                                    <div class=\\\" p-1 text-center\\\">                                \\r\\n                                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                            <input type=\\\"radio\\\" id=\\\"customRadioInlinebuyer1\\\" name=\\\"customRadioInlinebuyer\\\" class=\\\"custom-control-input\\\" (click)=\\\"cpfCnpjSelect('buyer', 'cpf')\\\" checked>\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlinebuyer1\\\">CPF</label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                            <input type=\\\"radio\\\" id=\\\"customRadioInlinebuyer2\\\" name=\\\"customRadioInlinebuyer\\\" class=\\\"custom-control-input\\\" (click)=\\\"cpfCnpjSelect('buyer', 'cnpj')\\\">\\r\\n                                            <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlinebuyer2\\\">CNPJ</label>\\r\\n                                        </div>                        \\r\\n                                    </div>     \\r\\n                                    <div *ngIf=\\\"_buyerType=='cpf'\\\" >\\r\\n                                        <input Value=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerValue\\\" name=\\\"buyerValue\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\-\\\\d{2}$\\\" placeHolder=\\\"123.123.123-12\\\"\\r\\n                                        [class.is-invalid]=\\\"buyerValue.invalid && buyerValue.touched\\\" #buyerValue=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerValue.valid || buyerValue.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerValue.errors && buyerValue.errors.required\\\">\\r\\n                                                CPF obrigatório \\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"buyerValue.errors && buyerValue.errors.pattern\\\">\\r\\n                                                CPF inválido (Ex.: 123.123.123-12)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_buyerType=='cnpj'\\\" >\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerValue\\\" name=\\\"buyerValue\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                        [class.is-invalid]=\\\"buyerValue.invalid && buyerValue.touched\\\" #buyerValue=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerValue.valid || buyerValue.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerValue.errors && buyerValue.errors.required\\\">\\r\\n                                                CNPJ obrigatório \\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"buyerValue.errors && buyerValue.errors.pattern\\\">\\r\\n                                                CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-2\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"contractData.buyerDddPhone\\\" name=\\\"buyerDddPhone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerDddPhone.invalid && buyerDddPhone.touched\\\" #buyerDddPhone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDddPhone.valid || buyerDddPhone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDddPhone.errors && buyerDddPhone.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(buyerDddPhone.errors && buyerDddPhone.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-4\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"contractData.buyerPhone\\\" name=\\\"buyerPhone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerPhone.invalid && buyerPhone.touched\\\" #buyerPhone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerPhone.valid || buyerPhone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerPhone.errors && buyerPhone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerPhone.errors && buyerPhone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-2\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"contractData.buyerDddMobile\\\" name=\\\"buyerDddMobile\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerDddMobile.invalid && buyerDddMobile.touched\\\" #buyerDddMobile=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDddMobile.valid || buyerDddMobile.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDddMobile.errors && buyerDddMobile.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(buyerDddMobile.errors && buyerDddMobile.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-4\\\">   \\r\\n                                    <label for=\\\"uname1\\\">Celular</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"contractData.buyerMobile\\\" name=\\\"buyerMobile\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerMobile.invalid && buyerMobile.touched\\\" #buyerMobile=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerMobile.valid || buyerMobile.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerMobile.errors && buyerMobile.errors.required\\\">\\r\\n                                            Celular obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerMobile.errors && buyerMobile.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Cep</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerZipCode\\\" name=\\\"buyerZipCode\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                    [class.is-invalid]=\\\"buyerZipCode.invalid && buyerZipCode.touched\\\" #buyerZipCode=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerZipCode.valid || buyerZipCode.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerZipCode.errors && buyerZipCode.errors.required\\\">\\r\\n                                            Cep obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"buyerZipCode.errors && buyerZipCode.errors.pattern\\\">\\r\\n                                            Cep inválido (Ex.: 12345-678)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Estado</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_statesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #buyerState=\\\"ngModel\\\" [class.is-invalid]=\\\"buyerStatesHasError && buyerState.touched\\\" \\r\\n                                    name=\\\"buyerState\\\" [(ngModel)]=\\\"contractData.buyerState\\\" (change)=\\\"validateBuyerStates(buyerState.value)\\\" (blur)=\\\"validateBuyerStates(buyerState.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                        <option *ngFor=\\\"let state of _buyerStates\\\">{{ state.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!buyerStatesHasError || buyerState.untouched\\\">Escolha um Estado</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Município</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerCounty\\\" name=\\\"buyerCounty\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerCounty.invalid && buyerCounty.touched\\\" #buyerCounty=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerCounty.valid || buyerCounty.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerCounty.errors && buyerCounty.errors.required\\\">\\r\\n                                            Município obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerDistrict\\\" name=\\\"buyerDistrict\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerDistrict.invalid && buyerDistrict.touched\\\" #buyerDistrict=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDistrict.valid || buyerDistrict.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDistrict.errors && buyerDistrict.errors.required\\\">\\r\\n                                            Bairro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\"> \\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerAddress\\\" name=\\\"buyerAddress\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerAddress.invalid && buyerAddress.touched\\\" #buyerAddress=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerAddress.valid || buyerAddress.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerAddress.errors && buyerAddress.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-2\\\">\\r\\n                                    <label for=\\\"uname1\\\">Número</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerStreetnumber\\\" name=\\\"buyerStreetnumber\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerStreetnumber.invalid && buyerStreetnumber.touched\\\" #buyerStreetnumber=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerStreetnumber.valid || buyerStreetnumber.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerStreetnumber.errors && buyerStreetnumber.errors.required\\\">\\r\\n                                            Número da residência obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerAddresscomplement\\\" name=\\\"buyerAddresscomplement\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"buyerAddresscomplement.invalid && buyerAddresscomplement.touched\\\" #buyerAddresscomplement=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerAddresscomplement.valid || buyerAddresscomplement.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerAddresscomplement.errors && buyerAddresscomplement.errors.required\\\">\\r\\n                                            Complemento obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div> \\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-devedor'}\\\" (click)=\\\"nextTab('nav-veiculo')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">      \\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-devedor'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n\\r\\n                    <div [ngClass]=\\\"{'show active':_activeTab==='nav-garantidor'}\\\" class=\\\"tab-pane fade \\\" id=\\\"nav-garantidor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-garantidor-tab\\\"><br>\\r\\n                        <form class=\\\"form\\\" #guarantorForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group col-xl\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome do Garantidor</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.guarantor\\\" name=\\\"guarantor\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"guarantor.invalid && guarantor.touched\\\" #guarantor=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"guarantor.valid || guarantor.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"guarantor.errors && guarantor.errors.required\\\">\\r\\n                                            Nome do garantidor obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>         \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\" >                                                                                  \\r\\n                                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                        <input type=\\\"radio\\\" id=\\\"customRadioInlineguarantor1\\\" name=\\\"customRadioInlineguarantor\\\" class=\\\"custom-control-input\\\" (click)=\\\"cpfCnpjSelect('guarantor', 'cpf')\\\" checked>\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineguarantor1\\\">CPF</label>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                        <input type=\\\"radio\\\" id=\\\"customRadioInlineguarantor2\\\" name=\\\"customRadioInlineguarantor\\\" class=\\\"custom-control-input\\\" (click)=\\\"cpfCnpjSelect('guarantor', 'cnpj')\\\">\\r\\n                                        <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineguarantor2\\\">CNPJ</label>\\r\\n                                    </div>                                        \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <div *ngIf=\\\"_guarantorType=='cpf'\\\" >\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.guarantorValue\\\" name=\\\"cpf\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\-\\\\d{2}$\\\" placeHolder=\\\"123.123.123-12\\\"\\r\\n                                        [class.is-invalid]=\\\"guarantorValue.invalid && guarantorValue.touched\\\" #guarantorValue=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"guarantorValue.valid || guarantorValue.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"guarantorValue.errors && guarantorValue.errors.required\\\">\\r\\n                                                CPF obrigatório \\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"guarantorValue.errors && guarantorValue.errors.pattern\\\">\\r\\n                                                CPF inválido (Ex.: 123.123.123-12)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"_guarantorType=='cnpj'\\\" >\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.guarantorValue\\\" name=\\\"guarantorValue\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                        [class.is-invalid]=\\\"guarantorValue.invalid && guarantorValue.touched\\\" #guarantorValue=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"guarantorValue.valid || guarantorValue.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"guarantorValue.errors && guarantorValue.errors.required\\\">\\r\\n                                                CNPJ obrigatório \\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"guarantorValue.errors && guarantorValue.errors.pattern\\\">\\r\\n                                                CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div> \\r\\n                            </div> \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\"> \\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-devedor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">      \\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-contrato')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"{'show active':_activeTab==='nav-contrato'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contrato\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contrato-tab\\\" style=\\\"padding: 0px 20px 0px 20px; height: 650px; overflow-y: scroll;\\\"><br>\\r\\n                        <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"row\\\" >               \\r\\n                                <div class=\\\"form-group col-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^.{6,}$\\\" \\r\\n                                    [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                            Contrato obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                            Contrato deve ter minimo 6 posições alfanumericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Data do Contrato</label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.contractDate\\\" name=\\\"contractDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"contractDate.invalid && contractDate.touched\\\" #contractDate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractDate.valid || contractDate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"contractDate.errors && contractDate.errors.required\\\">\\r\\n                                            Data do Contrato inválida \\r\\n                                        </small>\\r\\n                                    </div>  \\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">               \\r\\n                                <div class=\\\"form-group col-sm-4\\\">\\r\\n                                    <label for=\\\"uname1\\\">Tipo de Gravame</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_alieTypesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #alienType=\\\"ngModel\\\" [class.is-invalid]=\\\"alienTypesHasError && alienType.touched\\\" \\r\\n                                    name=\\\"alienType\\\" [(ngModel)]=\\\"contractData.alienType\\\" (change)=\\\"validateAlienTypes(alienType.value)\\\" (blur)=\\\"validateAlienTypes(alienType.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Gravame</option>\\r\\n                                        <option *ngFor=\\\"let alien of _alienTypes\\\">{{ alien.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!alienTypesHasError || alienType.untouched\\\">Escolha um Tipo de Gravame</small>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-2\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nº restrição</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.restrictionNumber\\\" name=\\\"restrictionNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^\\\\d{6,}$\\\" \\r\\n                                    [class.is-invalid]=\\\"restrictionNumber.invalid && restrictionNumber.touched\\\" #restrictionNumber=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"restrictionNumber.valid || restrictionNumber.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.required\\\">\\r\\n                                            Número da restrição inválida\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.pattern\\\">\\r\\n                                            Restrição deve ter minimo 6 posições numericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Valor financiamento</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.totalDebitAmount\\\" name=\\\"totalDebitAmount\\\"  class=\\\"form-control rounded-0\\\"  \\r\\n                                        pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                        [class.is-invalid]=\\\"totalDebitAmount.invalid && totalDebitAmount.touched\\\" #totalDebitAmount=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"totalDebitAmount.valid || totalDebitAmount.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"totalDebitAmount.errors && totalDebitAmount.errors.required\\\">\\r\\n                                            Valor total da divida obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.pattern\\\">\\r\\n                                            Valor total da divida obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>   \\r\\n                            </div> \\r\\n                            <div class=\\\"row\\\">            \\r\\n                                <div class=\\\"col-sm-2\\\">\\r\\n                                    <label for=\\\"uname1\\\">Parcelas</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.numberOfInstallments\\\" name=\\\"numberOfInstallments\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                        [class.is-invalid]=\\\"numberOfInstallments.invalid && numberOfInstallments.touched\\\" #numberOfInstallments=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"numberOfInstallments.valid || numberOfInstallments.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"numberOfInstallments.errors && numberOfInstallments.errors.required\\\">\\r\\n                                            Quantidade de parcelas obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"numberOfInstallments.errors && numberOfInstallments.errors.pattern\\\">\\r\\n                                            Parcelas deve ter ate 2 posições numericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-4\\\">\\r\\n                                    <label for=\\\"uname1\\\">Valor da Parcela</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.installmentValue\\\" name=\\\"installmentValue\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                        [class.is-invalid]=\\\"installmentValue.invalid && installmentValue.touched\\\" #installmentValue=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"installmentValue.valid || installmentValue.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"installmentValue.errors && installmentValue.errors.required\\\">\\r\\n                                            Valor da parcelas obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"installmentValue.errors && installmentValue.errors.pattern\\\">\\r\\n                                            Valor da parcelas obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Valor do Registro de Contrato</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractRegistrationAmount\\\" name=\\\"contractRegistrationAmount\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"contractRegistrationAmount.invalid && contractRegistrationAmount.touched\\\" #contractRegistrationAmount=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractRegistrationAmount.valid || contractRegistrationAmount.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"contractRegistrationAmount.errors && contractRegistrationAmount.errors.required\\\">\\r\\n                                            Valor do Registro de Contrato obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"contractRegistrationAmount.errors && contractRegistrationAmount.errors.pattern\\\">\\r\\n                                            Valor do Registro de Contrato obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\"> \\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Taxa Juros de Multa</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.interestRate\\\" name=\\\"interestRate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"interestRate.invalid && interestRate.touched\\\" #interestRate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"interestRate.valid || interestRate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"interestRate.errors && interestRate.errors.required\\\">\\r\\n                                            Taxa de Juros de multa obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"interestRate.errors && interestRate.errors.pattern\\\">\\r\\n                                            Juros multa deve ter um valor ate 3 decimais\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Taxa Juros ao ano</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.interestRatePerYear\\\" name=\\\"interestRatePerYear\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"interestRatePerYear.invalid && interestRatePerYear.touched\\\" #interestRatePerYear=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"interestRatePerYear.valid || interestRatePerYear.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"interestRatePerYear.errors && interestRatePerYear.errors.required\\\">\\r\\n                                            Taxa de Juros ao ano obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"interestRatePerYear.errors && interestRatePerYear.errors.pattern\\\">\\r\\n                                            Juros ano deve ter um valor ate 3 decimais\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Valor do IOF</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.iofAmount\\\" name=\\\"iofAmount\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"iofAmount.invalid && iofAmount.touched\\\" #iofAmount=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"iofAmount.valid || iofAmount.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"iofAmount.errors && iofAmount.errors.required\\\">\\r\\n                                            Valor do IOF obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"iofAmount.errors && iofAmount.errors.pattern\\\">\\r\\n                                            IOF deve ter um valor ate 3 decimais\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Taxa de mora ao dia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.dailyInterestRate\\\" name=\\\"dailyInterestRate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"dailyInterestRate.invalid && dailyInterestRate.touched\\\" #dailyInterestRate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dailyInterestRate.valid || dailyInterestRate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dailyInterestRate.errors && dailyInterestRate.errors.required\\\">\\r\\n                                            Taxa de mora ao dia obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"dailyInterestRate.errors && dailyInterestRate.errors.pattern\\\">\\r\\n                                            Mora deve ter um valor ate 3 decimais\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Taxa Juros ao mês</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.interestRatePerMonth\\\" name=\\\"interestRatePerMonth\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                    [class.is-invalid]=\\\"interestRatePerMonth.invalid && interestRatePerMonth.touched\\\" #interestRatePerMonth=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"interestRatePerMonth.valid || interestRatePerMonth.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"interestRatePerMonth.errors && interestRatePerMonth.errors.required\\\">\\r\\n                                            Taxa de Juros ao mês obrigatória\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"interestRatePerMonth.errors && interestRatePerMonth.errors.pattern\\\">\\r\\n                                            Juros mês deve ter um valor ate 3 decimais\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Indice</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_indexesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #index=\\\"ngModel\\\" [class.is-invalid]=\\\"indexesesHasError && index.touched\\\" \\r\\n                                    name=\\\"index\\\" [(ngModel)]=\\\"contractData.index\\\" (change)=\\\"validateIndexes(index.value)\\\" (blur)=\\\"validateIndexes(index.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha um Indice</option>\\r\\n                                        <option *ngFor=\\\"let index of _indexes\\\">{{ index.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!indexesHasError || index.untouched\\\">Escolha um Indice</small>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Data do primeiro pagamento</label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.paymentStartDate\\\" name=\\\"paymentStartDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"paymentStartDate.invalid && paymentStartDate.touched\\\" #paymentStartDate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"paymentStartDate.valid || paymentStartDate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"paymentStartDate.errors && paymentStartDate.errors.required\\\">\\r\\n                                            Data do primeiro pagamento inválida \\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Data último pagamento</label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.paymentEndDate\\\" name=\\\"paymentEndDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"paymentEndDate.invalid && paymentEndDate.touched\\\" #paymentEndDate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"paymentEndDate.valid || paymentEndDate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"paymentEndDate.errors && paymentEndDate.errors.required\\\">\\r\\n                                            Data último pagamento inválida \\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Data da liberação</label>\\r\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.releaseDate\\\" name=\\\"releaseDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"releaseDate.invalid && releaseDate.touched\\\" #releaseDate=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"releaseDate.valid || releaseDate.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"releaseDate.errors && releaseDate.errors.required\\\">\\r\\n                                            Data da liberação inválida \\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">UF da liberação</label><br>\\r\\n                                    <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_statesLoad\\\">\\r\\n                                        <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                    </div>\\r\\n                                    <select class=\\\"custom-select\\\" #releaseState=\\\"ngModel\\\" [class.is-invalid]=\\\"releaseStatesHasError && releaseState.touched\\\" \\r\\n                                    name=\\\"releaseState\\\" [(ngModel)]=\\\"contractData.releaseState\\\" (change)=\\\"validateReleaseStates(releaseState.value)\\\" (blur)=\\\"validateReleaseStates(releaseState.value)\\\">                            \\r\\n                                        <option value=\\\"default\\\">--Escolha uma UF</option>\\r\\n                                        <option *ngFor=\\\"let state of _releaseStates\\\">{{ state.description }}</option>\\r\\n                                    </select>\\r\\n                                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!releaseStatesHasError || releaseState.untouched\\\">Escolha uma UF</small>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group col-sm-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">Cidade da liberação</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.releaseCity\\\" name=\\\"releaseCity\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^.{4,}$\\\" \\r\\n                                    [class.is-invalid]=\\\"releaseCity.invalid && releaseCity.touched\\\" #releaseCity=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"releaseCity.valid || releaseCity.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"releaseCity.errors && releaseCity.errors.required\\\">\\r\\n                                            Cidade inválida\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"releaseCity.errors && releaseCity.errors.pattern\\\">\\r\\n                                            Cidade inválida minimo 4 posições alfanumericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"form-group col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Número grupo do consórcio</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.consortiumGroupNumber\\\" name=\\\"consortiumGroupNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^.{4,}$\\\" \\r\\n                                    [class.is-invalid]=\\\"consortiumGroupNumber.invalid && consortiumGroupNumber.touched\\\" #consortiumGroupNumber=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"consortiumGroupNumber.valid || consortiumGroupNumber.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"consortiumGroupNumber.errors && consortiumGroupNumber.errors.required\\\">\\r\\n                                            Número do grupo inválido\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"consortiumGroupNumber.errors && consortiumGroupNumber.errors.pattern\\\">\\r\\n                                            Número do grupo minimo 4 posições alfanumericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Número cota do consórcio</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.consortiumQuotaNumber\\\" name=\\\"consortiumQuotaNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^.{4,}$\\\" \\r\\n                                    [class.is-invalid]=\\\"consortiumQuotaNumber.invalid && consortiumQuotaNumber.touched\\\" #consortiumQuotaNumber=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"consortiumQuotaNumber.valid || consortiumQuotaNumber.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"consortiumQuotaNumber.errors && consortiumQuotaNumber.errors.required\\\">\\r\\n                                            Número da cota do consórcio inválida\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"consortiumQuotaNumber.errors && consortiumQuotaNumber.errors.pattern\\\">\\r\\n                                            Número da cota minimo 4 posições alfanumericas\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\"> \\r\\n                                    <button type=\\\"submit\\\" [ngClass]=\\\"{'active':_activeTab==='nav-contrato'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>                                        </div>\\r\\n                                <div class=\\\"col-sm-6\\\">      \\r\\n                                    <button type=\\\"button\\\" data-toggle=\\\"modal\\\" class=\\\"btn btn-rainti btn-block \\\" (click)=\\\"createSummary()\\\" data-target=\\\"#staticBackdrop\\\">Confirmar</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"modal fade\\\" id=\\\"staticBackdrop\\\" data-backdrop=\\\"static\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"staticBackdropLabel\\\" aria-hidden=\\\"true\\\">\\r\\n                                <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_summaryLoad\\\">\\r\\n                                    <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                </div>\\r\\n                                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                                    <div class=\\\"modal-content\\\">\\r\\n                                        <div class=\\\"modal-header\\\">\\r\\n                                        <h5 class=\\\"modal-title\\\" id=\\\"staticBackdropLabel\\\">Resumo do Contrato</h5>\\r\\n                                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n                                                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n                                        </button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"modal-body list-group\\\">\\r\\n                                            <a href=\\\"#\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start active\\\">\\r\\n                                                <p>Credor:</p>\\r\\n                                                <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                                                    <ul>\\r\\n                                                        <li *ngFor=\\\"let credor of _credor\\\">\\r\\n                                                            {{ credor.description }} {{ credor.value }}\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                                <p>Veículo:</p>\\r\\n                                                <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                                                    <ul>\\r\\n                                                        <li *ngFor=\\\"let veiculo of _veiculo\\\">\\r\\n                                                            {{ veiculo.description }} {{ veiculo.value }}\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                                <p>Devedor:</p>\\r\\n                                                <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                                                    <ul>\\r\\n                                                        <li *ngFor=\\\"let devedor of _devedor\\\">\\r\\n                                                            {{ devedor.description }} {{ devedor.value }}\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                                <p>Garantidor:</p>\\r\\n                                                <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                                                    <ul>\\r\\n                                                        <li *ngFor=\\\"let garantidor of _garantidor\\\">\\r\\n                                                            {{ garantidor.description }} {{ garantidor.value }}\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                                <p>Contrato:</p>\\r\\n                                                <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                                                    <ul>\\r\\n                                                        <li *ngFor=\\\"let contrato of _contrato\\\">\\r\\n                                                            {{ contrato.description }} {{ contrato.value }}\\r\\n                                                        </li>\\r\\n                                                    </ul>\\r\\n                                                </div>\\r\\n                                            </a>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"modal-footer\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Voltar</button>\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createContract()\\\">Finalizar</button>\\r\\n                                            <div class=\\\"col border text-center btn-outline-secondary\\\" *ngIf=\\\"_contractLoad\\\">\\r\\n                                                <span class=\\\"spinner-border spinner-border\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div> \\r\\n        </div>\\r\\n    </div>                \\r\\n    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n        {{_errorMessage}}\\r\\n    </div> \\r\\n    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n        {{_createdMessage}}\\r\\n    </div>    \\r\\n\\r\\n\\t\\r\\n\\t\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contratos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <div class=\\\"col\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-md btn-block\\\" routerLink=\\\"/registrar-contrato\\\">Adicionar</button>\\r\\n          </div>        \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let contract of _contracts | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{contract.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>detran:</b> {{contract.detran}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>contrato:</b> {{contract.contract}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>registro:</b> {{contract.contractregisterid}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/contratos/\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/contratos/\\\" routerLinkActive=\\\"active\\\">Desativar</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorGroupAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Gestora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-home')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-address')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-contract')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-home'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">    \\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorGroupData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-address')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                                         \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-address'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <div class=\\\"dropup\\\">\\r\\n                                                <a class=\\\"nav-link \\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Gestora\\r\\n                                                    <span class=\\\"caret\\\"></span></a>\\r\\n                                                      <ul class=\\\"dropdown-menu\\\" style=\\\"padding-top: 10px; height: 150px; overflow: auto; white-space: nowrap;\\\">  \\r\\n                                                        <li *ngFor=\\\"let state of _states\\\">\\r\\n                                                            <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" autocomplete=\\\"off\\\"> {{ state.description }}\\r\\n                                                        </li>\\r\\n                                                        <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                                                          <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n                                                        </li> -->\\r\\n                                                      </ul>\\r\\n                                            </div>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorGroupData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-contract')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                              \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-contract'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"contractForm.form.invalid\\\" (click)=\\\"createCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                             \\r\\n                            </form> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                        {{_createdMessage}}\\r\\n                    </div>                                \\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addCreditorGroupContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroupContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateCreditorGroupContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteCreditorGroupContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Excluir</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroupContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addCreditorGroupContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let creditorGroupContact of creditorGroupContacts | filter: searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{creditorGroupContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{creditorGroupContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{creditorGroupContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"creditorGroupContact.additionalinfo\\\"><b>Info. adicionais:</b> {{creditorGroupContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/gestor-detalhe-contato/{{creditorGroupContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorGroupDetail\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Gestora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contracto</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorGroupData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>              \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorGroupData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">{{creditorGroupData.topic }}</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>    \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>     \\r\\n                            </form> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                        {{_registerUpdated}}\\r\\n                    </div>                                    \\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Gestora</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">          \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{entity.businessname}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>tel.:</b> {{entity.phone}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/gestor-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/gestor-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastro de Credora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-home')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-address')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-contract')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-entities-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-entities\\\" [ngClass]=\\\"{'active':activeTab==='nav-entities'}\\\" (click)=\\\"nextTab('nav-entities')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-entities\\\" aria-selected=\\\"false\\\">Entidades</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-home'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">    \\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                            \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-address')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>   \\t\\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-address'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                            Complemento Endereço obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                       \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>                                                                                    \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div>\\r\\n                                    </div>     \\r\\n                                    <div class=\\\"col-5\\\"> \\r\\n                                        <label for=\\\"uname1\\\">Cep</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                        [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                Cep obrigatório\\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                Cep inválido (Ex.: 12345-678)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-contract')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-contract'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>  \\r\\n                                        </div>   \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\t\\r\\n                                        </div>  \\r\\n                                    </div>  \\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-entities')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-entities'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-entities\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-entities-tab\\\">\\r\\n                            <form class=\\\"form\\\" #entitiesForm=\\\"ngForm\\\"> \\r\\n                                <div class=\\\"form-group\\\" style=\\\"padding-top: 10px;\\\">                                                                                      \\r\\n                                    <div class=\\\"row\\\">         \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Detran(s)</label>                                                     \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <div class=\\\"row\\\">\\r\\n                                                        <div clss=\\\"col-md-4\\\">\\r\\n                                                            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextDetran\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                        </div>\\r\\n                                                        <div clss=\\\"col-md-2\\\" data-toggle=\\\"buttons\\\">\\r\\n                                                            <label class=\\\"btn btn-outline-rainti\\\" >\\r\\n                                                                <input type=\\\"checkbox\\\" (click)=\\\"checkAllOptions()\\\">Todos\\r\\n                                                            </label>\\r\\n                                                        </div >\\r\\n                                                        \\r\\n                                                    </div>                                                    \\r\\n                                                </div>\\r\\n                                                \\r\\n                                            </div>  \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  required>    \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let detran of _detrans | filterDescription : searchTextDetran\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"detran.checked\\\" name=\\\"detranOptions\\\" id=\\\"{{detran.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkDetransChange($event)\\\"> {{ detran.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Gestora(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchCreditorGroup\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>   \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  required>                                                                                \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let creditorgroup of _creditorsgroup | filterDescription : searchCreditorGroup\\\"> \\r\\n                                                        <label class=\\\"btn btn-outline-rainti\\\" >\\r\\n                                                            <input type=\\\"radio\\\" [checked]=\\\"creditorgroup.checked\\\" name=\\\"creditorgroupOptions\\\" id=\\\"{{creditorgroup.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkCreditorsGroupChange($event)\\\"> {{ creditorgroup.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>                                                     \\r\\n                                                </div>  \\r\\n                                            </div>  \\r\\n                                        </div>         \\r\\n                                    </div>    \\r\\n                                            \\r\\n                                </div>\\r\\n                                      \\r\\n                                      \\r\\n                                                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"entitiesForm.form.invalid\\\" (click)=\\\"createCreditor()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>    \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                        {{_createdMessage}}\\r\\n                    </div>    \\r\\n                </div>                             \\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addCreditorContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateCreditorContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteCreditorContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Desativar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addCreditorContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let creditorContact of creditorContacts | filter: searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{creditorContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{creditorContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{creditorContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"creditorContact.additionalinfo\\\"><b>Info. adicionais:</b> {{creditorContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/credor-detalhe-contato/{{creditorContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorDetail\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Credora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                            <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-entities-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-entities\\\" role=\\\"tab\\\" aria-controls=\\\"nav-entities\\\" aria-selected=\\\"false\\\">Entidades</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">{{creditorData.topic }}</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form> \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-entities\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-entities-tab\\\">\\r\\n                            <form class=\\\"form\\\" #entitiesForm=\\\"ngForm\\\"> \\r\\n                                <nav>\\r\\n                                    <div class=\\\"nav nav-tabs2\\\" id=\\\"nav-tab2\\\" role=\\\"tablist2\\\">\\r\\n                                        <a class=\\\"nav-item2 nav-link active\\\" id=\\\"nav-detrans-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-detrans\\\" role=\\\"tab\\\" aria-controls=\\\"nav-detran\\\" aria-selected=\\\"true\\\">Detrans</a>\\r\\n                                        <a class=\\\"nav-item2 nav-link\\\" id=\\\"nav-creditorsgroup-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-creditorsgroup\\\" role=\\\"tab\\\" aria-controls=\\\"nav-creditorsgroup\\\" aria-selected=\\\"false\\\">Gestoras</a>\\r\\n                                    </div>\\r\\n                                </nav>      \\r\\n                                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent2\\\">\\r\\n                                    <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-detrans\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-detrans-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #detransForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione os Detrans</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <label>Selecionar/Limpar Todos: <input type=\\\"checkbox\\\" (click)=\\\"checkAllOptions()\\\"></label><br/>   \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 10px;\\\"required>                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let detran of _detrans \\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"detran.checked\\\" name=\\\"detranOptions\\\" id=\\\"{{detran.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkDetransChange($event)\\\"> {{ detran.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-creditorsgroup\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-creditorsgroup-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #creditorsgroupForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione a Gestora</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <div>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\" (click)=\\\"uncheckAllOptions()\\\">Limpar</button>\\r\\n                                                </div>                                    \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 20px;\\\">                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let creditorgroup of _creditorsgroup\\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"creditorgroup.checked\\\" name=\\\"creditorgroupOptions\\\" id=\\\"{{creditorgroup.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkCreditorsGroupChange($event)\\\"> {{ creditorgroup.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\t\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                        {{_registerUpdated}}\\r\\n                    </div>                                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Credora</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">      \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{entity.businessname}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>tel.:</b> {{entity.phone}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/credor-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/credor-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"detranAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar de Detran</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                            <select class=\\\"custom-select\\\" \\r\\n                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                            [(ngModel)]=\\\"userData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                        </div>    \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                            CNPJ obrigatório \\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                            CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid || topicHasError\\\" (click)=\\\"createDetran()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetran()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                 \\r\\n                       \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addDetranContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetranContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateDetranContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteDetranContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Excluir</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetranContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addDetranContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let detranContact of detranContacts | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{detranContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{detranContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{detranContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"detranContact.additionalinfo\\\"><b>Info. adicionais:</b> {{detranContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/detran-detalhe-contato/{{detranContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"detranAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar de Detran</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <h5>Estado: {{detranData.state}}</h5>\\r\\n                        </div>    \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"detranData.name\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"detranData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                            CNPJ obrigatório \\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                            CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"detranData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"detranData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"detranData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr/> \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"updateDetran()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"deleteDetran()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetran()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                               \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                            {{_registerUpdated}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\" >\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Detran</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <!-- <div class=\\\"col\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addDetran()\\\">Adicionar</button>\\r\\n          </div>   -->      \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">     \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: searchText\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{entity.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>tel.:</b> ({{entity.dddmodel}}) {{entity.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/detran-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/detran-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n\\r\\n\\r\\n</div>\\r\\n\"","export default \"<h1>Em breve</h1>\\r\\n\"","export default \"<h1>Em breve Ajuda</h1>\"","export default \"<h1>Em breve Dashboard</h1>\\r\\n\"","export default \"\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar grupo</h4>                    \\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                          <a class=\\\"nav-item nav-link active\\\" id=\\\"group-detran-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-detran\\\" role=\\\"tab\\\" aria-controls=\\\"group-detran\\\" aria-selected=\\\"true\\\"  >Detran</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"group-creditor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-creditor\\\" role=\\\"tab\\\" aria-controls=\\\"group-creditor\\\" aria-selected=\\\"false\\\" >Credora</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"group-creditor-group-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-creditor-group\\\" role=\\\"tab\\\" aria-controls=\\\"group-creditor-group\\\" aria-selected=\\\"false\\\" >Gestora</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"group-admin-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-admin\\\" role=\\\"tab\\\" aria-controls=\\\"group-admin\\\" aria-selected=\\\"false\\\" >Admin</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                      <!-- Detran TAB -->\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                        <div class=\\\"tab-pane fade show active \\\" id=\\\"group-detran\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-detran-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #detranForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div  class=\\\"col\\\">\\r\\n                                            <label >Grupo</label>                                            \\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"_detranData.planname\\\" name=\\\"detranPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                            [class.is-invalid]=\\\"detranPlanname.invalid && detranPlanname.touched\\\" #detranPlanname=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"detranPlanname.valid || detranPlanname.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"detranPlanname.errors && detranPlanname.errors.required\\\">\\r\\n                                                    nome do grupo obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div >\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_detranData.planstatus\\\" name=\\\"detranSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"detranSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"detranSwitch\\\"></label>                                                \\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                    \\r\\n                                <div class=\\\"form-group\\\">                                   \\r\\n                                    <div class=\\\"row\\\">         \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Entidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextDetran\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                    <div class=\\\"col\\\" *ngFor=\\\"let entities of _detranData.entities | filterEntityName  : searchTextDetran\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"detran.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"detranEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div> \\r\\n                                                                                         \\r\\n                                        \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Funcionalidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextDetranFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\"   data-toggle=\\\"buttons\\\" >                                                                                \\r\\n                                                    <div class=\\\"col\\\"  *ngFor=\\\"let feature of _detranData.features | filterFeatureName : searchTextDetranFunc\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"detran.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                            (change)=\\\"detranFeaturesControl($event)\\\"\\r\\n                                                            > {{feature.featurename }}\\r\\n                                                        </label>\\r\\n                                                    </div>  \\r\\n                                                </div>  \\r\\n                                            </div>    \\r\\n                                                \\r\\n                                              \\r\\n                                        </div>         \\r\\n                                    </div> \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" *ngIf=\\\"!_detranSaving\\\"[disabled]=\\\"detranForm.form.invalid\\\" (click)=\\\"createDetranGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                                Salvar                                                \\r\\n                                            </button>              \\r\\n                                             <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_detranSaving\\\">\\r\\n                                                <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                            </button>\\r\\n                                        </div>  \\r\\n                                        \\r\\n                                        \\r\\n                                    </div>                                                          \\r\\n                                </div> \\r\\n                                <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_detranErrorMessage\\\">\\r\\n                                    {{_detranErrorMessage}}\\r\\n                                </div>      \\r\\n                            </form>\\r\\n                        </div>\\r\\n                    \\r\\n                    <!--  Creditor Tab  -->\\r\\n                    \\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"group-creditor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-creditor-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #creditorForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div  class=\\\"col\\\">\\r\\n                                            <label >Grupo</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"_creditorData.planname\\\" name=\\\"creditorPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                            [class.is-invalid]=\\\"creditorPlanname.invalid && creditorPlanname.touched\\\" #creditorPlanname=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditorPlanname.valid || creditorPlanname.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"creditorPlanname.errors && creditorPlanname.errors.required\\\">\\r\\n                                                    nome do grupo obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div >\\r\\n                                        <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_creditorData.planstatus\\\" name=\\\"creditorSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"creditorSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"creditorSwitch\\\"></label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                      \\r\\n                                <div class=\\\"form-group\\\">                                   \\r\\n                                    <div class=\\\"row\\\">         \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Entidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditor\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                    <div class=\\\"col\\\" *ngFor=\\\"let entities of _creditorData.entities | filterEntityName : searchTextCreditor\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"creditor.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"creditorEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div> \\r\\n                                                                                         \\r\\n                                        \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Funcionalidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditorFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                    <div class=\\\"col\\\"  *ngFor=\\\"let feature of _creditorData.features | filterFeatureName : searchTextCreditorFunc\\\">\\r\\n                                                        \\r\\n                                                        \\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"creditor.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                            (change)=\\\"creditorFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                        </label>\\r\\n                                                    </div>  \\r\\n                                                </div>  \\r\\n                                            </div>    \\r\\n                                            \\r\\n                                        \\r\\n                                        </div>         \\r\\n                                    </div> \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" *ngIf=\\\"!_creditorSaving\\\"[disabled]=\\\"creditorForm.form.invalid\\\" (click)=\\\"createCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                                Salvar                                                \\r\\n                                            </button>              \\r\\n                                             <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_creditorSaving\\\">\\r\\n                                                <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                            </button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                                <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_creditorErrorMessage\\\">\\r\\n                                    {{_creditorErrorMessage}}\\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                    \\r\\n                    <!--  Creditor Group Tab  -->\\r\\n                    \\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"group-creditor-group\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-creditor-group-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #creditorGroupForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div  class=\\\"col\\\">\\r\\n                                            <label >Grupo</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"_creditorGroupData.planname\\\" name=\\\"creditorGroupPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                            [class.is-invalid]=\\\"creditorGroupPlanname.invalid && creditorGroupPlanname.touched\\\" #creditorGroupPlanname=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditorGroupPlanname.valid || creditorGroupPlanname.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"creditorGroupPlanname.errors && creditorGroupPlanname.errors.required\\\">\\r\\n                                                    nome do grupo obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div >\\r\\n                                        <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_creditorGroupData.planstatus\\\" name=\\\"creditorGroupSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"creditorGroupSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"creditorGroupSwitch\\\"></label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                      \\r\\n                                <div class=\\\"form-group\\\">                                   \\r\\n                                    <div class=\\\"row\\\">         \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Entidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditorGroup\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-bottom border-left\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                    <div class=\\\"col\\\" *ngFor=\\\"let entities of _creditorGroupData.entities | filterEntityName : searchTextCreditorGroup\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"creditorGroup.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"creditorGroupEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            \\r\\n                                        </div>                                                                                         \\r\\n                                        \\r\\n                                        <div class=\\\"col-md-6\\\" >  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Funcionalidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTexCreditorGrouptFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                    <div class=\\\"col\\\"  *ngFor=\\\"let feature of _creditorGroupData.features | filterFeatureName : searchTexCreditorGrouptFunc\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"creditorGroup.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                            (change)=\\\"creditorGroupFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                        </label>\\r\\n                                                    </div>  \\r\\n                                                </div>  \\r\\n                                            </div>    \\r\\n                                        </div>         \\r\\n                                    </div> \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" *ngIf=\\\"!_creditorGroupSaving\\\"[disabled]=\\\"creditorGroupForm.form.invalid\\\" (click)=\\\"createCreditorGroupGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                                Salvar                                                \\r\\n                                            </button>              \\r\\n                                             <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_creditorGroupSaving\\\">\\r\\n                                                <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                            </button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                                <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_creditorGroupErrorMessage\\\">\\r\\n                                    {{_creditorGroupErrorMessage}}\\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                    \\r\\n                    <!-- Admin TAB -->\\r\\n                    \\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"group-admin\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-admin-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #adminForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div  class=\\\"col\\\">\\r\\n                                            <label >Grupo</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"_adminData.planname\\\" name=\\\"adminPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                            [class.is-invalid]=\\\"adminPlanname.invalid && adminPlanname.touched\\\" #adminPlanname=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"adminPlanname.valid || adminPlanname.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"adminPlanname.errors && adminPlanname.errors.required\\\">\\r\\n                                                    nome do grupo obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div >\\r\\n                                        <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_adminData.planstatus\\\" name=\\\"adminSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"adminSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"adminSwitch\\\"></label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                   \\r\\n                                \\r\\n                                <div class=\\\"form-group\\\">                                   \\r\\n                                    <div class=\\\"row\\\">         \\r\\n                                        <div class=\\\"col-md-6\\\" >  \\r\\n                                            <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <label >Entidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextAdmin\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                    <div class=\\\"col\\\" *ngFor=\\\"let entities of _adminData.entities | filterEntityName : searchTextAdmin\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"admin.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"adminEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>                                            \\r\\n                                        </div>                                                                                         \\r\\n                                        \\r\\n                                        <div class=\\\"col-md-6\\\">  \\r\\n                                            <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                                <div class=\\\"col\\\" >\\r\\n                                                    <label >Funcionalidade(s)</label>       \\r\\n                                                </div>\\r\\n                                                <div class=\\\"col\\\">\\r\\n                                                    <input class=\\\"form-control\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextAdminFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                                </div>                                                    \\r\\n                                            </div>                                            \\r\\n                                            \\r\\n                                            <div class=\\\"col border-left border-bottom\\\" style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                                <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                    <div class=\\\"col\\\"  *ngFor=\\\"let feature of _adminData.features | filterFeatureName : searchTextAdminFunc\\\">\\r\\n                                                        <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                            <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"admin.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                            (change)=\\\"adminFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                        </label>\\r\\n                                                    </div>  \\r\\n                                                </div>  \\r\\n                                            </div>    \\r\\n                                                \\r\\n                                                \\r\\n                                        </div>         \\r\\n                                    </div> \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" *ngIf=\\\"!_adminSaving\\\"[disabled]=\\\"adminForm.form.invalid\\\" (click)=\\\"createAdminGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                                Salvar                                                \\r\\n                                            </button>              \\r\\n                                             <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_adminSaving\\\">\\r\\n                                                <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                            </button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                                <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_adminErrorMessage\\\">\\r\\n                                    {{_adminErrorMessage}}\\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Grupos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <div class=\\\"col\\\">\\r\\n            <select class=\\\"custom-select\\\" [(ngModel)]=\\\"_status\\\" name=\\\"_status\\\" >                            \\r\\n                <option >Todos</option>\\r\\n                <option >Ativo</option>\\r\\n                <option >Inativo</option>\\r\\n            </select>\\r\\n                              \\r\\n          </div>  \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"_searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let group of _groupMain | filter : _searchText | filterStatus : _status\\\"> \\r\\n        <div class=\\\"card text shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{group.name}}</h5>\\r\\n            <hr/>\\r\\n            <p> <b>Status:</b> {{group.status}}</p>          \\r\\n                     \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/grupo-detalhe/{{group.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-md btn-block\\\" (click)=\\\"disableGroup(group.id)\\\">Desativar</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <!-- form card login -->\\r\\n        <div class=\\\"card shadow\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1\\\">Editar grupo</h4>                    \\r\\n                <hr/>\\r\\n                <nav>\\r\\n                    \\r\\n                    <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link _userGroupEntityType == 'DETRAN' ? active\\\" id=\\\"group-detran-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-detran\\\" role=\\\"tab\\\" aria-controls=\\\"group-detran\\\" aria-selected=\\\"true\\\"  *ngIf=\\\"_userGroupEntityType == 'DETRAN'\\\">Detran</a>\\r\\n                        <a class=\\\"nav-item nav-link _userGroupEntityType == 'CREDORA' ? active \\\" id=\\\"group-creditor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-creditor\\\" role=\\\"tab\\\" aria-controls=\\\"group-creditor\\\" aria-selected=\\\"false\\\" *ngIf=\\\"_userGroupEntityType == 'CREDORA'\\\">Credora</a>\\r\\n                        <a class=\\\"nav-item nav-link _userGroupEntityType == 'GESTORA' ? active \\\" id=\\\"group-creditor-group-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-creditor-group\\\" role=\\\"tab\\\" aria-controls=\\\"group-creditor-group\\\" aria-selected=\\\"false\\\" *ngIf=\\\"_userGroupEntityType == 'GESTORA'\\\">Gestora</a>\\r\\n                        <a class=\\\"nav-item nav-link _userGroupEntityType == 'ADMIN' ? active \\\" id=\\\"group-admin-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#group-admin\\\" role=\\\"tab\\\" aria-controls=\\\"group-admin\\\" aria-selected=\\\"false\\\" *ngIf=\\\"_userGroupEntityType == 'ADMIN'\\\">Admin</a>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                  <!-- Detran TAB -->\\r\\n\\r\\n                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                    \\r\\n                    <div class=\\\"tab-pane fade \\\" [ngClass]=\\\"{ active: _userGroupEntityType == 'DETRAN', show: _userGroupEntityType == 'DETRAN'}\\\" \\r\\n                     id=\\\"group-detran\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-detran-tab\\\" >\\r\\n                        <form class=\\\"form\\\" #detranForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div  class=\\\"col\\\">\\r\\n                                        <label >Grupo</label>                                            \\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"_detranData.planname\\\" name=\\\"detranPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                        [class.is-invalid]=\\\"detranPlanname.invalid && detranPlanname.touched\\\" #detranPlanname=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"detranPlanname.valid || detranPlanname.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"detranPlanname.errors && detranPlanname.errors.required\\\">\\r\\n                                                nome do grupo obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div >\\r\\n                                    <div class=\\\"col-md-2\\\">\\r\\n                                        <label >Status</label>\\r\\n                                        <div class=\\\"onoffswitch\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_detranData.planstatus\\\" name=\\\"detranSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"detranSwitch\\\" checked>\\r\\n                                            <label class=\\\"onoffswitch-label\\\" for=\\\"detranSwitch\\\"></label>                                                \\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                    \\r\\n                            <div class=\\\"form-group\\\">                                   \\r\\n                                <div class=\\\"row\\\">         \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Entidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextDetran\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let entities of _detranData.entities | filterEntityName  : searchTextDetran\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"detran.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"detranEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div> \\r\\n                                                                                     \\r\\n                                    \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Funcionalidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextDetranFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\"   data-toggle=\\\"buttons\\\" >                                                                                \\r\\n                                                <div class=\\\"col\\\"  *ngFor=\\\"let feature of _detranData.features | filterFeatureName : searchTextDetranFunc\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"detran.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                        (change)=\\\"detranFeaturesControl($event)\\\"\\r\\n                                                        > {{feature.featurename }}\\r\\n                                                    </label>\\r\\n                                                </div>  \\r\\n                                            </div>  \\r\\n                                        </div>    \\r\\n                                            \\r\\n                                          \\r\\n                                    </div>         \\r\\n                                </div> \\r\\n                            </div>  \\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                    </div>  \\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"deleteGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-4\\\">                                        \\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"!_detranSaving\\\"[disabled]=\\\"detranForm.form.invalid\\\" (click)=\\\"updateDetranGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                            Salvar                                                \\r\\n                                        </button>              \\r\\n                                         <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_detranSaving\\\">\\r\\n                                            <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                        </button>\\r\\n                                    </div>  \\r\\n                                    \\r\\n                                    \\r\\n                                </div>                                                          \\r\\n                            </div> \\r\\n                            <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_detranErrorMessage\\\">\\r\\n                                {{_detranErrorMessage}}\\r\\n                            </div>      \\r\\n                        </form>\\r\\n                    </div>\\r\\n                \\r\\n                <!--  Creditor Tab  -->\\r\\n                    \\r\\n                    <div class=\\\"tab-pane fade \\\" [ngClass]=\\\"{ active: _userGroupEntityType == 'CREDORA',  show: _userGroupEntityType == 'CREDORA'}\\\"  \\r\\n                    id=\\\"group-creditor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-creditor-tab\\\" >\\r\\n                        <form class=\\\"form\\\" #creditorForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div  class=\\\"col\\\">\\r\\n                                        <label >Grupo</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"_creditorData.planname\\\" name=\\\"creditorPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                        [class.is-invalid]=\\\"creditorPlanname.invalid && creditorPlanname.touched\\\" #creditorPlanname=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditorPlanname.valid || creditorPlanname.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"creditorPlanname.errors && creditorPlanname.errors.required\\\">\\r\\n                                                nome do grupo obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div >\\r\\n                                    <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                        <label >Status</label>\\r\\n                                        <div class=\\\"onoffswitch\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_creditorData.planstatus\\\" name=\\\"creditorSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"creditorSwitch\\\" checked>\\r\\n                                            <label class=\\\"onoffswitch-label\\\" for=\\\"creditorSwitch\\\"></label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                      \\r\\n                            <div class=\\\"form-group\\\">                                   \\r\\n                                <div class=\\\"row\\\">         \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Entidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditor\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let entities of _creditorData.entities | filterEntityName : searchTextCreditor\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"creditor.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"creditorEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div> \\r\\n                                                                                     \\r\\n                                    \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Funcionalidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditorFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                <div class=\\\"col\\\"  *ngFor=\\\"let feature of _creditorData.features | filterFeatureName : searchTextCreditorFunc\\\">\\r\\n                                                    \\r\\n                                                    \\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"creditor.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                        (change)=\\\"creditorFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                    </label>\\r\\n                                                </div>  \\r\\n                                            </div>  \\r\\n                                        </div>    \\r\\n                                        \\r\\n                                    \\r\\n                                    </div>         \\r\\n                                </div> \\r\\n                            </div>  \\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                    </div>  \\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"deleteGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-sm-4\\\">                                        \\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"!_creditorSaving\\\"[disabled]=\\\"creditorForm.form.invalid\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                            Salvar                                                \\r\\n                                        </button>              \\r\\n                                         <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_creditorSaving\\\">\\r\\n                                            <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                        </button>\\r\\n                                    </div>  \\r\\n                                </div>                            \\r\\n                            </div> \\r\\n                            <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_creditorErrorMessage\\\">\\r\\n                                {{_creditorErrorMessage}}\\r\\n                            </div> \\r\\n                        </form>\\r\\n                    </div>\\r\\n                \\r\\n                <!--  Creditor Group Tab  -->\\r\\n                \\r\\n                    <div class=\\\"tab-pane fade \\\" [ngClass]=\\\"{ active: _userGroupEntityType == 'GESTORA',  show: _userGroupEntityType == 'GESTORA'}\\\"  \\r\\n                    id=\\\"group-creditor-group\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-creditor-group-tab\\\" >\\r\\n                        <form class=\\\"form\\\" #creditorGroupForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div  class=\\\"col\\\">\\r\\n                                        <label >Grupo</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"_creditorGroupData.planname\\\" name=\\\"creditorGroupPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                        [class.is-invalid]=\\\"creditorGroupPlanname.invalid && creditorGroupPlanname.touched\\\" #creditorGroupPlanname=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditorGroupPlanname.valid || creditorGroupPlanname.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"creditorGroupPlanname.errors && creditorGroupPlanname.errors.required\\\">\\r\\n                                                nome do grupo obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div >\\r\\n                                    <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                        <label >Status</label>\\r\\n                                        <div class=\\\"onoffswitch\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_creditorGroupData.planstatus\\\" name=\\\"creditorGroupSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"creditorGroupSwitch\\\" checked>\\r\\n                                            <label class=\\\"onoffswitch-label\\\" for=\\\"creditorGroupSwitch\\\"></label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                      \\r\\n                            <div class=\\\"form-group\\\">                                   \\r\\n                                <div class=\\\"row\\\">         \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Entidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextCreditorGroup\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-bottom border-left\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let entities of _creditorGroupData.entities | filterEntityName : searchTextCreditorGroup\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"creditorGroup.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"creditorGroupEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div>                                                                                         \\r\\n                                    \\r\\n                                    <div class=\\\"col-md-6\\\" >  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Funcionalidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTexCreditorGrouptFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                <div class=\\\"col\\\"  *ngFor=\\\"let feature of _creditorGroupData.features | filterFeatureName : searchTexCreditorGrouptFunc\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"creditorGroup.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                        (change)=\\\"creditorGroupFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                    </label>\\r\\n                                                </div>  \\r\\n                                            </div>  \\r\\n                                        </div>    \\r\\n                                    </div>         \\r\\n                                </div> \\r\\n                            </div>  \\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                    </div> \\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"deleteGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                    </div> \\r\\n                                    <div class=\\\"col-sm-4\\\">                                        \\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"!_creditorGroupSaving\\\"[disabled]=\\\"creditorGroupForm.form.invalid\\\" (click)=\\\"updateCreditorGroupGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                            Salvar                                                \\r\\n                                        </button>              \\r\\n                                         <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_creditorGroupSaving\\\">\\r\\n                                            <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                        </button>\\r\\n                                    </div>  \\r\\n                                </div>                            \\r\\n                            </div> \\r\\n                            <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_creditorGroupErrorMessage\\\">\\r\\n                                {{_creditorGroupErrorMessage}}\\r\\n                            </div> \\r\\n                        </form>\\r\\n                    </div>\\r\\n                \\r\\n                <!-- Admin TAB -->\\r\\n                \\r\\n                    <div class=\\\"tab-pane fade \\\" [ngClass]=\\\"{ active: _userGroupEntityType == 'ADMIN',  show: _userGroupEntityType == 'ADMIN'}\\\"   \\r\\n                    id=\\\"group-admin\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"group-admin-tab\\\" >\\r\\n                        <form class=\\\"form\\\" #adminForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div  class=\\\"col\\\">\\r\\n                                        <label >Grupo</label>                                        \\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"_adminData.planname\\\" name=\\\"adminPlanname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        placeholder=\\\"Digite o nome do plano\\\"\\r\\n                                        [class.is-invalid]=\\\"adminPlanname.invalid && adminPlanname.touched\\\" #adminPlanname=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"adminPlanname.valid || adminPlanname.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"adminPlanname.errors && adminPlanname.errors.required\\\">\\r\\n                                                nome do grupo obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div >\\r\\n                                    <div class=\\\"col-md-2 align-items-end\\\">\\r\\n                                        <label >Status</label>\\r\\n                                        <div class=\\\"onoffswitch\\\">\\r\\n                                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"_adminData.planstatus\\\" name=\\\"adminSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"adminSwitch\\\" checked>\\r\\n                                            <label class=\\\"onoffswitch-label\\\" for=\\\"adminSwitch\\\"></label>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>                   \\r\\n                            \\r\\n                            <div class=\\\"form-group\\\">                                   \\r\\n                                <div class=\\\"row\\\">         \\r\\n                                    <div class=\\\"col-md-6\\\" >  \\r\\n                                        <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Entidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextAdmin\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let entities of _adminData.entities | filterEntityName : searchTextAdmin\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"entities.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\" [checked]=\\\"entities.checked\\\"  id=\\\"admin.{{entities.entityname}}\\\" autocomplete=\\\"off\\\" (change)=\\\"adminEntitiesControl($event)\\\"> {{ entities.entityname }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div> \\r\\n                                                                                     \\r\\n                                    \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border\\\" style=\\\"padding-bottom: 10px; padding-top : 10px\\\">\\r\\n                                            <div class=\\\"col\\\" >\\r\\n                                                <label >Funcionalidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextAdminFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\" style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >                                                                                \\r\\n                                                <div class=\\\"col\\\"  *ngFor=\\\"let feature of _adminData.features | filterFeatureName : searchTextAdminFunc\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\" [ngClass]=\\\"feature.checked ? 'active' : 'default'\\\"  >\\r\\n                                                        <input type=\\\"checkbox\\\"  [checked]=\\\"feature.checked\\\"  id=\\\"admin.{{feature.featurename }}\\\" autocomplete=\\\"off\\\"\\r\\n                                                        (change)=\\\"adminFeaturesControl($event)\\\"> {{feature.featurename }}\\r\\n                                                    </label>\\r\\n                                                </div>  \\r\\n                                            </div>  \\r\\n                                        </div>    \\r\\n                                            \\r\\n                                            \\r\\n                                    </div>         \\r\\n                                </div> \\r\\n                            </div>  \\r\\n                            <hr/>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"backToGroups()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                    </div>  \\r\\n                                    <div class=\\\"col-sm-4\\\">                   \\r\\n                                        <button type=\\\"submit\\\" (click)=\\\"deleteGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                    </div>  \\r\\n                                    <div class=\\\"col-sm-4\\\">                                        \\r\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"!_adminSaving\\\"[disabled]=\\\"adminForm.form.invalid\\\" (click)=\\\"updateAdminGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">\\r\\n                                            Alterar                                                \\r\\n                                        </button>              \\r\\n                                         <button class=\\\"btn btn-outline-rainti btn-block\\\" type=\\\"button\\\" disabled *ngIf=\\\"_adminSaving\\\">\\r\\n                                            <span class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>                                               \\r\\n                                        </button>\\r\\n                                    </div>  \\r\\n                                </div>                            \\r\\n                            </div> \\r\\n                            <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_adminErrorMessage\\\">\\r\\n                                {{_adminErrorMessage}}\\r\\n                            </div> \\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n        </div>\\r\\n        <!-- /form card login -->\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastro de usuário</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                          <a class=\\\"nav-item nav-link active\\\" id=\\\"user-data-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-data\\\" role=\\\"tab\\\" aria-controls=\\\"user-data\\\" aria-selected=\\\"true\\\"  >Dados do Usuário</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"user-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-profile\\\" role=\\\"tab\\\" aria-controls=\\\"user-profile\\\" aria-selected=\\\"false\\\" >Perfil de Acesso</a>\\r\\n                        </div>\\r\\n                      </nav>\\r\\n                      <!-- User data TAB -->\\r\\n                      <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                        <div class=\\\"tab-pane fade show active \\\" id=\\\"user-data\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-data-tab\\\" >\\r\\n\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\" >\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.firstName\\\" name=\\\"firstName\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                                    nome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Sobrenome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"lastName.invalid && lastName.touched\\\" #lastName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"lastName.valid || lastName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"lastName.errors && lastName.errors.required\\\">\\r\\n                                                    sobrenome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>  \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col\\\">                                            \\r\\n                                            <label for=\\\"uname1\\\">CPF</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.cpf\\\" name=\\\"cpf\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}(-\\\\d{2})$\\\" placeHolder=\\\"123.123.123-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cpf.invalid && cpf.touched\\\" #cpf=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cpf.valid || cpf.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cpf.errors && cpf.errors.required\\\">\\r\\n                                                    CPF obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cpf.errors && cpf.errors.pattern\\\">\\r\\n                                                    CPF inválido (Ex.: 123.123.123-12)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"registerUserData.status\\\" name=\\\"statusSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"statusSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"statusSwitch\\\"></label>                                                \\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </div>\\r\\n                                </div> \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome de usuário</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                                    Nome de usuário obrigatória\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                          \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                                                    \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>                                            \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"nextTab('user-profile')\\\"  class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                                                            \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                          </form>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- User Profile TAB -->\\r\\n                        <form\\r\\n                         class=\\\"tab-pane fade\\\" id=\\\"user-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-profile-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #profileForm=\\\"ngForm\\\" ></form>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div>\\r\\n                                        <h5>Selecione o Grupo de Acesso</h5>                                                                 \\r\\n                                    </div>                                        \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Grupo(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let group of _groupsData | filter : searchText\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti \\\"   >\\r\\n                                                        <input type=\\\"radio\\\" name=\\\"options\\\" id=\\\"{{group.id}}\\\" autocomplete=\\\"off\\\" \\r\\n                                                        (click)=\\\"featuresControl($event)\\\"> {{ group.name }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div> \\r\\n                                    \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block float-right\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"profileForm.form.invalid\\\" (click)=\\\"createUser()\\\" class=\\\"btn btn-rainti btn-block \\\">Finalizar</button>                \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                                       \\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n\"","export default \"\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar usuário</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                          <a class=\\\"nav-item nav-link active\\\" id=\\\"user-data-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-data\\\" role=\\\"tab\\\" aria-controls=\\\"user-data\\\" aria-selected=\\\"true\\\"  >Dados do Usuário</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"user-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-profile\\\" role=\\\"tab\\\" aria-controls=\\\"user-profile\\\" aria-selected=\\\"false\\\" >Perfil de Acesso</a>\\r\\n                        </div>\\r\\n                      </nav>\\r\\n                      <!-- User data TAB -->\\r\\n                      <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                        <div class=\\\"tab-pane fade show active \\\" id=\\\"user-data\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-data-tab\\\" >\\r\\n\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\" >\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.firstname\\\" name=\\\"firstName\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                                    nome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Sobrenome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.lastname\\\" name=\\\"lastName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"lastName.invalid && lastName.touched\\\" #lastName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"lastName.valid || lastName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"lastName.errors && lastName.errors.required\\\">\\r\\n                                                    sobrenome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>  \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col\\\">                                            \\r\\n                                            <label for=\\\"uname1\\\">CPF</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.cpf\\\" name=\\\"cpf\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}(-\\\\d{2})$\\\" placeHolder=\\\"123.123.123-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cpf.invalid && cpf.touched\\\" #cpf=\\\"ngModel\\\" required [disabled]=\\\"true\\\" >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cpf.valid || cpf.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cpf.errors && cpf.errors.required\\\">\\r\\n                                                    CPF obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cpf.errors && cpf.errors.pattern\\\">\\r\\n                                                    CPF inválido (Ex.: 123.123.123-12)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-2\\\">\\r\\n                                            <label >Status</label>\\r\\n                                            <div class=\\\"onoffswitch\\\">\\r\\n                                                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"registerUserData.status\\\" name=\\\"statusSwitch\\\" class=\\\"onoffswitch-checkbox\\\" id=\\\"statusSwitch\\\" checked>\\r\\n                                                <label class=\\\"onoffswitch-label\\\" for=\\\"statusSwitch\\\"></label>                                                \\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </div>\\r\\n                                </div> \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome de usuário</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.username\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                                    Nome de usuário obrigatória\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.ddd\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                          \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                                                    \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>                                            \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"nextTab('user-profile')\\\"  class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                                                            \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                          </form>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- User Profile TAB -->\\r\\n                        <form\\r\\n                         class=\\\"tab-pane fade\\\" id=\\\"user-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-profile-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #profileForm=\\\"ngForm\\\" ></form>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"col\\\">\\r\\n                                        <h5>Selecione o Grupo de Acesso</h5>                                                                 \\r\\n                                    </div>                                        \\r\\n                                    <div class=\\\"col-md-6\\\">  \\r\\n                                        <div class=\\\"form border \\\" style=\\\"padding-bottom: 10px; padding-top: 10px;\\\">\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <label >Grupo(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                        </div>                                            \\r\\n                                        \\r\\n                                        <div class=\\\"col border-left border-bottom\\\"style=\\\"padding-top: 10px; height: 350px; overflow-y: scroll; white-space: nowrap;\\\">\\r\\n                                            <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  >    \\r\\n                                                <div class=\\\"col\\\" *ngFor=\\\"let group of _groupsData | filter : searchText\\\">\\r\\n                                                    <label class=\\\"btn btn-outline-rainti\\\" [ngClass]=\\\"group.checked ? 'active' : 'default'\\\"   >\\r\\n                                                        <input type=\\\"radio\\\" name=\\\"options\\\" [checked]=\\\"group.checked\\\" id=\\\"{{group.id}}\\\" autocomplete=\\\"off\\\" \\r\\n                                                        (click)=\\\"featuresControl($event)\\\"> {{ group.name }}\\r\\n                                                    </label>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div> \\r\\n                                    \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block float-right\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"profileForm.form.invalid\\\" (click)=\\\"updateUser()\\\" class=\\\"btn btn-rainti btn-block \\\">Finalizar</button>                \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                                       \\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Usuários</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <div class=\\\"col\\\">\\r\\n            <select class=\\\"custom-select\\\" [(ngModel)]=\\\"_status\\\" name=\\\"_status\\\" >                            \\r\\n                <option >Todos</option>\\r\\n                <option >Ativo</option>\\r\\n                <option >Inativo</option>\\r\\n            </select>\\r\\n                              \\r\\n          </div>  \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"_searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>             \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\" style=\\\"padding-top: 10px; height: 650px; overflow-y: scroll; white-space: nowrap;\\\">    \\r\\n    <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let users of user | filterUser : _searchText | filterStatus : _status \\\"> \\r\\n      <div class=\\\"card text shadow rounded\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{users.name}} {{users.lastname}}</h5>\\r\\n          <hr/>\\r\\n          <p class=\\\"card-text\\\"><b>status: </b> {{users.status}}</p>\\r\\n          <p class=\\\"card-text\\\"><b>usuário: </b> {{users.username}} </p>\\r\\n          <p class=\\\"card-text\\\"><b>e-mail: </b> {{users.email}}</p> \\r\\n          <p class=\\\"card-text\\\"><b>CPF: </b> {{users.cpf}}</p>         \\r\\n                    \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\">\\r\\n          <div class=\\\"row align-items-center mb-1\\\">    \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/usuarios-detalhe/{{users.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n            </div>        \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-md btn-block\\\" (click)=\\\"deleteUser()\\\">Desativar</button>\\r\\n            </div>            \\r\\n          </div>         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n      <!-- <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let users of user | filter: fristname : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{users.name}} {{users.lastname}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>usuário: </b> {{users.username}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail: </b> {{users.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/usuario-detalhe\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" (click)=\\\"deleteUser()\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  \\r\\n</div>\\r\\n\"","export default \"<p>audit-contract-detail works!</p>\\r\\n\"","export default \"<p>audit-creditor-detail works!</p>\\r\\n\"","export default \"<p>audit-detran-detail works!</p>\\r\\n\"","export default \"<p>audit-group-detail works!</p>\\r\\n\"","export default \"<p>audit-user-detail works!</p>\\r\\n\"","export default \"<p>financial-transaction works!</p>\\r\\n\"","export default \"<div class=\\\"card shadow rounded\\\" style=\\\"padding: 30px\\\">\\r\\n  <div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Bilhetagem de transações</h1>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr />\\r\\n  <div style=\\\"padding-top: 10px; height: 650px; white-space: nowrap;\\\"> \\r\\n    <form #form=\\\"ngForm\\\"> \\r\\n\\r\\n        <div class=\\\"d-flex flex-row-reverse bd-highlight p-2 bd-highlight d-inline-block\\\">\\r\\n        <div class=\\\"ml-1\\\">\\r\\n          <button class=\\\"btn btn-sm  btn-rainti\\\"  (click)=\\\"exportAsXLSX()\\\"> Exportar XLS <fa-icon\\r\\n            [icon]=\\\"['fas', 'file-excel']\\\"></fa-icon></button>\\r\\n        </div>\\r\\n        <div>\\r\\n          <button class=\\\"btn btn-sm  btn-rainti\\\" (click)=\\\"CsvFile()\\\"> Exportar CSV <fa-icon\\r\\n            [icon]=\\\"['fas', 'file-excel']\\\"></fa-icon></button>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <div class=\\\"row\\\"> \\r\\n        <div class=\\\"col-8 d-inline-block\\\">\\r\\n            <div class=\\\"form-group panel panel-primary filterable d-inline-block px-2\\\" *ngIf=\\\"filter=='comFiltros'\\\">\\r\\n              <strong>Detran</strong>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"search\\\" [(ngModel)]=\\\"detran\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group  panel panel-primary filterable d-inline-block\\\" *ngIf=\\\"filter=='comFiltros'\\\">\\r\\n              <strong>Credora</strong>\\r\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"search\\\" [(ngModel)]=\\\"creditor\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group d-inline-block  px-2\\\" *ngIf=\\\"filter=='comFiltros'\\\">\\r\\n              <strong>Data de</strong>\\r\\n              <input type=\\\"date\\\" [(ngModel)]=\\\"startDate\\\" name=\\\"startDate\\\" class=\\\"form-control form-control-sm\\\" \\r\\n              #start=\\\"ngModel\\\" [value]=\\\"startDate\\\" >\\r\\n            </div>\\r\\n            <div class=\\\"form-group d-inline-block\\\" *ngIf=\\\"filter=='comFiltros'\\\">\\r\\n              <strong>Data até</strong>\\r\\n              <input type=\\\"date\\\" [(ngModel)]=\\\"endDate\\\" name=\\\"endDate\\\" class=\\\"form-control form-control-sm\\\" \\r\\n              #end=\\\"ngModel\\\"  [value]=\\\"endDate\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        <div class=\\\"col-4 d-inline-block\\\">\\r\\n          <div *ngIf=\\\"filter=='semFiltros'\\\" class=\\\"d-flex flex-row-reverse bd-highlight bd-highlight d-inline-block\\\">\\r\\n            <button class=\\\"btn btn-sm  btn-rainti\\\" (click)=\\\"markAsActive('comFiltros')\\\"> Filtro <fa-icon\\r\\n                [icon]=\\\"['fas', 'filter']\\\"></fa-icon></button>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"filter=='comFiltros'\\\" class=\\\"d-flex flex-row-reverse bd-highlight  bd-highlight d-inline-block\\\">\\r\\n            <button class=\\\"btn btn-sm  btn-rainti\\\" (click)=\\\"markAsActive('semFiltros')\\\"> Apagar filtro <fa-icon\\r\\n                [icon]=\\\"['fas', 'ban']\\\"></fa-icon></button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n        <table class=\\\"table table-hover\\\">\\r\\n          <thead class=\\\"bg-rainti text-light font-weight-lighter\\\">\\r\\n    \\r\\n            <th>Contrato</th>\\r\\n            <th>Gestora</th>\\r\\n            <th>Credora</th>\\r\\n            <th>Chassi</th>\\r\\n            <th>Detran</th>\\r\\n            <th>Taxa</th>\\r\\n            <th>Data</th>\\r\\n            <th>Status</th>\\r\\n            <br>\\r\\n          </thead>\\r\\n    \\r\\n          <tbody>\\r\\n            <tr\\r\\n              *ngFor=\\\"let dataTransactionBillings of getArray() | slice: (page-1) * pageSize : (page-1) * pageSize + pageSize\\\">\\r\\n    \\r\\n              <td>{{ dataTransactionBillings.Contrato }}</td>\\r\\n              <td>{{ dataTransactionBillings.Gestora }}</td>\\r\\n              <td>{{ dataTransactionBillings.Credora }}</td>\\r\\n              <td>{{ dataTransactionBillings.Chassi }}</td>\\r\\n              <td>{{ dataTransactionBillings.Detran }}</td>\\r\\n              <td>{{ dataTransactionBillings.Taxa | currency: 'BRL' }}</td>\\r\\n              <td>{{ dataTransactionBillings.Data | date: 'dd/MM/yyyy'}}</td>\\r\\n              <td>{{ dataTransactionBillings.Status }}</td>\\r\\n            </tr>\\r\\n    \\r\\n          </tbody>\\r\\n    \\r\\n        </table>\\r\\n        <div class=\\\"d-flex flex-row-reverse bd-highlight p-2 bd-highlight\\\">\\r\\n          <ngb-pagination [collectionSize]=\\\"getArray().length\\\" [(page)]=\\\"page\\\" [maxSize]=\\\"5\\\" [rotate]=\\\"true\\\"\\r\\n            [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\r\\n        </div>\\r\\n    </form>\\r\\n    <hr />\\r\\n    <div class=\\\"col\\\" class=\\\"text-right\\\">\\r\\n      <h4>Total: {{ getTotalCost() | currency:'BRL'}}</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"col-md-5 mx-auto\\\" style=\\\"padding-top: 150px;\\\">\\r\\n    <div class=\\\"card shadow\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <!-- <a routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" class=\\\"float-right btn btn-outline-primary\\\">Cadastre-se</a> -->\\r\\n            <h3 class=\\\"card-title\\\">Bem-vindo</h3>\\r\\n            <hr />\\r\\n            <form #loginForm=\\\"ngForm\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Usuário</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"loginUserData.userName\\\" name=\\\"userName\\\"\\r\\n                        class=\\\"form-control rounded-0\\\" #user=\\\"ngModel\\\" [class.is-invalid]=\\\"user.invalid && user.touched\\\"\\r\\n                        required>\\r\\n                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"user.valid || user.untouched\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"user.errors && user.errors.required\\\">\\r\\n                            Nome de usuário obrigatório\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div> <!-- form-group// -->\\r\\n                <div class=\\\"form-group\\\">\\r\\n\\r\\n                    <label>Senha</label>\\r\\n\\r\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\"\\r\\n                        class=\\\"form-control rounded-0\\\" #password=\\\"ngModel\\\"\\r\\n                        [class.is-invalid]=\\\"password.invalid && password.touched\\\" required>\\r\\n\\r\\n                    <a class=\\\"text\\\" routerLink=\\\"/recuperar-senha\\\" routerLinkActive=\\\"active\\\">Esqueceu sua senha? Clique\\r\\n                        aqui</a>\\r\\n                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"password.valid || password.untouched\\\">\\r\\n                        <small class=\\\"text-danger\\\" *ngIf=\\\"password.errors && password.errors.required\\\">\\r\\n                            Senha obrigatória\\r\\n                        </small>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <!-- <div class=\\\"form-group\\\"> \\r\\n                            <div class=\\\"checkbox\\\">\\r\\n                                <label> <input type=\\\"checkbox\\\"> Salvar senha </label>\\r\\n                            </div>                         \\r\\n                         </div> -->\\r\\n                <hr />\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button [disabled]=\\\"loginForm.form.invalid\\\" type=\\\"button\\\" (click)=\\\"loginUser()\\\"\\r\\n                        class=\\\"btn btn-rainti btn-block\\\">Entrar</button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"alert alert-danger text-center text-danger text-wrap\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                    {{_errorMessage}}\\r\\n                </div>\\r\\n                <img src=\\\"../assets/images/logo.png\\\" class=\\\"col-md-3 mx-auto\\\" >\\r\\n                \\r\\n            </div>\\r\\n            \\r\\n\\r\\n            \\r\\n\\r\\n\\r\\n\\r\\n        </div> <!-- card.// -->\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">CPF inválido!</h4>\\r\\n                <h6 class=\\\"card-title mb-4 mt-1 text-center\\\">Verifique seu CPF e tente novamente.</h6>\\r\\n                <button type=\\\"button\\\" routerLink=\\\"/recuperar-senha\\\" class=\\\"btn btn-danger btn-block\\\">Voltar</button>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">E-mail enviado com sucesso!</h4>\\r\\n                <h6 class=\\\"card-title mb-4 mt-1 text-center\\\">Acesse seu e-mail e cadastre sua senha novamente.</h6>\\r\\n                <button type=\\\"button\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-rainti btn-block\\\">Voltar</button>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">Esqueceu sua senha?</h4>\\r\\n                <form class=\\\"form\\\" #recover=\\\"ngForm\\\"> \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"recoverPasswordData.cpf\\\" placeHolder=\\\"Digite seu CPF no formato 123.123.123-12\\\" name=\\\"cpf\\\" \\r\\n                        class=\\\"form-control rounded-0\\\"\\r\\n                        pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}(-\\\\d{2})$\\\" \\r\\n                        [class.is-invalid]=\\\"cpf.invalid && cpf.touched\\\" #cpf=\\\"ngModel\\\" required >\\r\\n                        <small  class=\\\"text-secondary\\\" >\\r\\n                            (Ex.: 123.123.123-12)\\r\\n                        </small>\\r\\n                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cpf.valid || cpf.untouched\\\">\\r\\n                            <small  class=\\\"text-danger\\\"*ngIf=\\\"cpf.errors && cpf.errors.required\\\">\\r\\n                                CPF obrigatório \\r\\n                            </small>\\r\\n                            <small  class=\\\"text-danger\\\" *ngIf=\\\"cpf.errors && cpf.errors.pattern\\\">\\r\\n                                CPF inválido (Ex.: 123.123.123-12)\\r\\n                            </small>\\r\\n                        </div>\\r\\n                    \\r\\n                    \\r\\n                    </div> <!-- form-group// -->   \\r\\n                             \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" [disabled]=\\\"recover.form.invalid\\\" (click)=\\\"recoverPassword()\\\" class=\\\"btn btn-rainti btn-block\\\">Resetar senha</button>\\r\\n                    </div>                                                      \\r\\n                </form>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Verifique seu e-mail</h4>\\r\\n                    <hr/>\\r\\n                    <label for=\\\"uname1\\\">Um código de verificação foi enviado ao seu e-mail cadastrado.<br>Esse código tem validade de <b>15 minutos.</b></label>\\r\\n                    <hr/>\\r\\n                    <form  class=\\\"form\\\" #resetForm=\\\"ngForm\\\">                        \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Código de verificação</label>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"resetCode.valid || resetCode.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"resetCode.errors && resetCode.errors.required\\\">\\r\\n                                    Código Obrigatório\\r\\n                                </small>\\r\\n                            </div>\\r\\n                            \\r\\n                            <form #resetCode=\\\"ngForm\\\">\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode1\\\" name=\\\"resetCode1\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode1.invalid && resetCode1.touched\\\" #resetCode1=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" (blur)=\\\"resetCode1.valid\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode2\\\" name=\\\"resetCode2\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode2.invalid && resetCode2.touched\\\" #resetCode2=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode3\\\" name=\\\"resetCode3\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode3.invalid && resetCode3.touched\\\" #resetCode3=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode4\\\" name=\\\"resetCode4\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode4.invalid && resetCode4.touched\\\" #resetCode4=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode5\\\" name=\\\"resetCode5\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode5.invalid && resetCode5.touched\\\" #resetCode5=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                    <div class=\\\"col-md-1\\\">\\r\\n                                        <input type=\\\"text\\\" style=\\\"text-align: center;\\\"  maxlength=\\\"1\\\" [(ngModel)]=\\\"resetUserData.resetCode6\\\" name=\\\"resetCode6\\\" class=\\\"form-control rounded-5 form-fixer\\\" \\r\\n                                        [class.is-invalid]=\\\"resetCode6.invalid && resetCode6.touched\\\" #resetCode6=\\\"ngModel\\\" required >\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </form> \\r\\n                            <!-- <small  class=\\\"text-primary\\\">\\r\\n                                <a class=\\\"text\\\" (click)=\\\"doSomething\\\" style=\\\"cursor:pointer\\\">Gerar novo código</a>\\r\\n                            </small> -->\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nova Senha</label>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"resetUserData.password\\\" name=\\\"password\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"password.invalid && password.touched\\\" #password=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"password.valid || password.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"password.errors && password.errors.required\\\">\\r\\n                                            senha obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Confirme sua senha</label>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"resetUserData.confirmedPassword\\\" name=\\\"confirmedPassword\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"confirmedPassword.invalid && confirmedPassword.touched\\\" #confirmedPassword=\\\"ngModel\\\" \\r\\n                                    pattern=\\\"(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\\\d$@$!%*?&].{8,}\\\"\\r\\n                                    appConfirmEqualValidator=\\\"password\\\"required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"confirmedPassword.valid || confirmedPassword.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"confirmedPassword.errors && confirmedPassword.errors.required\\\">\\r\\n                                            confirmação de senha obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"confirmedPassword.valid || confirmedPassword.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"confirmedPassword.errors && confirmedPassword.errors?.notEqual\\\">\\r\\n                                            confirmação de senha incorreta\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>              \\r\\n                        <hr/>                            \\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <button  type=\\\"submit\\\" (click)=\\\"backToEmailSender()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <button [disabled]=\\\"resetForm.form.invalid\\\" type=\\\"submit\\\" (click)=\\\"resetUser()\\\" class=\\\"btn btn-rainti btn-block\\\">Confirmar</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './system-access/login/login.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { DetranMainComponent } from './entities/detran/detran-main/detran-main.component';\r\nimport { RegistrarComponent } from './entities/registrar/registrar.component'; \r\nimport { HomeComponent } from './home/home.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { PasswordRecoverComponent } from './system-access/password-recover/password-recover.component';\r\nimport { DetranDetailComponent } from './entities/detran/detran-detail/detran-detail.component';\r\nimport { DetranContactsComponent } from './entities/detran/detran-contacts/detran-contacts.component';\r\nimport { PasswordRecoverSuccessComponent } from './system-access/password-recover-success/password-recover-success.component';\r\nimport { PasswordRecoverFailedComponent } from './system-access/password-recover-failed/password-recover-failed.component';\r\nimport { PasswordResetComponent } from './system-access/password-reset/password-reset.component';\r\nimport { DetranAddComponent } from './entities/detran/detran-add/detran-add.component';\r\nimport { DetranContactAddComponent } from './entities/detran/detran-contact-add/detran-contact-add.component';\r\nimport { CreditorMainComponent } from './entities/creditor/creditor-main/creditor-main.component';\r\nimport { CreditorDetailComponent } from './entities/creditor/creditor-detail/creditor-detail.component';\r\nimport { CreditorAddComponent } from './entities/creditor/creditor-add/creditor-add.component';\r\nimport { CreditorContactsComponent } from './entities/creditor/creditor-contacts/creditor-contacts.component';\r\nimport { CreditorContactDetailComponent } from './entities/creditor/creditor-contact-detail/creditor-contact-detail.component';\r\nimport { CreditorContactAddComponent } from './entities/creditor/creditor-contact-add/creditor-contact-add.component';\r\nimport { CreditorGroupMainComponent } from './entities/creditor-group/creditor-group-main/creditor-group-main.component';\r\nimport { CreditorGroupDetailComponent } from './entities/creditor-group/creditor-group-detail/creditor-group-detail.component';\r\nimport { CreditorGroupAddComponent } from './entities/creditor-group/creditor-group-add/creditor-group-add.component';\r\nimport { CreditorGroupContactsComponent } from './entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component';\r\nimport { CreditorGroupContactDetailComponent } from './entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component';\r\nimport { CreditorGroupContactAddComponent } from './entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component';\r\nimport { DetranContactDetailComponent } from './entities/detran/detran-contact-detail/detran-contact-detail.component';\r\nimport { UserAddComponent } from './registers/user/user-add/user-add.component';\r\nimport { UserMainComponent } from './registers/user/user-main/user-main.component';\r\nimport { GroupAddComponent } from './registers/groups/group-add/group-add.component';\r\nimport { GroupMainComponent } from './registers/groups/group-main/group-main.component';\r\nimport { ContractMainComponent } from './contract/contract-main/contract-main.component';\r\nimport { ContractAddComponent } from './contract/contract-add/contract-add.component';\r\nimport { TransactionBillingComponent } from './reports/transaction-billing/transaction-billing.component';\r\nimport { FinancialTransactionComponent } from './reports/financial-transaction/financial-transaction.component';\r\nimport { GroupsDetailComponent } from './registers/groups/groups-detail/groups-detail.component';\r\nimport { UserDetailComponent } from './registers/user/user-detail/user-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'usuarios-adicionar',\r\n    component: UserAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'usuarios-detalhe/:id',\r\n    component: UserDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'usuarios',\r\n    component: UserMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n  path: 'grupos',\r\n  component: GroupMainComponent,\r\n  canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'grupos-adicionar',\r\n    component: GroupAddComponent,\r\n    canActivate: [AuthGuard]\r\n    },\r\n\r\n  {\r\n    path: 'grupo-detalhe/:id',\r\n    component: GroupsDetailComponent,\r\n    canActivate: [AuthGuard]\r\n    },\r\n\r\n  {\r\n    path: 'recuperar-senha',\r\n    component: PasswordRecoverComponent,\r\n  },\r\n  {\r\n    path: 'recuperar-senha-enviado',\r\n    component: PasswordRecoverSuccessComponent,\r\n  },\r\n  {\r\n    path: 'recuperar-senha-falha',\r\n    component: PasswordRecoverFailedComponent\r\n  },\r\n  {\r\n    path: 'recuperar-senha-reset/:id',\r\n    component: PasswordResetComponent\r\n  },\r\n  {\r\n    path: 'detran',\r\n    component: DetranMainComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {        \r\n    path: 'detran-detalhe/:id',\r\n    component: DetranDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-contatos/:id',\r\n    component: DetranContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar',\r\n    component: DetranAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar-contato',\r\n    component: DetranContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-detalhe-contato/:id',\r\n    component: DetranContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  \r\n  {\r\n    path: 'detran-adicionar',\r\n    component: DetranAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credora',\r\n    component: CreditorMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-adicionar',\r\n    component: CreditorAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-detalhe/:id',\r\n    component: CreditorDetailComponent,\r\n    canActivate : [AuthGuard],\r\n  },\r\n  {\r\n    path: 'credor-contatos/:id',\r\n    component: CreditorContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-detalhe-contato/:id',\r\n    component: CreditorContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'credor-adicionar-contato/:id',\r\n    component: CreditorContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestora',\r\n    component: CreditorGroupMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-detalhe/:id',\r\n    component: CreditorGroupDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-contatos/:id',\r\n    component: CreditorGroupContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-detalhe-contato/:id',\r\n    component: CreditorGroupContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-adicionar',\r\n    component: CreditorGroupAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-adicionar-contato/:id',\r\n    component: CreditorGroupContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar-contato/:id',\r\n    component: DetranContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'registradora',\r\n    component: RegistrarComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'principal',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'ajuda',\r\n    component: HelpComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'contratos',\r\n    component: ContractMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  \r\n  {\r\n    path: 'registrar-contrato',\r\n    component: ContractAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'bilhetagem-transacoes',\r\n    component: TransactionBillingComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'transacoes-financeiras',\r\n    component: FinancialTransactionComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { EntitiesService } from './entities/entities-services/entities.service';\r\nimport { AuthService } from './system-access/system-access-services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { DetranService } from './detran.service';\r\nimport { NgbModal, NgbActiveModal, ModalDismissReasons, NgbModalConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent    implements OnInit {\r\n    title = 'SRC - Sistema de Registro de Contrato';\r\n\r\n    entityTypes: Array<any> = []   \r\n\r\n    detranAllowed = ''\r\n\r\n    constructor(private _entitiesService: EntitiesService, \r\n      public _authService: AuthService,\r\n      public _router: Router,\r\n      public _detranService: DetranService,\r\n      private _modalService: NgbModal,\r\n      private _config: NgbModalConfig) {\r\n        _config.backdrop = 'static';\r\n        _config.keyboard = false;\r\n        \r\n    } \r\n\r\n    \r\n    ngOnInit() {\r\n      this._entitiesService.getEntitiesTypes()\r\n      .subscribe(      \r\n        res => this.entityTypes = res,\r\n        err => console.log(err)\r\n      ) \r\n    }  \r\n\r\n    /* ngAfterViewInit(){\r\n      window.document.activeElement.ownerDocument.body.style.backgroundColor = '#F0F0F0';\r\n   } */\r\n\r\n    checkDetranAvaiability(content){\r\n      this._detranService.getStates()\r\n      .subscribe( \r\n        res => {\r\n          if(res.length == 0){            \r\n            this._modalService.open(content)  \r\n          }else{\r\n            this._router.navigate([\"/detran-adicionar\"])\r\n          }\r\n          \r\n      },\r\n      err =>{\r\n        console.log(err)\r\n      }        \r\n      )     \r\n    }   \r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport pt from '@angular/common/locales/pt';\r\nregisterLocaleData(pt)\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { UserIdleModule } from 'angular-user-idle';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './system-access/login/login.component';\r\n\r\nimport { AuthService } from './system-access/system-access-services/auth.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { FilterPipe } from './pipes/filter-name.pipe';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegistrarComponent } from './entities/registrar/registrar.component';\r\nimport { DetranContactsComponent } from './entities/detran/detran-contacts/detran-contacts.component';\r\nimport { PasswordRecoverComponent } from './system-access/password-recover/password-recover.component';\r\nimport { DetranDetailComponent } from './entities/detran/detran-detail/detran-detail.component';\r\nimport { PasswordRecoverSuccessComponent } from './system-access/password-recover-success/password-recover-success.component';\r\nimport { PasswordRecoverFailedComponent } from './system-access/password-recover-failed/password-recover-failed.component';\r\nimport { PasswordResetComponent } from './system-access/password-reset/password-reset.component';\r\nimport { ConfirmEqualValidator } from '../custom/confirm-equal-validator';\r\nimport { DetranAddComponent } from './entities/detran/detran-add/detran-add.component';\r\nimport { DetranContactAddComponent } from './entities/detran/detran-contact-add/detran-contact-add.component';\r\nimport { DetranMainComponent } from './entities/detran/detran-main/detran-main.component';\r\n\r\nimport { CreditorMainComponent } from './entities/creditor/creditor-main/creditor-main.component';\r\nimport { CreditorDetailComponent } from './entities/creditor/creditor-detail/creditor-detail.component';\r\nimport { CreditorAddComponent } from './entities/creditor/creditor-add/creditor-add.component';\r\nimport { CreditorContactsComponent } from './entities/creditor/creditor-contacts/creditor-contacts.component';\r\nimport { CreditorContactAddComponent } from './entities/creditor/creditor-contact-add/creditor-contact-add.component';\r\nimport { CreditorContactDetailComponent } from './entities/creditor/creditor-contact-detail/creditor-contact-detail.component';\r\n\r\nimport { CreditorGroupMainComponent } from './entities/creditor-group/creditor-group-main/creditor-group-main.component';\r\nimport { CreditorGroupDetailComponent } from './entities/creditor-group/creditor-group-detail/creditor-group-detail.component';\r\nimport { CreditorGroupAddComponent } from './entities/creditor-group/creditor-group-add/creditor-group-add.component';\r\nimport { CreditorGroupContactsComponent } from './entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component';\r\nimport { CreditorGroupContactAddComponent } from './entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component';\r\nimport { CreditorGroupContactDetailComponent } from './entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component';\r\nimport { DetranContactDetailComponent } from './entities/detran/detran-contact-detail/detran-contact-detail.component';\r\nimport { GroupAddComponent } from './registers/groups/group-add/group-add.component';\r\nimport { GroupMainComponent } from './registers/groups/group-main/group-main.component';\r\nimport { UserAddComponent } from './registers/user/user-add/user-add.component';\r\nimport { UserMainComponent } from './registers/user/user-main/user-main.component';\r\nimport { ContractAddComponent } from './contract/contract-add/contract-add.component';\r\nimport { ContractMainComponent } from './contract/contract-main/contract-main.component';\r\nimport { CpfCnpjModule } from 'ng2-cpf-cnpj';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FinancialTransactionComponent } from './reports/financial-transaction/financial-transaction.component';\r\nimport { TransactionBillingComponent } from './reports/transaction-billing/transaction-billing.component';\r\nimport { AuditUserDetailComponent } from './reports/audit-history/audit-user-detail/audit-user-detail.component';\r\nimport { AuditGroupDetailComponent } from './reports/audit-history/audit-group-detail/audit-group-detail.component';\r\nimport { AuditContractDetailComponent } from './reports/audit-history/audit-contract-detail/audit-contract-detail.component';\r\nimport { AuditDetranDetailComponent } from './reports/audit-history/audit-detran-detail/audit-detran-detail.component';\r\nimport { AuditCreditorDetailComponent } from './reports/audit-history/audit-creditor-detail/audit-creditor-detail.component';\r\nimport { FilterEntityNamePipe } from './pipes/filter-entity-name.pipe';\r\nimport { FilterFeatureNamePipe } from './pipes/filter-feature-name.pipe';\r\nimport { GroupsDetailComponent } from './registers/groups/groups-detail/groups-detail.component';\r\nimport { FilterStatusPipe } from './pipes/filter-status.pipe';\r\nimport { FilterDescriptionPipe } from './pipes/filter-description.pipe';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faFilter, faBan, faFileExcel } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { ExcelService } from './reports/transaction-billing/excel.service';\r\nimport { CsvFileService } from './reports/transaction-billing/csv.service';\r\nimport { UserDetailComponent } from './registers/user/user-detail/user-detail.component';\r\nimport { FilterUserPipe } from './pipes/filter-user.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    FilterPipe,\r\n    HelpComponent,\r\n    HomeComponent,\r\n    RegistrarComponent,\r\n    DetranContactsComponent,\r\n    PasswordRecoverComponent,\r\n    DetranDetailComponent,\r\n    PasswordRecoverSuccessComponent,\r\n    PasswordRecoverFailedComponent,\r\n    PasswordResetComponent,\r\n    ConfirmEqualValidator,\r\n    DetranAddComponent,\r\n    DetranContactAddComponent,\r\n    DetranMainComponent,\r\n\r\n    CreditorMainComponent,\r\n    CreditorAddComponent,\r\n    CreditorDetailComponent,\r\n    CreditorContactsComponent,\r\n    CreditorContactAddComponent,\r\n    CreditorContactDetailComponent,\r\n\r\n    CreditorGroupMainComponent,\r\n    CreditorGroupAddComponent,\r\n    CreditorGroupDetailComponent,\r\n    CreditorGroupContactsComponent,\r\n    CreditorGroupContactAddComponent,\r\n    CreditorGroupContactDetailComponent,\r\n    DetranContactDetailComponent,\r\n    GroupAddComponent,\r\n    GroupMainComponent,\r\n    UserAddComponent,\r\n    UserMainComponent,\r\n\r\n    ContractAddComponent,\r\n    ContractMainComponent,\r\n\r\n    FinancialTransactionComponent,\r\n    TransactionBillingComponent,\r\n \r\n    AuditUserDetailComponent,\r\n    AuditGroupDetailComponent,\r\n    AuditContractDetailComponent,\r\n    AuditDetranDetailComponent,\r\n    AuditCreditorDetailComponent,\r\n    FilterEntityNamePipe,\r\n    FilterFeatureNamePipe,\r\n    GroupsDetailComponent,\r\n    FilterStatusPipe,\r\n    FilterDescriptionPipe,\r\n    UserDetailComponent,\r\n    FilterUserPipe,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    UserIdleModule,\r\n    CpfCnpjModule,\r\n    CurrencyMaskModule,\r\n    NgbModule,\r\n    FontAwesomeModule,\r\n\r\n  ],\r\n  providers: [AuthService, AuthGuard, ExcelService, CsvFileService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true,  },\r\n    {provide: LOCALE_ID, useValue: 'pt'}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n\r\n})\r\nexport class AppModule { \r\n\r\n  constructor(){\r\n    \r\n    library.add(faFilter, faBan, faFileExcel);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './system-access/system-access-services/auth.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n      const currentUser = this._auth.loggedIn()\r\n      if(currentUser){\r\n       \r\n        console.log(route.component.toString().split(' ')[1].split(' ')[0])\r\n        \r\n        return true \r\n      }else{\r\n        this._router.navigate(['./login'])\r\n        return false\r\n      }\r\n    }\r\n\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0L2NvbnRyYWN0LWFkZC9jb250cmFjdC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ContractAddService } from '../../contract/contract-services/contract-add.service';\r\nimport { Location } from '@angular/common';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-contract-add',\r\n  templateUrl: './contract-add.component.html',\r\n  styleUrls: ['./contract-add.component.css']\r\n})\r\n\r\nexport class ContractAddComponent implements OnInit {\r\n  public cpfcnpjActiveConsumer ='cpf';\r\n  public cpfcnpjActive ='cpf';\r\n  //ContractData devem ter a ordem das tab da tela e a ordem que sao mostrada na tela\r\n  //ContractData tem campos que nao vao a ser mostrado no resumen, por isso estao de ultimos //special\r\n  _contractLoad = false\r\n  _summaryLoad = false\r\n  _creditorsLoad = false\r\n  _detransLoad = false\r\n  _statesLoad = false\r\n  _speciesLoad = false\r\n  _yearsLoad = false\r\n  _brandsLoad = false\r\n  _modelsLoad = false\r\n  _modelYearsLoad = false\r\n  _alienTypesLoad = false\r\n  _indexesLoad = false\r\n  \r\n  contractData = {\r\n\r\n    // Credor\r\n    creditor: '',\r\n  \r\n    // Detran\r\n    detran: '',\r\n\r\n    // Veículo\r\n    chassi: '',\r\n    remarkedChassi: 'NÃO',\r\n    plate: '',\r\n    plateState: '',\r\n    renavam: '',\r\n    licensingState: '',\r\n    specie: '',\r\n    fabricationYear: '',\r\n    brand: '',\r\n    model: '',\r\n    modelYear: '',\r\n    color: '',\r\n\r\n    // Devedor\r\n    buyerName: '',\r\n    buyerEmail: '',\r\n    buyerValue: '',\r\n    buyerDddPhone: '',\r\n    buyerPhone: '',\r\n    buyerDddMobile: '',\r\n    buyerMobile: '',\r\n    buyerAddress: '',\r\n    buyerStreetnumber: '',\r\n    buyerAddresscomplement: '',\r\n    buyerDistrict: '',\r\n    buyerCounty: '',\r\n    buyerState: '',\r\n    buyerZipCode: '',\r\n    \r\n    // Garantidor\r\n    guarantor: '',\r\n    guarantorValue: '',\r\n\r\n    // Contrato\r\n    contract: '',\r\n    contractDate:'',\r\n    alienType:'',\r\n    restrictionNumber:'',\r\n    totalDebitAmount: '',\r\n    numberOfInstallments: '',\r\n    installmentValue: '',\r\n    iofAmount: '',\r\n    contractRegistrationAmount: '',\r\n    interestRatePerMonth:'',\r\n    interestRatePerYear: '',\r\n    interestRate: '',\r\n    dailyInterestRate:'',\r\n    index: '',\r\n    paymentStartDate: '',\r\n    paymentEndDate: '',\r\n    releaseDate:'',\r\n    releaseState:'',\r\n    releaseCity: '',\r\n    consortiumGroupNumber: '',\r\n    consortiumQuotaNumber: '',\r\n\r\n    //Special\r\n    chassiConfirmation: '',\r\n    buyerType: 'cpf',\r\n    guarantorType: 'cpf',\r\n    detranId: 0,\r\n    creditorId: 0,\r\n    buyerStateId: 0,\r\n    plateStateId: 0,\r\n    licensingStateId: 0,\r\n    specieId: 0,\r\n    alienTypeId: 0,\r\n    indexId: 0,\r\n    releaseStateId: 0,\r\n  }\r\n  \r\n  _errorMessage = ''\r\n  _createdMessage = ''\r\n  _arraySearch = []\r\n\r\n  _brandId: 0\r\n  _modelId: 0\r\n  _modelYearId: 0\r\n\r\n  _detrans : Array<any> = []\r\n  _creditors: Array<any>=[];\r\n  _buyerStates: Array<any>=[];\r\n  _plateStates: Array<any>=[];\r\n  _licensingStates: Array<any>=[];\r\n  _alienTypes : Array<any> = []; \r\n  _indexes: Array<any>=[];\r\n  _species: Array<any>=[]; \r\n  _fabricationYears: Array<any>=[];\r\n  _modelYears: Array<any>=[];\r\n  _brands: Array<any>=[];\r\n  _models: Array<any>=[];\r\n  _releaseStates : Array<any> = [];\r\n  _credor = [];\r\n  _veiculo = []; \r\n  _devedor = []; \r\n  _garantidor = []; \r\n  _contrato = [];\r\n\r\n  detransHasError = true\r\n  creditorsHasError = true\r\n  buyerStatesHasError = true\r\n  plateStatesHasError = true\r\n  licensingStatesHasError = true\r\n  alienTypesHasError = true\r\n  indexesHasError = true\r\n  speciesHasError = true\r\n  fabricationYearsHasError = true\r\n  modelYearsHasError = true\r\n  brandsHasError = true\r\n  modelsHasError = true\r\n  releaseStatesHasError = true\r\n\r\n  _activeTab = \"nav-credor\"\r\n  _guarantorType = 'cpf'\r\n  _buyerType = 'cpf'\r\n  \r\n  dddHasError = true\r\n  \r\n  constructor(private _contractAddService: ContractAddService,\r\n    private _router: Router,\r\n    private _location: Location\r\n  ) { }\r\n\r\n  validateDetrans(value) {\r\n    this.detransHasError = false;\r\n    if (value === 'default') {\r\n      this.detransHasError = true;\r\n    } else {\r\n      this.contractData.detranId = this.findId(this._detrans, value)\r\n    }\r\n  }\r\n  validateCreditors(value) {\r\n  this.creditorsHasError = false;\r\n  if (value === 'default') {\r\n      this.creditorsHasError = true;\r\n    } else {\r\n      this.contractData.creditorId = this.findId(this._creditors, value)\r\n    }\r\n  }\r\n  validateBuyerStates(value) {\r\n    this.buyerStatesHasError = false;\r\n    if (value === 'default') {\r\n        this.buyerStatesHasError = true;\r\n    } else {\r\n      this.contractData.buyerStateId = this.findId(this._buyerStates, value)\r\n    }\r\n  }\r\n  validatePlateStates(value) {\r\n    this.plateStatesHasError = false;\r\n    if (value === 'default') {\r\n        this.plateStatesHasError = true;\r\n    } else {\r\n      this.contractData.plateStateId = this.findId(this._plateStates, value)\r\n    }\r\n  }  \r\n  validateLicensingStates(value) {\r\n    this.licensingStatesHasError = false;\r\n    if (value === 'default') {\r\n        this.licensingStatesHasError = true;\r\n    } else {\r\n      this.contractData.licensingStateId = this.findId(this._licensingStates, value)\r\n    }\r\n  }  \r\n  validateAlienTypes(value) {\r\n    this.alienTypesHasError = false;\r\n    if (value === 'default') {\r\n       this.alienTypesHasError = true;\r\n     } else {\r\n      this.contractData.alienTypeId = this.findId(this._alienTypes, value)\r\n     }\r\n  }\r\n  validateIndexes(value) {\r\n    this.indexesHasError = false;\r\n    if (value === 'default') {\r\n       this.indexesHasError = true;\r\n     } else {\r\n      this.contractData.indexId = this.findId(this._indexes, value)\r\n     }\r\n  }\r\n  validateReleaseStates(value) {\r\n    this.releaseStatesHasError = false;\r\n    if (value === 'default') {\r\n       this.releaseStatesHasError = true;\r\n     } else {\r\n      this.contractData.releaseStateId = this.findId(this._releaseStates, value)\r\n     }\r\n  }\r\n  validateSpecies(value) {\r\n    this.speciesHasError = false;\r\n    if (value === 'default') {\r\n       this.speciesHasError = true;\r\n     } else {\r\n      this.contractData.specieId = this.findId(this._species, value)\r\n     }\r\n  }\r\n  validateFabricationYears(value) {\r\n    this.fabricationYearsHasError = false;\r\n    if (value === 'default') {\r\n       this.fabricationYearsHasError = true;\r\n     } \r\n  }\r\n  validateBrands(e, value) {\r\n    this.brandsHasError = false;\r\n    if (value === 'default') {\r\n       this.brandsHasError = true;\r\n     } else {\r\n       if (e.type == \"change\") {\r\n          this._brandId = this.findId(this._brands, value)\r\n          this.getModels(this._brandId)\r\n       }\r\n     }\r\n  }  \r\n  validateModels(e, value) {\r\n    this.modelsHasError = false;\r\n    if (value === 'default') {\r\n       this.modelsHasError = true;\r\n     } else {\r\n       if (e.type == \"change\") {\r\n          this._modelId = this.findId(this._models, value)\r\n          this.getModelYears(this._brandId, this._modelId)\r\n        }\r\n    }\r\n  }\r\n  validateModelYears(value) {\r\n    this.modelYearsHasError = false;\r\n    if (value === 'default') {\r\n       this.modelYearsHasError = true;\r\n    } \r\n  } \r\n\r\n  ngOnInit() {\r\n    this._detransLoad = true\r\n    this._contractAddService.getDetrans()\r\n    .subscribe(\r\n      res => {\r\n          console.log(res)\r\n          this._detrans = res\r\n          this._detransLoad = false\r\n        },\r\n        error => {\r\n          this._detransLoad = false\r\n          console.log(error)\r\n          this._errorMessage = error.error \r\n        }\r\n    )   \r\n    this._creditorsLoad = true\r\n    this._contractAddService.getCreditors()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._creditors = res;   \r\n        this._creditorsLoad = false\r\n      },\r\n      error => {\r\n          this._creditorsLoad = false\r\n          console.log(error)\r\n          this._errorMessage = error.error\r\n        }\r\n    )  \r\n    this._statesLoad = true\r\n    this._contractAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._buyerStates = res\r\n        this._plateStates = res\r\n        this._releaseStates = res\r\n        this._licensingStates = res\r\n        this._statesLoad = false\r\n      },\r\n      error => {\r\n        this._statesLoad = false\r\n        console.log(error)\r\n        this._errorMessage = error.error }\r\n    )\r\n    this._alienTypesLoad = true\r\n    this._contractAddService.getAlienTypes()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._alienTypes = res\r\n        this._alienTypesLoad = false\r\n      },\r\n      error => {\r\n        this._alienTypesLoad = false\r\n        console.log(error)\r\n        this._errorMessage = error.error }\r\n    )\r\n    this._indexesLoad = true\r\n    this._contractAddService.getIndexes()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._indexes = res\r\n        this._indexesLoad = false\r\n      },\r\n      error => {\r\n        this._indexesLoad = false\r\n        console.log(error)\r\n        this._errorMessage = error.error }\r\n    )\r\n    this._yearsLoad = true\r\n    this._contractAddService.getYears()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._modelYears = res\r\n        this._fabricationYears = res\r\n        this._yearsLoad = false\r\n      },\r\n      error => {\r\n        this._yearsLoad = false\r\n        console.log(error)\r\n        this._errorMessage = error.error }\r\n    )\r\n    this._speciesLoad = true\r\n    this._contractAddService.getSpecies()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._species = res\r\n        this._speciesLoad = false\r\n      },\r\n      error => {\r\n        this._speciesLoad = false\r\n        console.log(error)\r\n        this._errorMessage = error.error }\r\n    )\r\n    this._brandsLoad = true\r\n    this._contractAddService.getBrands()\r\n    .subscribe(\r\n      res => {\r\n          console.log(res)\r\n          this._brands = res\r\n          this._models = []\r\n          this._modelYears = []\r\n          this._brandsLoad = false\r\n        },\r\n        error => {\r\n          this._brandsLoad = false\r\n          console.log(error)\r\n          this._brands = []\r\n          this._models = []\r\n          this._modelYears = []\r\n          this._errorMessage = error.error \r\n        }\r\n    )   \r\n  }\r\n  \r\n  nextTab(tab) {\r\n    this._activeTab = tab;\r\n  }\r\n\r\n  findId(array, value) {\r\n    if (!value) {\r\n      return -1  \r\n    }        \r\n    let id = array.map(p => {return p.description}).indexOf(value)\r\n    return array[id].id\r\n  }\r\n\r\n  getModels(brandId) {\r\n    this._modelId = 0\r\n    this._modelYearId = 0\r\n    this.contractData.model = ''\r\n    this.contractData.modelYear = ''\r\n    this._modelsLoad = true\r\n    this._contractAddService.getModels(brandId)\r\n    .subscribe(\r\n      res => {\r\n          console.log(res)\r\n          this._models = res\r\n          this._modelYears = []\r\n          this._modelsLoad = false\r\n        },\r\n        error => {console.log(error)\r\n          this._modelsLoad = false\r\n          this._models = []\r\n          this._modelYears = []\r\n          this._errorMessage = error.error \r\n        }\r\n    )   \r\n  }\r\n\r\n  getModelYears(brandId, modelId) {\r\n    this._modelYearId = 0\r\n    this.contractData.modelYear = ''\r\n    this._modelYearsLoad = true\r\n    this._contractAddService.getModelYears(brandId, modelId)\r\n    .subscribe(\r\n      res => {\r\n          console.log(res)\r\n          this._modelYears = res\r\n          this._modelYearsLoad = false\r\n        },\r\n        error => {console.log(error)\r\n          this._modelYearsLoad = false\r\n          this._modelYears = []\r\n          this._errorMessage = error.error \r\n        }\r\n    )  \r\n  }\r\n\r\n  cpfCnpjSelect(origin: string, type: string) {\r\n    if (origin == 'guarantor') {\r\n      this._guarantorType = type\r\n    }\r\n    if (origin == 'buyer') {\r\n      this._buyerType = type\r\n    }\r\n  }\r\n \r\n  chassiSelect(value) {\r\n    this.contractData.remarkedChassi = value\r\n  }\r\n\r\n  createSummary(){\r\n    let pos = 0\r\n    //Credor\r\n    let _credorResumem = [\"Credor: \", \"Detran: \"]\r\n    this._credor = this.getSummary(_credorResumem, pos, '')\r\n    pos = pos + _credorResumem.length\r\n\r\n    //Veiculo\r\n    let _veiculoResumem = [\"Chassi: \", \"Chassi Remarcado: \", \"Placa: \", \"UF da placa: \", \r\n                           \"Renavan: \", \"UF Licenciamento: \", \"Espécie: \", \"Ano de Fabricação: \",\r\n                           \"Marca: \", \"Modelo: \", \"Ano do modelo: \", \"Cor: \"]    \r\n    this._veiculo = this.getSummary(_veiculoResumem, pos, '')\r\n    pos = pos + _veiculoResumem.length\r\n\r\n    //Devedor\r\n    let _devedorResumem = [\"Nome completo: \", \"E-mail: \", \"REPLACE\", \"Ddd Telefone: \", \r\n                           \"Telefone: \", \"Ddd Celular: \", \"Celular: \", \"Logradouro: \",\r\n                           \"Número: \", \"Complemento: \", \"Bairro: \", \"Município: \", \"Estado: \", \"Cep: \"]\r\n    this._devedor = this.getSummary(_devedorResumem, pos, this._buyerType)\r\n    pos = pos + _devedorResumem.length\r\n\r\n    // Garantidor\r\n    let _garantidorResumem = [\"Nome do Garantidor: \", \"REPLACE\"]\r\n    this._garantidor = this.getSummary(_garantidorResumem, pos, this._guarantorType)\r\n    pos = pos + _garantidorResumem.length\r\n\r\n    // Contrato\r\n    let _contratoResumem = [\"Contrato: \", \"Data do Contrato: \", \"Tipo de Gravame: \", \"Núm. da restrição: \", \r\n                            \"Valor financiamento: \", \"Parcelas: \", \"Valor da Parcela: \", \"Valor do IOF: \", \r\n                            \"Valor do Registro de Contrato: \", \"Taxa Juros ao mês: \", \"Taxa Juros ao ano: \", \r\n                            \"Taxa Juros de Multa: \", \"Taxa de mora ao dia: \", \"Indice: \", \"Data primer pagamento: \",\r\n                            \"Data ultimo pagamento: \", \"Data da liberação: \", \"UF da liberação: \", \"Cidade da liberação: \",\r\n                            \"Núm. grupo do consórcio: \", \"Núm. cota do consórcio: \"]\r\n    this._contrato = this.getSummary(_contratoResumem, pos, '')\r\n }\r\n  \r\n  getSummary(summary, pos, newText){\r\n    let _values = Object.values(this.contractData)\r\n    let i = 0\r\n    let newDescrition\r\n    let newValue\r\n    let array = []\r\n    for (; i < summary.length; i++) {\r\n      newDescrition = (summary[i] == \"REPLACE\") ? newText.toUpperCase() : summary[i]\r\n      newValue = (_values[pos] == null) ? '' : _values[pos]\r\n      array.push({\"description\" : newDescrition, \"value\" : newValue})\r\n      pos = pos + 1\r\n    }\r\n    return array\r\n  }\r\n\r\n  backToContract(){\r\n    this._location.back()\r\n  }\r\n\r\n  createContract(){\r\n    this.contractData.guarantorType = this._guarantorType\r\n    this.contractData.buyerType = this._buyerType\r\n    //this._contractLoad = true\r\n    this._contractAddService.createContract(this.contractData)\r\n       .subscribe(\r\n         res => {\r\n          this._createdMessage = 'Contrato Adicionado'\r\n          this._contractLoad = false\r\n          this._router.navigate(['/contratos'])\r\n        },\r\n         error => {\r\n           this._contractLoad = false\r\n           console.log(error)\r\n           this._errorMessage = error.error }\r\n         )  \r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0L2NvbnRyYWN0LW1haW4vY29udHJhY3QtbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ContractMainService } from '../../contract/contract-services/contract-main.service';\r\n\r\n@Component({\r\n  selector: 'app-contract-main',\r\n  templateUrl: './contract-main.component.html',\r\n  styleUrls: ['./contract-main.component.css']\r\n})\r\nexport class ContractMainComponent implements OnInit {\r\n \r\n  _contracts: Array<any> = []\r\n  searchText= ''\r\n\r\n  constructor(private _contractMainService: ContractMainService,\r\n              private _router: Router){}   \r\n\r\n  ngOnInit() {\r\n    this._contractMainService.getContracts()\r\n    .subscribe(      \r\n      res => this._contracts = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n addContract(){\r\n    this._router.navigate(['/registrar-contrato'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContractAddService {\r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n\r\n  private _detransUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-detrans\"\r\n  private _creditorsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-creditors\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n  private _alienTypesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-alien-types\"\r\n  private _indexesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-indexes\"\r\n  private _speciesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-species\"\r\n  private _yearsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-years\"\r\n  private _brandsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-brands\"\r\n  private _modelsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-models/\"\r\n  private _modelYearsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/get-modelYears/\"\r\n  private _createContractUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/create-contract\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n  \r\n  getDetrans(){\r\n    return this.http.get<any>(this._detransUrl)\r\n  }\r\n\r\n  getCreditors(){\r\n  return this.http.get<any>(this._creditorsUrl)\r\n  }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  getAlienTypes(){\r\n    return this.http.get<any>(this._alienTypesUrl)\r\n  }\r\n  \r\n  getIndexes(){\r\n    return this.http.get<any>(this._indexesUrl)\r\n  }\r\n\r\n  getSpecies(){\r\n    return this.http.get<any>(this._speciesUrl)\r\n  }\r\n\r\n  getYears(){\r\n    return this.http.get<any>(this._yearsUrl)\r\n  }\r\n  \r\n  getBrands(){\r\n    return this.http.get<any>(this._brandsUrl)\r\n  }\r\n  \r\n  getModels(id){\r\n    return this.http.get<any>(this._modelsUrl+id)\r\n  }\r\n\r\n  getModelYears(modelId, brandId){\r\n    return this.http.get<any>(this._modelYearsUrl+modelId+'\\\\'+brandId)\r\n  }\r\n  \r\n  createContract(user){\r\n    return this.http.post<any>(this._createContractUrl, user)\r\n  }\r\n  \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContractMainService {\r\n  \r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n  \r\n  private _contractsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/contract-register/contracts\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getContracts(){\r\n    return this.http.get<any>(this._contractsUrl)\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranService {\r\n\r\n  private _appServerConfig = require('../assets/configs/config-app-server.json')\r\n\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/states-detran-add\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n}\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWFkZC9jcmVkaXRvci1ncm91cC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorGroupAddService } from '../creditor-group-services/creditor-group-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-add',\r\n  templateUrl: './creditor-group-add.component.html',\r\n  styleUrls: ['./creditor-group-add.component.css']\r\n})\r\nexport class CreditorGroupAddComponent implements OnInit {\r\n  creditorGroupData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddnodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,  \r\n  }\r\n  _errorMessage = ''\r\n  _states : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  activeTab = \"nav-home\"\r\n  \r\n  constructor(private _creditorGroupAddService: CreditorGroupAddService,\r\n    private _router: Router,\r\n    private _location: Location) { }\r\n\r\n    \r\n  validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n\r\n  }\r\n  ngOnInit() {\r\n    this._creditorGroupAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n  }\r\n\r\n  nextTab(activeTab) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  createCreditorGroup(){\r\n    this._creditorGroupAddService.createCreditorGroup(this.creditorGroupData)\r\n      .subscribe(\r\n        res => {\r\n          this._router.navigate(['/gestora'])\r\n        },\r\n        error => {console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )  \r\n    \r\n  }\r\n  backToCreditorGroup(){\r\n    this._location.back()\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtYWRkL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupAddContactService } from '../creditor-group-services/creditor-group-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contact-add',\r\n  templateUrl: './creditor-group-contact-add.component.html',\r\n  styleUrls: ['./creditor-group-contact-add.component.css']\r\n})\r\nexport class CreditorGroupContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorGroupAddContact: CreditorGroupAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n \r\n  addCreditorGroupContact(){ \r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {   \r\n        this._creditorGroupAddContact.addCreditorGroupContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToCreditorGroupContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtZGV0YWlsL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupContactDetailService } from '../creditor-group-services/creditor-group-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contact-detail',\r\n  templateUrl: './creditor-group-contact-detail.component.html',\r\n  styleUrls: ['./creditor-group-contact-detail.component.css']\r\n})\r\nexport class CreditorGroupContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorGroupContactDetail: CreditorGroupContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.getCreditorGroupContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateCreditorGroupContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.updateCreditorGroupContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteCreditorGroupContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.deleteCreditorGroupContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToCreditorGroupContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToCreditorGroupContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3RzL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreditorGroupContactsService } from '../creditor-group-services/creditor-group-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contacts',\r\n  templateUrl: './creditor-group-contacts.component.html',\r\n  styleUrls: ['./creditor-group-contacts.component.css']\r\n})\r\nexport class CreditorGroupContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  creditorGroupContacts: Array<any> = []\r\n\r\n  constructor(private _creditorGroupContactsService: CreditorGroupContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactsService.getCreditorGroupContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.creditorGroupContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addCreditorGroupContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/gestor-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWRldGFpbC9jcmVkaXRvci1ncm91cC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupDetailService } from '../creditor-group-services/creditor-group-detail.service';\r\nimport { CreditorGroupAddService } from '../creditor-group-services/creditor-group-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-detail',\r\n  templateUrl: './creditor-group-detail.component.html',\r\n  styleUrls: ['./creditor-group-detail.component.css']\r\n})\r\nexport class CreditorGroupDetailComponent implements OnInit {\r\n\r\n  creditorGroupData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n  }\r\n\r\n  creditorGroupDataOld = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n  }\r\n\r\n  _registerUpdated = ''\r\n  _errorMessage = ''\r\n  _states : Array<any> = []\r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _creditorGroupDetail: CreditorGroupDetailService,\r\n    private _creditorGroupAddService: CreditorGroupAddService,\r\n    private _location: Location ) { }\r\n\r\n  validateTopic(value) {\r\n    if (value === 'default') {\r\n      this.topicHasError = true;\r\n    } else {\r\n      this.topicHasError = false;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this._creditorGroupAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupDetail.getCreditorGroup(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.creditorGroupData = res[0]\r\n            this.creditorGroupDataOld = res[0]          \r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  creditorGroupDataSender = {\r\n    old : this.creditorGroupDataOld,\r\n    new : this.creditorGroupData,\r\n  }\r\n\r\n  updateCreditorGroup(){\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupDetail.updateCreditorGroup(this.creditorGroupData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Gestora atualizada com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n\r\n  }\r\n\r\n  deleteCreditorGroup(){\r\n     this.route.paramMap\r\n     .subscribe(\r\n       params => {\r\n         this._creditorGroupDetail.deleteCreditorGroup(this.creditorGroupData, params.get('id'))\r\n         .subscribe(\r\n           res => {\r\n             console.log(res)\r\n             this.backToCreditorGroup()\r\n           },\r\n          err => {\r\n             console.log(err)\r\n           }\r\n         )   \r\n       }  \r\n     );\r\n   }\r\n\r\n  backToCreditorGroup(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLW1haW4vY3JlZGl0b3ItZ3JvdXAtbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorGroupMainService } from '../creditor-group-services/creditor-group-main.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-',\r\n  templateUrl: './creditor-group-main.component.html',\r\n  styleUrls: ['./creditor-group-main.component.css']\r\n})\r\nexport class CreditorGroupMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _creditorGroupMainService: CreditorGroupMainService,\r\n              private _router: Router){}   \r\n\r\n  ngOnInit() {\r\n    this._creditorGroupMainService.getCreditorsGroup()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n  addCreditorGroup(){\r\n      this._router.navigate(['/gestor-adicionar'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addCreditorGroupContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/add-creditor-group-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addCreditorGroupContact(id, user){  \r\n    return this.http.post<any>(this._addCreditorGroupContactUrl+id,user)\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupAddService {\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createCreditorGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/create-creditor-group\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  createCreditorGroup(user){\r\n    return this.http.post<any>(this._createCreditorGroupUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorGroupContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/contact/\"\r\n  private _creditorGroupUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/update-contact/\"\r\n  private _creditorGroupDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorGroupContactById(id){\r\n    return this.http.get<any>(this._creditorGroupContactByIdUrl+id)\r\n  }\r\n\r\n  updateCreditorGroupContactById(id, user){\r\n    return this.http.put<any>(this._creditorGroupUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteCreditorGroupContactById(id){\r\n    return this.http.delete<any>(this._creditorGroupDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorGroupContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorGroupContacts(id){       \r\n    return this.http.get<any>(this._creditorGroupContactsUrl+id)\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditors-group/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/update-creditor-group/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/delete-creditor-group/\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditorGroup(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n   updateCreditorGroup(user, id){\r\n    return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n   }\r\n\r\n   deleteCreditorGroup(user, id){\r\n    return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditors-group\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditorsGroup(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n  }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWFkZC9jcmVkaXRvci1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorAddService } from '../creditor-services/creditor-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-add',\r\n  templateUrl: './creditor-add.component.html',\r\n  styleUrls: ['./creditor-add.component.css']\r\n})\r\nexport class CreditorAddComponent implements OnInit {\r\n  creditorData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddnodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,  \r\n    entities: []\r\n  }\r\n\r\n  _errorMessage = ''\r\n  _states : Array<any> = [] \r\n  _detrans : Array<any> = []\r\n  _creditorsgroup : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  entities : Array<any> = [] \r\n  activeTab = \"nav-home\"\r\n\r\n  constructor(private _creditorAddService: CreditorAddService,\r\n    private _router: Router,\r\n    private _location: Location) { }\r\n\r\n\r\n  validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n\r\n  }\r\n  ngOnInit() {\r\n    this._creditorAddService.getStates()\r\n        .subscribe(\r\n          res => {\r\n            this._states = res\r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error }\r\n          )\r\n      \r\n    this._creditorAddService.getDetrans()\r\n        .subscribe(\r\n          res => {\r\n              console.log(res)\r\n              this._detrans = res\r\n            },\r\n            error => {console.log(error)\r\n                      this._errorMessage = error.error \r\n            }\r\n        )   \r\n                    \r\n    this._creditorAddService.getCreditorsGroup()\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._creditorsgroup = res;   \r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error\r\n            }\r\n        )   \r\n     \r\n  }\r\n\r\n  nextTab(activeTab) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  checkAllOptions() {\r\n    if (this._detrans.every(val => val.checked == true))\r\n       this._detrans.forEach(val => { val.checked = false });\r\n    else\r\n      this._detrans.forEach(val => { val.checked = true });\r\n  }\r\n\r\n  uncheckAllOptions() {\r\n    this._creditorsgroup.forEach(val => { val.checked = false });\r\n  }\r\n\r\n  checkDetransChange(e) {\r\n    this._detrans.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  checkCreditorsGroupChange(e) {\r\n    this._creditorsgroup.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      } else {\r\n        val.checked = !e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  entitiesCheck() {\r\n    this.entities = []\r\n    this._detrans.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this._creditorsgroup.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this.creditorData.entities = this.entities;\r\n  }\r\n\r\n  createCreditor(){\r\n    this.entitiesCheck()\r\n    this._creditorAddService.createCreditor(this.creditorData)\r\n       .subscribe(\r\n         res => {\r\n           this._router.navigate(['/credora'])\r\n         },\r\n         error => {console.log(error)\r\n                   this._errorMessage = error.error }\r\n         )  \r\n    \r\n  }\r\n  backToCreditor(){\r\n    this._location.back()\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3QtYWRkL2NyZWRpdG9yLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorAddContactService } from '../creditor-services/creditor-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-contact-add',\r\n  templateUrl: './creditor-contact-add.component.html',\r\n  styleUrls: ['./creditor-contact-add.component.css']\r\n})\r\nexport class CreditorContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorAddContact: CreditorAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  addCreditorContact(){\r\n    \r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {   \r\n        this._creditorAddContact.addCreditorContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToCreditorContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3QtZGV0YWlsL2NyZWRpdG9yLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorContactDetailService } from '../creditor-services/creditor-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-contact-detail',\r\n  templateUrl: './creditor-contact-detail.component.html',\r\n  styleUrls: ['./creditor-contact-detail.component.css']\r\n})\r\nexport class CreditorContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorContactDetail: CreditorContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.getCreditorContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateCreditorContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.updateCreditorContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteCreditorContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.deleteCreditorContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToCreditorContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToCreditorContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3RzL2NyZWRpdG9yLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreditorContactsService } from '../creditor-services/creditor-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-creditor-contacts',\r\n  templateUrl: './creditor-contacts.component.html',\r\n  styleUrls: ['./creditor-contacts.component.css']\r\n})\r\nexport class CreditorContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  creditorContacts: Array<any> = []\r\n\r\n  constructor(private _creditorContactsService: CreditorContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactsService.getCreditorContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.creditorContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addCreditorContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/credor-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWRldGFpbC9jcmVkaXRvci1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorDetailService } from '../creditor-services/creditor-detail.service';\r\nimport { Location } from '@angular/common';\r\nimport { R3TargetBinder } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-creditor-detail',\r\n  templateUrl: './creditor-detail.component.html',\r\n  styleUrls: ['./creditor-detail.component.css']\r\n})\r\nexport class CreditorDetailComponent implements OnInit {\r\n\r\n  creditorData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n    entities: []\r\n  }\r\n\r\n  creditorDataOld = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n    entities: []\r\n  }\r\n\r\n  _registerUpdated = ''\r\n  _errorMessage = ''\r\n  _states : Array<any> = []\r\n  _detrans : Array<any> = []\r\n  _creditorsgroup : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  entities : Array<any> = [] \r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _creditorDetail: CreditorDetailService,\r\n    private _location: Location ) { }\r\n\r\n  validateTopic(value) {\r\n    if (value === 'default') {\r\n      this.topicHasError = true;\r\n    } else {\r\n      this.topicHasError = false;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this._creditorDetail.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getCreditor(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.creditorData = res[0]\r\n            this.creditorDataOld = res[0]          \r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n      }\r\n    )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getDetrans(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n              console.log(res)\r\n              this._detrans = res\r\n            },\r\n            error => {console.log(error)\r\n                      this._errorMessage = error.error \r\n            }\r\n        )   \r\n      }\r\n    )\r\n    \r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getCreditorsGroup(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._creditorsgroup = res;   \r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error\r\n            }\r\n        )   \r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  creditorDataSender = {\r\n    old : this.creditorDataOld,\r\n    new : this.creditorData,\r\n  }\r\n\r\n  checkAllOptions() {\r\n    if (this._detrans.every(val => val.checked == true))\r\n       this._detrans.forEach(val => { val.checked = false });\r\n    else\r\n      this._detrans.forEach(val => { val.checked = true });\r\n  }\r\n\r\n  uncheckAllOptions() {\r\n    this._creditorsgroup.forEach(val => { val.checked = false });\r\n  }\r\n\r\n  checkDetransChange(e) {\r\n    this._detrans.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  checkCreditorsGroupChange(e) {\r\n    this._creditorsgroup.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      } else {\r\n        val.checked = !e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  entitiesCheck() {\r\n    this.entities = []\r\n    this._detrans.forEach(val => {      \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this._creditorsgroup.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this.creditorData.entities = this.entities;\r\n  }\r\n\r\n  updateCreditor(){\r\n    this.entitiesCheck()\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.updateCreditor(this.creditorData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Credora atualizada com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n      }        \r\n    );\r\n  }\r\n\r\n  deleteCreditor(){\r\n     this.route.paramMap\r\n     .subscribe(\r\n       params => {\r\n         this._creditorDetail.deleteCreditor(this.creditorData, params.get('id'))\r\n         .subscribe(\r\n           res => {\r\n             console.log(res)\r\n             this.backToCreditor()\r\n           },\r\n          err => {\r\n             console.log(err)\r\n           }\r\n         )   \r\n       }  \r\n     );\r\n   }\r\n\r\n  backToCreditor(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLW1haW4vY3JlZGl0b3ItbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorMainService } from '../creditor-services/creditor-main.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor',\r\n  templateUrl: './creditor-main.component.html',\r\n  styleUrls: ['./creditor-main.component.css']\r\n})\r\nexport class CreditorMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText= ''\r\n  businessname= ''\r\n\r\n  constructor(private _creditorMainService: CreditorMainService,\r\n              private _router: Router){}   \r\n\r\n  ngOnInit() {\r\n    this._creditorMainService.getCreditors()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n addCreditor(){\r\n    this._router.navigate(['/credor-adicionar'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addCreditorContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/add-creditor-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addCreditorContact(id, user){  \r\n    return this.http.post<any>(this._addCreditorContactUrl+id,user)\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorAddService {\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createCreditorUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/create-creditor\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n  private _detransUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-detrans\"\r\n  private _creditorsGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-creditors-group\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n  \r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n  getDetrans(){\r\n    return this.http.get<any>(this._detransUrl)\r\n  }\r\n\r\n  getCreditorsGroup(){\r\n  return this.http.get<any>(this._creditorsGroupUrl)\r\n  }\r\n\r\n  createCreditor(user){\r\n    return this.http.post<any>(this._createCreditorUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/contact/\"\r\n  private _creditorUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/update-contact/\"\r\n  private _creditorDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorContactById(id){\r\n    return this.http.get<any>(this._creditorContactByIdUrl+id)\r\n  }\r\n\r\n  updateCreditorContactById(id, user){\r\n    return this.http.put<any>(this._creditorUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteCreditorContactById(id){\r\n    return this.http.delete<any>(this._creditorDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorContacts(id){       \r\n    return this.http.get<any>(this._creditorContactsUrl+id)\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditors/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/update-creditor/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/delete-creditor/\"\r\n  private _detransUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-detrans/\"\r\n  private _creditorsGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-creditors-group/\"\r\n  \r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  getCreditor(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n  getDetrans(id){\r\n    return this.http.get<any>(this._detransUrl+id)\r\n  }\r\n\r\n  getCreditorsGroup(id){\r\n    return this.http.get<any>(this._creditorsGroupUrl+id)\r\n  }\r\n\r\n  updateCreditor(user, id){\r\n  return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n  }\r\n\r\n  deleteCreditor(user, id){\r\n  return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditors\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditors(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n   \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tYWRkL2RldHJhbi1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DetranAddService } from '../detran-services/detran-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-detran-add',\r\n  templateUrl: './detran-add.component.html',\r\n  styleUrls: ['./detran-add.component.css']\r\n})\r\nexport class DetranAddComponent implements OnInit {  \r\n  \r\n \r\n  userData = {\r\n    userName : '',\r\n    cnpj : '',\r\n    phone : '',\r\n    email : '',\r\n    topic : '',\r\n    dddModel : ''\r\n  }\r\n  _errorMessage = ''\r\n  _createdMessage = ''\r\n  _states : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  constructor(private _detranAddService: DetranAddService,\r\n    private _router: Router,\r\n    private _location: Location) {       \r\n      \r\n    }\r\n\r\n    validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n    }\r\n\r\n  ngOnInit() {\r\n    this._detranAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n  }\r\n\r\n  createDetran(){\r\n    this._detranAddService.createDetran(this.userData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this.ngOnInit()\r\n          this._createdMessage = 'Detran '+this.userData.userName+' cadastrado com sucesso!'\r\n          // Reset form to add another Detran\r\n          //this.userData = {userName : '', cnpj : '', phone : '', email : '', topic : '', dddModel : '' } \r\n        },\r\n        error => {console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )      \r\n  }\r\n\r\n  backToDetran(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdC1hZGQvZGV0cmFuLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranAddContactService } from '../detran-services/detran-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-detran-contact-add',\r\n  templateUrl: './detran-contact-add.component.html',\r\n  styleUrls: ['./detran-contact-add.component.css']\r\n})\r\nexport class DetranContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _detranAddContact: DetranAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  addDetranContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranAddContact.addDetranContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToDetranContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdC1kZXRhaWwvZGV0cmFuLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranContactDetailService } from '../detran-services/detran-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-detran-contact-detail',\r\n  templateUrl: './detran-contact-detail.component.html',\r\n  styleUrls: ['./detran-contact-detail.component.css']\r\n})\r\nexport class DetranContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _detranContactDetail: DetranContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.getDetranContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateDetranContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.updateDetranContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteDetranContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.deleteDetranContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToDetranContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToDetranContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdHMvZGV0cmFuLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DetranContactsService } from '../detran-services/detran-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-detran-contacts',\r\n  templateUrl: './detran-contacts.component.html',\r\n  styleUrls: ['./detran-contacts.component.css']\r\n})\r\nexport class DetranContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  detranContacts: Array<any> = []\r\n\r\n  constructor(private _detranContactsService: DetranContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactsService.getDetranContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.detranContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addDetranContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/detran-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tZGV0YWlsL2RldHJhbi1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranDetailService } from '../detran-services/detran-detail.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-detran-detail',\r\n  templateUrl: './detran-detail.component.html',\r\n  styleUrls: ['./detran-detail.component.css']\r\n})\r\nexport class DetranDetailComponent implements OnInit {\r\n\r\n  detranData = {\r\n    name: '',\r\n    cnpj: '',\r\n    state:'',\r\n    phone: '',\r\n    email: '',\r\n    dddModel: '',\r\n  }\r\n\r\n  detranDataOld = {\r\n    name: '',\r\n    cnpj: '',\r\n    state:'',\r\n    phone: '',\r\n    email: '',\r\n    dddModel: '',\r\n  }\r\n\r\n  _registerUpdated = ''\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _detranDetail: DetranDetailService,\r\n    private _location: Location ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.getDetran(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.detranData = res[0]\r\n            this.detranDataOld = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  detranDataSender = {\r\n    old : this.detranDataOld,\r\n    new : this.detranData,\r\n  }\r\n\r\n  updateDetran(){\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.updateDetran(this.detranData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Detran atualizado com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n\r\n  }\r\n\r\n  deleteDetran(){\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.deleteDetran(this.detranData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToDetran()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToDetran(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tbWFpbi9kZXRyYW4tbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DetranMainService } from '../detran-services/detran-main.service';\r\nimport { DetranAddService } from '../detran-services/detran-add.service';\r\n\r\n@Component({\r\n  selector: 'app-detran',\r\n  templateUrl: './detran-main.component.html',\r\n  styleUrls: ['./detran-main.component.css']\r\n})\r\nexport class DetranMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _detranService: DetranMainService,\r\n    private _router: Router,\r\n    private _detranAddService: DetranAddService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this._detranService.getDetrans()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n  addDetran(){\r\n    this._detranAddService.getStates()\r\n    .subscribe(      \r\n      res => {\r\n        if(res.length == 0){\r\n          console.log(\"Todos os Detrans já cadastrados\")\r\n        }else{\r\n          this._router.navigate(['/detran-adicionar'])\r\n        }\r\n        \r\n      },\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addDetranContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/add-detran-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addDetranContact(id, user){\r\n    return this.http.post<any>(this._addDetranContactUrl+id,user)\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createDetranUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/create-detran\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/states-detran-add\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  createDetran(user){\r\n    return this.http.post<any>(this._createDetranUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _detranContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/contact/\"\r\n  private _detranUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/update-contact/\"\r\n  private _detranDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetranContactById(id){\r\n    return this.http.get<any>(this._detranContactByIdUrl+id)\r\n  }\r\n\r\n  updateDetranContactById(id, user){\r\n    return this.http.put<any>(this._detranUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteDetranContactById(id){\r\n    return this.http.delete<any>(this._detranDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _detranContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetranContacts(id){\r\n    return this.http.get<any>(this._detranContactsUrl+id)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detrans/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/update-detran/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/delete-detran/\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getDetran(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n   updateDetran(user, id){\r\n    return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n   }\r\n\r\n   deleteDetran(user, id){\r\n    return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detrans\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getDetrans(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntitiesService {\r\n\r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesTypesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/entities-types\"\r\n  \r\n  constructor(private http: HttpClient) {  }\r\n   \r\n\r\n   getEntitiesTypes(){\r\n    return this.http.get<any>(this._entitiesTypesUrl)\r\n   }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL3JlZ2lzdHJhci9yZWdpc3RyYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-registrar',\r\n  templateUrl: './registrar.component.html',\r\n  styleUrls: ['./registrar.component.css']\r\n})\r\nexport class RegistrarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlbHAvaGVscC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EntitiesService } from '../entities/entities-services/entities.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from \"../system-access/system-access-services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  entityTypes: Array<any> = []\r\n  \r\n    constructor(private _entitiesService: EntitiesService,\r\n      private _router: Router,\r\n      private _authService: AuthService\r\n      ) { }\r\n\r\n      ngOnInit() {\r\n        this._entitiesService.getEntitiesTypes()\r\n          .subscribe(      \r\n            res => this.entityTypes = res,\r\n            err => console.log(err)\r\n          ) \r\n      }\r\n       \r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterDescription'\r\n})\r\nexport class FilterDescriptionPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      //console.log(it)\r\n      return it.description.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterEntityName'\r\n})\r\nexport class FilterEntityNamePipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      //console.log(it)\r\n      return it.entityname.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterFeatureName'\r\n})\r\nexport class FilterFeatureNamePipe implements PipeTransform {\r\n  \r\n  transform(items: any[], searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      //console.log(it)\r\n      return it.featurename.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  \r\n  transform(items: any[], searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      //console.log(it)\r\n      return it.name.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterStatus'\r\n})\r\nexport class FilterStatusPipe implements PipeTransform {\r\n\r\n  transform(items: any[],  searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n\r\n    searchText = searchText.toLocaleLowerCase();    \r\n    \r\n    if(searchText == 'todos') {\r\n      return items\r\n    }else{\r\n      return items.filter(it => {\r\n        \r\n        return (it.status.toLocaleLowerCase() == (searchText));\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterUser'\r\n})\r\nexport class FilterUserPipe implements PipeTransform {\r\n\r\n  transform(items: any[],  searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n\r\n    searchText = searchText.toLocaleLowerCase();    \r\n    \r\n    \r\n      return items.filter(it => { \r\n               \r\n        return (it.name.toLocaleLowerCase().includes(searchText) ||\r\n                it.cpf.toLocaleLowerCase().includes(searchText) ||\r\n                 it.email.toLocaleLowerCase().includes(searchText) ||\r\n                 it.lastname.toLocaleLowerCase().includes(searchText) ||\r\n                 it.username.toLocaleLowerCase().includes(searchText) );\r\n      });\r\n    \r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy9ncm91cHMvZ3JvdXAtYWRkL2dyb3VwLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GroupAddService } from '../group-services/group-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-group-add',\r\n  templateUrl: './group-add.component.html',\r\n  styleUrls: ['./group-add.component.css']\r\n})\r\nexport class GroupAddComponent implements OnInit {\r\n\r\n  _detranErrorMessage = ''\r\n  _creditorErrorMessage = ''\r\n  _creditorGroupErrorMessage = ''\r\n  _adminErrorMessage = ''\r\n\r\n  _detranSaving = false\r\n  _creditorSaving = false\r\n  _creditorGroupSaving = false\r\n  _adminSaving = false\r\n\r\n  _detranData = {\r\n    entitytype: 'DETRAN',\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n\r\n  _creditorData = {\r\n    entitytype: 'CREDORA',\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n  _creditorGroupData = {\r\n    entitytype: 'GESTORA',\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n  _adminData = {\r\n    entitytype: 'ADMIN',\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n\r\n  constructor(private _groupAddService: GroupAddService,\r\n    private _location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this._groupAddService.getUserGroupFeatures()\r\n      .subscribe(\r\n        res => {\r\n          //console.log(res) \r\n          res.forEach((data) => {\r\n            if (data.entitytype == 'DETRAN') { // Type Detran\r\n              this._detranData.features.push(data)\r\n            } else if (data.entitytype == 'CREDORA') { // Type Creditor\r\n              this._creditorData.features.push(data)\r\n            } else if (data.entitytype == 'GESTORA') { // Type Creditor Group\r\n              this._creditorGroupData.features.push(data)\r\n            } else if (data.entitytype == 'ADMIN') { // Type Admin\r\n              this._adminData.features.push(data)\r\n            } else if (data.entitytype == 'REGISTRADORA') { // Type Registrar\r\n              //this._detranData.features.push(data)\r\n            }\r\n          })\r\n\r\n        },\r\n        error => { console.log(error) }\r\n      )\r\n\r\n    this._groupAddService.getUserGroupEntities()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res) \r\n          res.forEach((data) => {\r\n            if (data.entitytype == 'DETRAN') { // Type Detran\r\n              this._detranData.entities.push(data)\r\n              this._adminData.entities.push(data)\r\n            } else if (data.entitytype == 'CREDORA') { // Type Creditor\r\n              this._creditorData.entities.push(data)\r\n              this._creditorGroupData.entities.push(data)\r\n              this._adminData.entities.push(data)\r\n            } else if (data.entitytype == 'GESTORA') { // Type Creditor Group\r\n              this._creditorGroupData.entities.push(data)\r\n              this._adminData.entities.push(data)\r\n            }else if (data.entitytype == 'REGISTRADORA') { // Type Registrar\r\n              //this._entitiesRegistrar.push(data)\r\n            }\r\n\r\n          })\r\n        },\r\n        error => { console.log(error) }\r\n      )\r\n\r\n  }\r\n\r\n  detranFeaturesControl(event) {\r\n\r\n    this._detranData.features.forEach(val => {\r\n      if ((\"detran.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._detranData.features)\r\n  }\r\n\r\n  creditorFeaturesControl(event) {\r\n\r\n    this._creditorData.features.forEach(val => {\r\n      if ((\"creditor.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorData.features)\r\n  }\r\n\r\n  creditorGroupFeaturesControl(event) {\r\n\r\n    this._creditorGroupData.features.forEach(val => {\r\n      if ((\"creditorGroup.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorGroupData.features)\r\n  }\r\n\r\n  adminFeaturesControl(event) {\r\n\r\n    this._adminData.features.forEach(val => {\r\n      if ((\"admin.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._adminData.features)\r\n  }\r\n\r\n  detranEntitiesControl(event) {\r\n\r\n    this._detranData.entities.forEach(val => {\r\n      if ((\"detran.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._detranData.entities)\r\n  }\r\n\r\n  creditorEntitiesControl(event) {\r\n\r\n    this._creditorData.entities.forEach(val => {\r\n      if ((\"creditor.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorData.entities)\r\n  }\r\n\r\n  creditorGroupEntitiesControl(event) {\r\n\r\n    this._creditorGroupData.entities.forEach(val => {\r\n      if ((\"creditorGroup.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorGroupData.entities)\r\n  }\r\n\r\n  adminEntitiesControl(event) {\r\n\r\n    this._adminData.entities.forEach(val => {\r\n      if ((\"admin.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._adminData.entities)\r\n  }\r\n\r\n\r\n\r\n  createDetranGroup() {\r\n\r\n    this._detranErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._detranData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._detranErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._detranErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._detranErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._detranErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._detranData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._detranErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._detranErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._detranErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._detranData)\r\n    this._detranSaving = true\r\n    \r\n    this._groupAddService.createGroup(this._detranData)\r\n      .subscribe(\r\n        res => {\r\n          this._detranSaving = false          \r\n        },\r\n        error => {\r\n          console.log(error)\r\n          this._detranSaving = false\r\n        }\r\n      )\r\n  }\r\n\r\n  createCreditorGroup() {\r\n\r\n    this._creditorErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._creditorData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._creditorErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._creditorErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._creditorData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._creditorErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._creditorData)\r\n    this._creditorSaving = true \r\n    \r\n    this._groupAddService.createGroup(this._creditorData)\r\n      .subscribe(\r\n        res => {\r\n          this._creditorSaving = false \r\n          //this._router.navigate(['/group-main'])\r\n        },\r\n        error => console.log(error)\r\n      )\r\n  }\r\n\r\n  createCreditorGroupGroup() {\r\n\r\n    this._creditorGroupErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._creditorGroupData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorGroupErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorGroupErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._creditorGroupErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._creditorGroupErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._creditorGroupData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorGroupErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorGroupErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._creditorGroupErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._creditorGroupData)\r\n    this._creditorGroupSaving = true \r\n    this._groupAddService.createGroup(this._creditorGroupData)\r\n      .subscribe(\r\n        res => {\r\n          \r\n          this._creditorGroupSaving = false \r\n          //this._router.navigate(['/group-main'])\r\n        },\r\n        error => console.log(error)\r\n      )\r\n  }\r\n\r\n  createAdminGroup() {\r\n\r\n    this._adminErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._adminData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._adminErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._adminErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._adminErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._adminErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._adminData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._adminErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._adminErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._adminErrorMessage)\r\n      return\r\n    }\r\n    this._adminSaving = true \r\n    console.log(this._adminData)\r\n    \r\n    this._groupAddService.createGroup(this._adminData)\r\n      .subscribe(\r\n        res => {\r\n          \r\n          this._adminSaving = false \r\n          //this._router.navigate(['/group-main'])\r\n        },\r\n        error => console.log(error)\r\n      )\r\n  }\r\n\r\n  backToGroups(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy9ncm91cHMvZ3JvdXAtbWFpbi9ncm91cC1tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GroupMainService } from '../group-services/group-main.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-main',\r\n  templateUrl: './group-main.component.html',\r\n  styleUrls: ['./group-main.component.css']\r\n})\r\nexport class GroupMainComponent implements OnInit {\r\n\r\n  _groupMain: Array<any> = []\r\n  _searchText: ''\r\n  _status = 'Todos'  \r\n  _userData = {id: ''}\r\n\r\n  constructor(private _groupService: GroupMainService) { }\r\n\r\n  ngOnInit() {\r\n    this._groupService.getGroup()\r\n    .subscribe(      \r\n      res => {\r\n        console.log(res)\r\n        this._groupMain = res\r\n      },\r\n      err => {\r\n        console.log(err)\r\n      }\r\n    ) \r\n  }\r\n\r\n  disableGroup(id){\r\n    this._userData.id = id\r\n    this._groupService.disableGroup(this._userData)\r\n    .subscribe(res =>{\r\n      console.log(res)\r\n      this.ngOnInit()\r\n    },\r\n    err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-group-add\"\r\n  private _userFeaturesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-group-features\"\r\n  private _userEntitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-group-entities\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getUserGroupFeatures(){\r\n    return this.http.get<any>(this._userFeaturesUrl)\r\n  }\r\n\r\n  getUserGroupEntities(){\r\n    return this.http.get<any>(this._userEntitiesUrl)\r\n  }\r\n\r\n  createGroup(group){\r\n    return this.http.post<any>(this._createGroupUrl, group)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class GroupDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  \r\n  private _userFeaturesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-group-features/\"\r\n  private _userEntitiessUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-group-entities/\"\r\n  private _userGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups/\"\r\n  private _userGroupUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups-update/\"\r\n  private _userGroupDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups-delete\"\r\n  \r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getUserGroupFeaturesById(id){\r\n    return this.http.get<any>(this._userFeaturesUrl+id)\r\n  }\r\n\r\n  getUserGroupEntitiesByid(id){\r\n    return this.http.get<any>(this._userEntitiessUrl+id)\r\n  }\r\n\r\n  getUserGroupByid(id){\r\n    return this.http.get<any>(this._userGroupUrl+id)\r\n  }\r\n\r\n  updateGroup(id,userData){\r\n    return this.http.put<any>(this._userGroupUpdateUrl+id, userData)\r\n  }\r\n\r\n  deleteGroup(id){\r\n    return this.http.put<any>(this._userGroupDeleteUrl,id)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupMainService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _groupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups\"\r\n  private _disableGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups-disable\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getGroup(){\r\n    return this.http.get<any>(this._groupUrl)\r\n   }\r\n   \r\n   disableGroup(userData){\r\n    return this.http.put<any>(this._disableGroupUrl, userData)\r\n   }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy9ncm91cHMvZ3JvdXBzLWRldGFpbC9ncm91cHMtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GroupDetailService } from '../group-services/group-detail.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-groups-detail',\r\n  templateUrl: './groups-detail.component.html',\r\n  styleUrls: ['./groups-detail.component.css']\r\n})\r\nexport class GroupsDetailComponent implements OnInit {\r\n\r\n  _userData = {id: ''}\r\n\r\n  _detranErrorMessage = ''\r\n  _creditorErrorMessage = ''\r\n  _creditorGroupErrorMessage = ''\r\n  _adminErrorMessage = ''\r\n\r\n  _detranSaving = false\r\n  _creditorSaving = false\r\n  _creditorGroupSaving = false\r\n  _adminSaving = false\r\n\r\n  _userGroupEntityType = ''\r\n\r\n  _detranData = {\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n\r\n  _creditorData = {\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n  _creditorGroupData = {\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n  _adminData = {\r\n    planname: '',\r\n    planstatus: true,\r\n    entities: [],\r\n    features: [],\r\n  }\r\n\r\n  constructor(private _groupDetailService: GroupDetailService,\r\n    private _route: ActivatedRoute,\r\n    private _location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n\r\n        this._groupDetailService.getUserGroupByid(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            //console.log(res[0])\r\n            res.forEach(data =>{\r\n              if (data.entitytype == 'DETRAN') { // Type Detran\r\n                this._detranData.planname = data.planname\r\n                this._detranData.planstatus = data.planstatus\r\n                this._userGroupEntityType = 'DETRAN'\r\n              } else if (data.entitytype == 'CREDORA') { // Type Creditor\r\n                this._creditorData.planname = data.planname\r\n                this._creditorData.planstatus = data.planstatus\r\n                this._userGroupEntityType = 'CREDORA'\r\n              } else if (data.entitytype == 'GESTORA') { // Type Creditor Group\r\n                this._creditorGroupData.planname = data.planname\r\n                this._creditorGroupData.planstatus = data.planstatus\r\n                this._userGroupEntityType = 'GESTORA'\r\n              } else if (data.entitytype == 'ADMIN') { // Type Admin\r\n                this._adminData.planname = data.planname\r\n                this._adminData.planstatus = data.planstatus\r\n                this._userGroupEntityType = 'ADMIN'\r\n                console.log(\"Cheguei\")\r\n                console.log(\"plano: \"+data.planname,\r\n                \"entidade status: \"+data.planstatus,\r\n                \"entidade: \"+ this._userGroupEntityType)\r\n\r\n\r\n              } else if (data.entitytype == 'REGISTRADORA') { // Type Registrar\r\n                //this._detranData.features.push(data)\r\n              }\r\n            })\r\n               \r\n          },\r\n          error => { console.log(error) }\r\n        )\r\n        \r\n        this._groupDetailService.getUserGroupFeaturesById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res) \r\n            res.forEach((data) => {\r\n              if (data.entitytype == 'DETRAN') { // Type Detran\r\n                this._detranData.features.push(data)\r\n              } else if (data.entitytype == 'CREDORA') { // Type Creditor                \r\n                this._creditorData.features.push(data)\r\n              } else if (data.entitytype == 'GESTORA') { // Type Creditor Group\r\n                this._creditorGroupData.features.push(data)\r\n              } else if (data.entitytype == 'ADMIN') { // Type Admin\r\n                this._adminData.features.push(data)\r\n              } else if (data.entitytype == 'REGISTRADORA') { // Type Registrar\r\n                //this._detranData.features.push(data)\r\n              }\r\n            })\r\n  \r\n          },\r\n          error => { console.log(error) }\r\n        )\r\n        this._groupDetailService.getUserGroupEntitiesByid(params.get('id'))\r\n      .subscribe(\r\n        res => {    \r\n          console.log(res)           \r\n          res.forEach((data) => {\r\n            if (data.entitytype == 'DETRAN') { // Type Detran\r\n              this._detranData.entities.push(data)\r\n              this._adminData.entities.push(data)\r\n            } else if (data.entitytype == 'CREDORA') { // Type Creditor\r\n              this._creditorData.entities.push(data)\r\n              this._creditorGroupData.entities.push(data)\r\n              this._adminData.entities.push(data)             \r\n            } else if (data.entitytype == 'GESTORA') { // Type Creditor Group\r\n              this._creditorGroupData.entities.push(data)\r\n              this._adminData.entities.push(data)\r\n            }else if (data.entitytype == 'REGISTRADORA') { // Type Registrar\r\n              //this._entitiesRegistrar.push(data)\r\n            }\r\n          })\r\n          \r\n        },\r\n        error => { console.log(error) }\r\n      )\r\n      \r\n      }\r\n    )\r\n  }  \r\n  detranFeaturesControl(event) {\r\n\r\n    this._detranData.features.forEach(val => {\r\n      if ((\"detran.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._detranData.features)\r\n  }\r\n\r\n  creditorFeaturesControl(event) {\r\n\r\n    this._creditorData.features.forEach(val => {\r\n      if ((\"creditor.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorData.features)\r\n  }\r\n\r\n  creditorGroupFeaturesControl(event) {\r\n\r\n    this._creditorGroupData.features.forEach(val => {\r\n      if ((\"creditorGroup.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorGroupData.features)\r\n  }\r\n\r\n  adminFeaturesControl(event) {\r\n\r\n    this._adminData.features.forEach(val => {\r\n      if ((\"admin.\" + val.featurename) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._adminData.features)\r\n  }\r\n\r\n  detranEntitiesControl(event) {\r\n\r\n    this._detranData.entities.forEach(val => {\r\n      if ((\"detran.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._detranData.entities)\r\n  }\r\n\r\n  creditorEntitiesControl(event) {\r\n\r\n    this._creditorData.entities.forEach(val => {\r\n      if ((\"creditor.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorData.entities)\r\n  }\r\n\r\n  creditorGroupEntitiesControl(event) {\r\n\r\n    this._creditorGroupData.entities.forEach(val => {\r\n      if ((\"creditorGroup.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._creditorGroupData.entities)\r\n  }\r\n\r\n  adminEntitiesControl(event) {\r\n\r\n    this._adminData.entities.forEach(val => {\r\n      if ((\"admin.\" + val.entityname) === event.target.id) {\r\n        val.checked = event.target.checked\r\n      }\r\n    })\r\n    console.log(this._adminData.entities)\r\n  }\r\n\r\n  updateDetranGroup() {\r\n\r\n    this._detranErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._detranData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._detranErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._detranErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._detranErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._detranErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._detranData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._detranErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._detranErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._detranErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._detranData)\r\n    this._detranSaving = true\r\n    \r\n    this._route.paramMap.subscribe(\r\n      params =>{\r\n        this._groupDetailService.updateGroup(params.get('id'),this._detranData)\r\n        .subscribe(\r\n          res => {\r\n            this._detranSaving = false          \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this._detranSaving = false\r\n          }\r\n        )\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n  updateCreditorGroup() {\r\n\r\n    this._creditorErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._creditorData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._creditorErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._creditorErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._creditorData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._creditorErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._creditorData)\r\n    this._route.paramMap.subscribe(\r\n      params =>{\r\n        this._groupDetailService.updateGroup(params.get('id'),this._creditorData)\r\n        .subscribe(\r\n          res => {\r\n            this._detranSaving = false          \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this._detranSaving = false\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  updateCreditorGroupGroup() {\r\n\r\n    this._creditorGroupErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._creditorGroupData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorGroupErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorGroupErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._creditorGroupErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._creditorGroupErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._creditorGroupData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._creditorGroupErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._creditorGroupErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._creditorGroupErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._creditorGroupData)\r\n    this._route.paramMap.subscribe(\r\n      params =>{\r\n        this._groupDetailService.updateGroup(params.get('id'),this._creditorGroupData)\r\n        .subscribe(\r\n          res => {\r\n            this._detranSaving = false          \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this._detranSaving = false\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  updateAdminGroup() {\r\n\r\n    this._adminErrorMessage = 'Selecione pelo menos uma Entidade'\r\n    this._adminData.entities.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._adminErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._adminErrorMessage == 'Selecione pelo menos uma Entidade') {\r\n      console.log(this._adminErrorMessage)\r\n      return\r\n    }\r\n\r\n    this._adminErrorMessage = 'Selecione pelo menos uma Funcionalidade'\r\n    this._adminData.features.forEach(element => {\r\n      if (element.checked == true) {\r\n        this._adminErrorMessage = ''\r\n      }\r\n    });\r\n    if (this._adminErrorMessage == 'Selecione pelo menos uma Funcionalidade') {\r\n      console.log(this._adminErrorMessage)\r\n      return\r\n    }\r\n    console.log(this._adminData)\r\n    this._route.paramMap.subscribe(\r\n      params =>{\r\n        this._groupDetailService.updateGroup(params.get('id'),this._adminData)\r\n        .subscribe(\r\n          res => {\r\n            this._detranSaving = false          \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this._detranSaving = false\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteGroup(){\r\n    this._route.paramMap.subscribe(\r\n      params =>{\r\n        this._userData.id = params.get('id')\r\n        this._groupDetailService.deleteGroup(this._userData)\r\n        .subscribe(\r\n          res => {\r\n            this._detranSaving = false          \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this._detranSaving = false\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  backToGroups(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy91c2VyL3VzZXItYWRkL3VzZXItYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserAddService } from '../user-services/user-add.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-add',\r\n  templateUrl: './user-add.component.html',\r\n  styleUrls: ['./user-add.component.css']\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n\r\n    _registerUserData = {\r\n    firstName: '',\r\n    lastName: '', \r\n    userName: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    cpf: '',\r\n    status: true,\r\n    email: '',\r\n    groupsId: '',\r\n\r\n  }\r\n\r\n  _resetCode = ''\r\n\r\n  _errorMessage = ''\r\n  _groupsData : Array<any> = []\r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  _activeTab = 'user-data'\r\n\r\n  constructor(private _userAddService: UserAddService,\r\n    private _router: Router) { }\r\n\r\n    ngOnInit() {\r\n      this._userAddService.getUserGroups()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._groupsData = res\r\n        },\r\n        error => {  console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )\r\n    }\r\n\r\n\r\n  nextTab(tab){\r\n    this._activeTab = tab\r\n  }\r\n  \r\n  featuresControl(event) {\r\n    this._registerUserData.groupsId = event.target.id\r\n  }\r\n   \r\n  createUser(){\r\n     this._userAddService.createUser(this._registerUserData)\r\n       .subscribe(\r\n         res => {\r\n\r\n           this._resetCode = res.resetCode\r\n           this.sendEmail(this._registerUserData.email)\r\n           console.log(res)\r\n           \r\n         },\r\n         error => console.log(error) \r\n         )  \r\n     \r\n   } \r\n\r\n  backToUsers(){\r\n\r\n  }\r\n  \r\n  sendEmail(emailTo) {\r\n    var emailConfig = require('../../../../assets/configs/config-email-noreply.json')\r\n\r\n    let emailData = {\r\n      host: emailConfig.host,\r\n      port: emailConfig.port,\r\n      secure: emailConfig.secure,\r\n      requireTLS: emailConfig.requireTLS,\r\n      userName: emailConfig.userName,\r\n      emailFrom: emailConfig.emailFrom,\r\n      password: emailConfig.password,\r\n      emailTo: emailTo,\r\n      subjectContent: \"[NÃO RESPONDA] - RainTI novo Acesso\",\r\n      plainText: \"Acesso o link a seguir: http://\"+emailConfig.hostSrc+\":4200/novo-acesso, informe o seu nome de usuário: \"+this._registerUserData.userName+\" e o código a seguir: \" + this._resetCode+\" para criar seu acesso\",\r\n      html: \r\n      ' <head> '\r\n      +' <title>Rating Reminder</title> '\r\n    +' <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"> '\r\n    +' <meta content=\"width=device-width\" name=\"viewport\"> '\r\n    +' <style type=\"text/css\"> '\r\n    +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +' ; '\r\n            +' font-weight: 600; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Bold&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-bold.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n\r\n        +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +' ; '\r\n            +' font-weight: 500; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Medium&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-medium.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n\r\n        +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +'  ; '\r\n            +' font-weight: 400; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Regular&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-regular.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n        +' </style> '\r\n    +' <style media=\"screen and (max-width: 680px)\"> '\r\n    +' @media screen and (max-width: 680px) { '\r\n          +' .page-center { '\r\n              +' padding-left: 0 !important; '\r\n                +' padding-right: 0 !important; '\r\n                +'  } '\r\n\r\n            +' .footer-center { '\r\n              +' padding-left: 20px !important; '\r\n                +' padding-right: 20px !important; '\r\n                +'  } '\r\n            +' } '\r\n        +' </style> '\r\n    +' </head> '\r\n\r\n+' <body style=\"background-color: #f4f4f5;\"> '\r\n+' <table cellpadding=\"0\" cellspacing=\"0\" '\r\n    +' style=\"width: 100%; height: 100%; background-color: #f4f4f5; text-align: center;\"> '\r\n        +' <tbody> '\r\n        +' <tr> '\r\n            +' <td style=\"text-align: center;\"> '\r\n                +' <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" id=\"body\" '\r\n                    +' style=\"background-color: #fff; width: 100%; max-width: 680px; height: 100%;\"> '\r\n                        +' <tbody> '\r\n                        +' <tr> '\r\n                            +' <td> '\r\n                                +' <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"page-center\" '\r\n                                    +' style=\"text-align: left; padding-bottom: 88px; width: 100%; padding-left: 120px; padding-right: 120px;\"> '\r\n                                        +' <tbody> '\r\n                                        +' <tr> '\r\n                                            +' <td style=\"padding-top: 24px;\"> '\r\n                                                +' <img src=\"cid:logo\" '\r\n                                                    +' style=\"width: 56px;\"> '\r\n                                                        +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td colspan=\"2\" '\r\n                                                +' style=\"padding-top: 72px; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #000000; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 48px; font-smoothing: always; font-style: normal; font-weight: 600; letter-spacing: -2.6px; line-height: 52px; mso-line-height-rule: exactly; text-decoration: none;\"> '\r\n                                                    +' Bem-vindo à RainTI, '+this._registerUserData.firstName+' '+this._registerUserData.lastName+'</td> '\r\n                                                    +' </tr> '\r\n                                            +'  <tr> '\r\n                                            +' <td style=\"padding-top: 48px; padding-bottom: 48px;\"> '\r\n                                                +' <table cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%\"> '\r\n                                                    +' <tbody> '\r\n                                                        +' <tr> '\r\n                                                            +' <td '\r\n                                                                +' style=\"width: 100%; height: 1px; max-height: 1px; background-color: #d9dbe0; opacity: 0.81\"> '\r\n                                                                    +'  </td> '\r\n                                                                +' </tr> '\r\n                                                            +'  </tbody> '\r\n                                                        +' </table> '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td '\r\n                                                +' style=\"-ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #9095a2; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 16px; font-smoothing: always; font-style: normal; font-weight: 400; letter-spacing: -0.18px; line-height: 24px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 100%;\"> '\r\n                                                    +' Você está recebendo esse e-mail pois foi criada uma conta no SRC-e '\r\n                                                    +' Sistema de Registro de Contrato eletrônico pela empresa RainTI. '\r\n                                                    +' A seguir estão seus dados de acesso'\r\n                                                    +' Usuário: '+this._registerUserData.userName \r\n                                                    +' Código de verificação: '+this._resetCode\r\n                                                    +' Com esses dados você poderá cadastrar sua senha e acessar ao sistema.'\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td '\r\n                                                +' style=\"padding-top: 24px; -ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #9095a2; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 16px; font-smoothing: always; font-style: normal; font-weight: 400; letter-spacing: -0.18px; line-height: 24px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 100%;\"> '\r\n                                                    +' Clique no botão a seguir e cadastre uma nova senha '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td> '\r\n                                                +' <a data-click-track-id=\"37\" href=\"http://'+emailConfig.hostSrc+':4200/novo-acesso\" '\r\n                                                    +' style=\"margin-top: 36px; -ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #ffffff; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 12px; font-smoothing: always; font-style: normal; font-weight: 600; letter-spacing: 0.7px; line-height: 48px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 220px; background-color: #0090D5; border-radius: 5px; display: block; text-align: center; text-transform: uppercase\" '\r\n                                                        +' target=\"_blank\"> '\r\n                                                        +' Recuperar senha '\r\n                                                        +' </a> '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +'  </tbody> '\r\n                                        +'  </table> '\r\n                                    +' </td> '\r\n                                +'  </tr> '\r\n                            +' </tbody> '\r\n                        +' </table> '\r\n                    +' </td> '\r\n                +' </tr> '\r\n            +'         </tbody> '\r\n+'     </table> '\r\n+' </body> '\r\n  }\r\n\r\n  console.log(emailData)\r\n     this._userAddService.sendEmail(emailData)\r\n  .subscribe(\r\n    res => {\r\n      console.log(res)\r\n    },\r\n    error => console.log(error)\r\n  )   \r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy91c2VyL3VzZXItZGV0YWlsL3VzZXItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserAddService } from '../user-services/user-add.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserDetailService } from '../user-services/user-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.css']\r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n\r\n  \r\n  registerUserData = {\r\n    userid:'',\r\n    firstname: '',\r\n    lastname: '', \r\n    username: '',\r\n    ddd: '',\r\n    phone: '',\r\n    cpf: '',\r\n    status: true,\r\n    email: '',\r\n    groupsid: '',\r\n\r\n  }\r\n\r\n  _errorMessage = ''\r\n  _groupsData : Array<any> = []\r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  _activeTab = 'user-data'\r\n\r\n  constructor(private _userDetailService: UserDetailService,\r\n    private _route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n\r\n      this._route.paramMap\r\n      .subscribe(\r\n        params => {\r\n          this.registerUserData.userid = params.get('id')\r\n        },\r\n        err => {\r\n\r\n        }\r\n      )\r\n      this._userDetailService.getUserDetail(this.registerUserData.userid)\r\n      .subscribe(\r\n        res => {\r\n          \r\n          this.registerUserData = res[0]    \r\n\r\n        },\r\n        err =>{\r\n          console.log(err)\r\n        }\r\n      )\r\n\r\n      this._userDetailService.getUserGroups(this.registerUserData.userid)\r\n      .subscribe(\r\n        res => {              \r\n          this._groupsData = res\r\n          this._groupsData.forEach( val => { \r\n            \r\n            if(val.id == this.registerUserData.groupsid){\r\n              val.checked = true\r\n            }\r\n          })\r\n          \r\n        },\r\n        error => {  console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )\r\n      \r\n    }\r\n\r\n\r\n  nextTab(tab){\r\n    this._activeTab = tab\r\n  }\r\n  \r\n  featuresControl(event) {\r\n    \r\n    this.registerUserData.groupsid = event.target.id\r\n  }\r\n   \r\n  updateUser(){\r\n     this._userDetailService.updateUser(this.registerUserData.userid, this.registerUserData)\r\n       .subscribe(\r\n         res => {\r\n           console.log(res)\r\n           \r\n         },\r\n         error => console.log(error) \r\n         )  \r\n     \r\n   } \r\n\r\n  backToUsers(){\r\n\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy91c2VyL3VzZXItbWFpbi91c2VyLW1haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserMainService } from '../user-services/user-main.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-main',\r\n  templateUrl: './user-main.component.html',\r\n  styleUrls: ['./user-main.component.css']\r\n})\r\nexport class UserMainComponent implements OnInit {\r\n\r\n  user: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  _status= 'Todos'\r\n  \r\n  constructor(private _userService: UserMainService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this._userService.getUser()\r\n    .subscribe(      \r\n      res => {\r\n        console.log(res)\r\n        this.user = res\r\n      },\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _groupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-groups-add\"\r\n  private _userUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-add\"\r\n  private _sendEmailUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/send-email\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getUserGroups(){\r\n    return this.http.get<any>(this._groupUrl)\r\n   }\r\n\r\n   createUser(userData){\r\n    return this.http.post<any>(this._userUrl, userData)\r\n   }\r\n\r\n   sendEmail(user){\r\n    return this.http.post<any>(this._sendEmailUrl, user)\r\n\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _groupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-detail-groups/\"\r\n  private _userUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-detail/\"\r\n  private _userUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-update/\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getUserGroups(id){\r\n    return this.http.get<any>(this._groupUrl+id)\r\n   }\r\n\r\n  getUserDetail(id){\r\n  return this.http.get<any>(this._userUrl+id)\r\n  }\r\n\r\n  updateUser(id,userData){\r\n  return this.http.put<any>(this._userUpdateUrl+id, userData)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserMainService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _userUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-main\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getUser(){\r\n    return this.http.get<any>(this._userUrl)\r\n   }\r\n\r\n   \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC1jb250cmFjdC1kZXRhaWwvYXVkaXQtY29udHJhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-contract-detail',\r\n  templateUrl: './audit-contract-detail.component.html',\r\n  styleUrls: ['./audit-contract-detail.component.css']\r\n})\r\nexport class AuditContractDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC1jcmVkaXRvci1kZXRhaWwvYXVkaXQtY3JlZGl0b3ItZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-creditor-detail',\r\n  templateUrl: './audit-creditor-detail.component.html',\r\n  styleUrls: ['./audit-creditor-detail.component.css']\r\n})\r\nexport class AuditCreditorDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC1kZXRyYW4tZGV0YWlsL2F1ZGl0LWRldHJhbi1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-detran-detail',\r\n  templateUrl: './audit-detran-detail.component.html',\r\n  styleUrls: ['./audit-detran-detail.component.css']\r\n})\r\nexport class AuditDetranDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC1ncm91cC1kZXRhaWwvYXVkaXQtZ3JvdXAtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-group-detail',\r\n  templateUrl: './audit-group-detail.component.html',\r\n  styleUrls: ['./audit-group-detail.component.css']\r\n})\r\nexport class AuditGroupDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC11c2VyLWRldGFpbC9hdWRpdC11c2VyLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-audit-user-detail',\r\n  templateUrl: './audit-user-detail.component.html',\r\n  styleUrls: ['./audit-user-detail.component.css']\r\n})\r\nexport class AuditUserDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvZmluYW5jaWFsLXRyYW5zYWN0aW9uL2ZpbmFuY2lhbC10cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-financial-transaction',\r\n  templateUrl: './financial-transaction.component.html',\r\n  styleUrls: ['./financial-transaction.component.css']\r\n})\r\nexport class FinancialTransactionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as json2csv from 'json2csv'; // convert json file to csv\r\nimport { saveAs } from 'file-saver';  // save the file\r\n\r\n@Injectable()\r\nexport class CsvFileService {\r\n    Json2csvParser = json2csv.Parser;\r\n    constructor() {\r\n\r\n     }\r\n     public CsvFile(data:any, filename? : string){\r\n        let csvData = this.convertToCSV(data);\r\n        let file = new Blob([csvData], { type: 'text/csv;charset=utf-8' });\r\n        saveAs(file,\"data.csv\");\r\n    }\r\n\r\n\r\n\r\n    public convertToCSV(objArray: any, fields?) {\r\n        let json2csvParser = new this.Json2csvParser({ opts: fields });\r\n        let csv = json2csvParser.parse(objArray);\r\n        console.log(csv);\r\n        return csv;\r\n    }\r\n\r\n   \r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n\r\n//Export para XLS\r\n\r\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst EXCEL_EXTENSION = '.xlsx';\r\n\r\n@Injectable()\r\nexport class ExcelService {\r\n  constructor() {\r\n      \r\n}\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n   \r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);   \r\n    \r\n    const workbook: XLSX.WorkBook = { Sheets: { 'Bilhetagem_Transações_RainTI': worksheet }, SheetNames: ['Bilhetagem_Transações_RainTI'] };\r\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: EXCEL_TYPE\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n  }\r\n}","export const dataTransactionBilling: any[]= [\r\n   \t\t\t\t\r\n\t{Contrato: '784568', Gestora: 'ITAU', Credora: 'ITAU A', Chassi: '5MNGWKTUN1ZAF267', Detran: 'Acre', Taxa: 130, Data: '2020-02-28', Status: 'Novo contrato'}, \r\n    {Contrato: '784636', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '8ZNT2JEY0LF346944', Detran: 'Alagoas', Taxa: 159, Data: '2020-03-11', Status: 'Aditivo'}, \r\n    {Contrato: '784636', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '8ZNT2JEY0LF346944', Detran: 'Alagoas', Taxa: 159, Data: '2020-03-01', Status: 'Novo contrato'}, \r\n    {Contrato: '784570', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '2DJ8BFPB0FF8R9977', Detran: 'Amapá', Taxa: 179, Data: '2020-03-02', Status: 'Novo contrato'}, \r\n    {Contrato: '784625', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '56UH7A0G0A81C7532', Detran: 'Amapá', Taxa: 179, Data: '2020-03-03', Status: 'Novo contrato'}, \r\n    {Contrato: '784637', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '9DJ8BFPB0FF8R9980', Detran: 'Amapá', Taxa: 179, Data: '2020-03-04', Status: 'Novo contrato'}, \r\n    {Contrato: '784637', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '9DJ8BFPB0FF8R9980', Detran: 'Amapá', Taxa: 179, Data: '2020-03-14', Status: 'Aditivo'}, \r\n    {Contrato: '784626', Gestora: 'Santander', Credora: 'Santander B', Chassi: '6WAJDN0Z7LPMB7767', Detran: 'Amazonas', Taxa: 199, Data: '2020-03-06', Status: 'Novo contrato'}, \r\n    {Contrato: '784638', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1ZNT2JEY0LF346943', Detran: 'Amazonas', Taxa: 199, Data: '2020-03-07', Status: 'Novo contrato'}, \r\n    {Contrato: '784638', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1ZNT2JEY0LF346943', Detran: 'Amazonas', Taxa: 199, Data: '2020-03-10', Status: 'Aditivo'}, \r\n    {Contrato: '784627', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '9DJ8BFPB0FF8R9987', Detran: 'Bahia', Taxa: 230, Data: '2020-03-09', Status: 'Novo contrato'}, \r\n    {Contrato: '784639', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '9DJ8BFPB0FF8R9981', Detran: 'Bahia', Taxa: 230, Data: '2020-02-28', Status: 'Novo contrato'}, \r\n    {Contrato: '784655', Gestora: 'Santander', Credora: 'Santander B', Chassi: '56UH7A0G0A81C7531', Detran: 'Bahia', Taxa: 230, Data: '2020-02-29', Status: 'Novo contrato'}, \r\n    {Contrato: '784573', Gestora: 'Santander', Credora: 'Santander A', Chassi: '5MNGWKTUN1ZAF2683', Detran: 'Ceará', Taxa: 200, Data: '2020-03-01', Status: 'Novo contrato'}, \r\n    {Contrato: '784628', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '434KUZ9MBD3GY1330', Detran: 'Ceará', Taxa: 200, Data: '2020-03-02', Status: 'Novo contrato'}, \r\n    {Contrato: '784640', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '5MNGWKTUN1ZAF2682', Detran: 'Ceará', Taxa: 200, Data: '2020-03-03', Status: 'Novo contrato'}, \r\n    {Contrato: '784574', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '6WAJDN0Z7LPMB7765', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-15', Status: 'Aditivo'}, \r\n    {Contrato: '784574', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '6WAJDN0Z7LPMB7765', Detran: 'DistritoFeAderal', Taxa: 239, Data: '2020-03-05', Status: 'Novo contrato'}, \r\n    {Contrato: '784595', Gestora: 'ITAU', Credora: 'ITAUD', Chassi: '335KUZ9MBD3GY1330', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-06', Status: 'Novo contrato'}, \r\n    {Contrato: '784612', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '436KUZ9MBD3GY1330', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-07', Status: 'Novo contrato'}, \r\n    {Contrato: '784629', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '2DJ8BFPB0FF8R9984', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-08', Status: 'Novo contrato'}, \r\n    {Contrato: '784641', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '6WAJDN0Z7LPMB7762', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-09', Status: 'Novo contrato'}, \r\n    {Contrato: '784664', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1NEXLN3CW6WPL4151', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-03-09', Status: 'Aditivo'}, \r\n    {Contrato: '784664', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1NEXLN3CW6WPL4151', Detran: 'DistritoFederal', Taxa: 239, Data: '2020-02-29', Status: 'Novo contrato'}, \r\n    {Contrato: '784575', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '7Z66RUL7XADVN1630', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-01', Status: 'Novo contrato'}, \r\n    {Contrato: '784596', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '1ZNT2JEY0LF346946', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-02', Status: 'Novo contrato'}, \r\n    {Contrato: '784613', Gestora: 'ITAU', Credora: 'ITAU F', Chassi: '1ZNT2JEY0LF346948', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-03', Status: 'Novo contrato'}, \r\n    {Contrato: '784630', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '56UH7A0G0A81C7533', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-04', Status: 'Novo contrato'}, \r\n    {Contrato: '784642', Gestora: 'Santander', Credora: 'Santander B', Chassi: '335KUZ9MBD3GY1330', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-05', Status: 'Novo contrato'}, \r\n    {Contrato: '784658', Gestora: 'ITAU', Credora: 'ITAU K', Chassi: '8ZNT2JEY0LF346940', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-06', Status: 'Novo contrato'}, \r\n    {Contrato: '784665', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '433KUZ9MBD3GY1330', Detran: 'EspíritoSanto ', Taxa: 233, Data: '2020-03-07', Status: 'Novo contrato'}, \r\n    {Contrato: '784576', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '8ZNT2JEY0LF346943', Detran: 'Goiás', Taxa: 122, Data: '2020-03-08', Status: 'Novo contrato'}, \r\n    {Contrato: '784597', Gestora: 'Santander', Credora: 'Santander B', Chassi: '9DJ8BFPB0FF8R9984', Detran: 'Goiás', Taxa: 122, Data: '2020-03-09', Status: 'Novo contrato'}, \r\n    {Contrato: '784614', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '5MNGWKTUN1ZAF2684', Detran: 'Goiás', Taxa: 122, Data: '2020-03-10', Status: 'Novo contrato'}, \r\n    {Contrato: '784631', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '6WAJDN0Z7LPMB7768', Detran: 'Goiás', Taxa: 122, Data: '2020-03-11', Status: 'Novo contrato'}, \r\n    {Contrato: '784631', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '6WAJDN0Z7LPMB7768', Detran: 'Goiás', Taxa: 122, Data: '2020-03-21', Status: 'Aditivo'}, \r\n    {Contrato: '784659', Gestora: 'ITAU', Credora: 'ITAU K', Chassi: '4AKS0VNBTHDA11904', Detran: 'Goiás', Taxa: 122, Data: '2020-03-13', Status: 'Novo contrato'}, \r\n    {Contrato: '784666', Gestora: 'Santander', Credora: 'Santander B', Chassi: '2DJ8BFPB0FF8R9983', Detran: 'Goiás', Taxa: 122, Data: '2020-03-14', Status: 'Novo contrato'}, \r\n    {Contrato: '784577', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '4AKS0VNBTHDA11907', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-15', Status: 'Novo contrato'}, \r\n    {Contrato: '784598', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica B', Chassi: '336KUZ9MBD3GY1330', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-16', Status: 'Novo contrato'}, \r\n    {Contrato: '784615', Gestora: 'Santander', Credora: 'Santander B', Chassi: '6WAJDN0Z7LPMB7764', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-17', Status: 'Novo contrato'}, \r\n    {Contrato: '784632', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1ZNT2JEY0LF346942', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-18', Status: 'Novo contrato'}, \r\n    {Contrato: '784644', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '435KUZ9MBD3GY1330', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-19', Status: 'Novo contrato'}, \r\n    {Contrato: '784660', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '1NEXLN3CW6WPL4150', Detran: 'Maranhão', Taxa: 144, Data: '2020-03-20', Status: 'Novo contrato'}, \r\n    {Contrato: '784599', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '8ZNT2JEY0LF346945', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-22', Status: 'Aditivo'}, \r\n    {Contrato: '784578', Gestora: 'ITAU', Credora: 'ITAU B', Chassi: '7Z66RUL7XADVN1633', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-11', Status: 'Novo contrato'}, \r\n    {Contrato: '784599', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '8ZNT2JEY0LF346945', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-12', Status: 'Novo contrato'}, \r\n    {Contrato: '784616', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '337KUZ9MBD3GY1330', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-13', Status: 'Novo contrato'}, \r\n    {Contrato: '784633', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '9DJ8BFPB0FF8R9980', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-14', Status: 'Novo contrato'}, \r\n    {Contrato: '784645', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '1ZNT2JEY0LF346947', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-15', Status: 'Novo contrato'}, \r\n    {Contrato: '784661', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '6601U3634EWXA9635', Detran: 'MatoGrosso', Taxa: 188, Data: '2020-03-16', Status: 'Novo contrato'}, \r\n    {Contrato: '784579', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '8ZNT2JEY0LF346946', Detran: 'MatoGrossodoSul', Taxa: 188, Data: '2020-03-17', Status: 'Novo contrato'}, \r\n    {Contrato: '784579', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '8ZNT2JEY0LF346946', Detran: 'MatoGrossodoSul', Taxa: 188, Data: '2020-03-27', Status: 'Aditivo'}, \r\n    {Contrato: '784617', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '1ZNT2JEY0LF346948', Detran: 'MatoGrossodoSul', Taxa: 188, Data: '2020-03-19', Status: 'Novo contrato'}, \r\n    {Contrato: '784592', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '7Z66RUL7XADVN1629', Detran: 'SãoPaulo', Taxa: 239, Data: '2020-06-01', Status: 'Aditivo'}, \r\n    {Contrato: '784580', Gestora: 'Santander', Credora: 'Santander B', Chassi: '6661U3634EWXA9635', Detran: 'MinasGerais', Taxa: 188, Data: '2020-03-10', Status: 'Novo contrato'}, \r\n    {Contrato: '784601', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '1ZNT2JEY0LF346944', Detran: 'MinasGerais', Taxa: 188, Data: '2020-03-11', Status: 'Novo contrato'}, \r\n    {Contrato: '784618', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '7Z66RUL7XADVN1629', Detran: 'MinasGerais', Taxa: 188, Data: '2020-03-12', Status: 'Novo contrato'}, \r\n    {Contrato: '784635', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '335KUZ9MBD3GY1330', Detran: 'MinasGerais', Taxa: 188, Data: '2020-03-13', Status: 'Novo contrato'}, \r\n    {Contrato: '784602', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '9DJ8BFPB0FF8R9982', Detran: 'Pará ', Taxa: 237, Data: '2020-03-25', Status: 'Aditivo'}, \r\n    {Contrato: '784602', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '9DJ8BFPB0FF8R9982', Detran: 'Pará ', Taxa: 237, Data: '2020-03-15', Status: 'Novo contrato'}, \r\n    {Contrato: '784619', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '9DJ8BFPB0FF8R9985', Detran: 'Pará ', Taxa: 237, Data: '2020-03-16', Status: 'Novo contrato'}, \r\n    {Contrato: '784582', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '4AKS0VNBTHDA11910', Detran: 'Paraíba', Taxa: 211, Data: '2020-03-17', Status: 'Novo contrato'}, \r\n    {Contrato: '784603', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '1ZNT2JEY0LF346945', Detran: 'Paraíba', Taxa: 211, Data: '2020-03-18', Status: 'Novo contrato'}, \r\n    {Contrato: '784620', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '1ZNT2JEY0LF346949', Detran: 'Paraíba', Taxa: 211, Data: '2020-03-19', Status: 'Novo contrato'}, \r\n    {Contrato: '784646', Gestora: 'Santander', Credora: 'Santander B', Chassi: '5MNGWKTUN1ZAF2683', Detran: 'Paraíba', Taxa: 211, Data: '2020-03-20', Status: 'Novo contrato'}, \r\n    {Contrato: '784583', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '56UH7A0G0A81C7532', Detran: 'Paraná ', Taxa: 211, Data: '2020-04-03', Status: 'Novo contrato'}, \r\n    {Contrato: '784604', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '9DJ8BFPB0FF8R9983', Detran: 'Paraná ', Taxa: 211, Data: '2020-04-04', Status: 'Novo contrato'}, \r\n    {Contrato: '784621', Gestora: 'ITAU', Credora: 'ITAU F', Chassi: '5MNGWKTUN1ZAF2686', Detran: 'Paraná ', Taxa: 211, Data: '2020-04-05', Status: 'Novo contrato'}, \r\n    {Contrato: '784647', Gestora: 'Santander', Credora: 'Santander B', Chassi: '336KUZ9MBD3GY1330', Detran: 'Paraná ', Taxa: 211, Data: '2020-04-06', Status: 'Novo contrato'}, \r\n    {Contrato: '784584', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '56UH7A0G0A81C7533', Detran: 'Pernambuco', Taxa: 211, Data: '2020-04-07', Status: 'Novo contrato'}, \r\n    {Contrato: '784605', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '7Z66RUL7XADVN1630', Detran: 'Pernambuco', Taxa: 211, Data: '2020-04-08', Status: 'Novo contrato'}, \r\n    {Contrato: '784622', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '9DJ8BFPB0FF8R9986', Detran: 'Pernambuco', Taxa: 211, Data: '2020-04-09', Status: 'Novo contrato'}, \r\n    {Contrato: '784648', Gestora: 'Santander', Credora: 'Santander B', Chassi: '6WAJDN0Z7LPMB7763', Detran: 'Pernambuco', Taxa: 211, Data: '2020-04-10', Status: 'Novo contrato'}, \r\n    {Contrato: '784623', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '433KUZ9MBD3GY1330', Detran: 'Piauí', Taxa: 211, Data: '2020-04-23', Status: 'Aditivo'}, \r\n    {Contrato: '784606', Gestora: 'Santander', Credora: 'Santander B', Chassi: '8ZNT2JEY0LF346946', Detran: 'Piauí', Taxa: 211, Data: '2020-04-12', Status: 'Novo contrato'}, \r\n    {Contrato: '784623', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '433KUZ9MBD3GY1330', Detran: 'Piauí', Taxa: 211, Data: '2020-04-13', Status: 'Novo contrato'}, \r\n    {Contrato: '784649', Gestora: 'Santander', Credora: 'Santander B', Chassi: '337KUZ9MBD3GY1330', Detran: 'Piauí', Taxa: 211, Data: '2020-04-03', Status: 'Novo contrato'}, \r\n    {Contrato: '784586', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '434KUZ9MBD3GY1330', Detran: 'RiodeJaneiro', Taxa: 212, Data: '2020-04-04', Status: 'Novo contrato'}, \r\n    {Contrato: '784607', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '435KUZ9MBD3GY1330', Detran: 'RiodeJaneiro', Taxa: 212, Data: '2020-04-05', Status: 'Novo contrato'}, \r\n    {Contrato: '784624', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '2DJ8BFPB0FF8R9983', Detran: 'RiodeJaneiro', Taxa: 212, Data: '2020-04-06', Status: 'Novo contrato'}, \r\n    {Contrato: '784650', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '56UH7A0G0A81C7530', Detran: 'RiodeJaneiro', Taxa: 212, Data: '2020-04-07', Status: 'Novo contrato'}, \r\n    {Contrato: '784608', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '1ZNT2JEY0LF346947', Detran: 'RioGrandedoNorte', Taxa: 212, Data: '2020-04-19', Status: 'Aditivo'}, \r\n    {Contrato: '784608', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '1ZNT2JEY0LF346947', Detran: 'RioGrandedoNorte', Taxa: 212, Data: '2020-04-09', Status: 'Novo contrato'}, \r\n    {Contrato: '784651', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '6WAJDN0Z7LPMB7765', Detran: 'RioGrandedoNorte', Taxa: 212, Data: '2020-04-10', Status: 'Novo contrato'}, \r\n    {Contrato: '784588', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '6WAJDN0Z7LPMB7762', Detran: 'RioGrandedoSul', Taxa: 222, Data: '2020-04-11', Status: 'Novo contrato'}, \r\n    {Contrato: '784609', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '9DJ8BFPB0FF8R9984', Detran: 'RioGrandedoSul', Taxa: 222, Data: '2020-04-12', Status: 'Novo contrato'}, \r\n    {Contrato: '784652', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '9DJ8BFPB0FF8R9985', Detran: 'RioGrandedoSul', Taxa: 222, Data: '2020-04-13', Status: 'Novo contrato'}, \r\n    {Contrato: '784589', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '7Z66RUL7XADVN1628', Detran: 'Rondônia', Taxa: 167, Data: '2020-05-17', Status: 'Novo contrato'}, \r\n    {Contrato: '784610', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '7Z66RUL7XADVN1631', Detran: 'Rondônia', Taxa: 167, Data: '2020-05-18', Status: 'Novo contrato'}, \r\n    {Contrato: '784653', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '432KUZ9MBD3GY1330', Detran: 'Rondônia', Taxa: 167, Data: '2020-05-19', Status: 'Novo contrato'}, \r\n    {Contrato: '784662', Gestora: 'Bradesco', Credora: 'Bradesco B', Chassi: '8ZNT2JEY0LF346941', Detran: 'Rondônia', Taxa: 167, Data: '2020-05-20', Status: 'Novo contrato'}, \r\n    {Contrato: '784590', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '8ZNT2JEY0LF346944', Detran: 'Roraima ', Taxa: 186, Data: '2020-05-21', Status: 'Novo contrato'}, \r\n    {Contrato: '784590', Gestora: 'Bradesco', Credora: 'Bradesco A', Chassi: '8ZNT2JEY0LF346944', Detran: 'Roraima ', Taxa: 186, Data: '2020-05-23', Status: 'Aditivo'}, \r\n    {Contrato: '784654', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '2DJ8BFPB0FF8R9982', Detran: 'Roraima ', Taxa: 186, Data: '2020-05-23', Status: 'Novo contrato'}, \r\n    {Contrato: '784663', Gestora: 'ITAU', Credora: 'ITAU G', Chassi: '4AKS0VNBTHDA11905', Detran: 'Roraima ', Taxa: 186, Data: '2020-05-24', Status: 'Novo contrato'}, \r\n    {Contrato: '784591', Gestora: 'Caixa Econômica', Credora: 'Caixa Econômica A', Chassi: '56UH7A0G0A81C7530', Detran: 'SantaCatarina', Taxa: 146, Data: '2020-05-25', Status: 'Novo contrato'}, \r\n    {Contrato: '784592', Gestora: 'ITAU', Credora: 'ITAU C', Chassi: '7Z66RUL7XADVN1629', Detran: 'SãoPaulo', Taxa: 239, Data: '2020-05-24', Status: 'Novo contrato'}, \r\n    {Contrato: '784593', Gestora: 'Santander', Credora: 'Santander B', Chassi: '6WAJDN0Z7LPMB7763', Detran: 'Sergipe', Taxa: 234, Data: '2020-05-27', Status: 'Novo contrato'}, \r\n    {Contrato: '784594', Gestora: 'Santander', Credora: 'Santander B', Chassi: '2DJ8BFPB0FF8R9983', Detran: 'Tocantins', Taxa: 216, Data: '2020-05-28', Status: 'Novo contrato'}\r\n    \r\n    ];","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvdHJhbnNhY3Rpb24tYmlsbGluZy90cmFuc2FjdGlvbi1iaWxsaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { dataTransactionBilling } from './fixed-data-transaction-billing';\r\nimport {ExcelService} from './excel.service';\r\nimport {CsvFileService} from './csv.service';\r\n\r\n@Component({\r\n  selector: 'app-transaction-billing',\r\n  templateUrl: './transaction-billing.component.html',\r\n  styleUrls: ['./transaction-billing.component.css']\r\n})\r\nexport class TransactionBillingComponent implements OnInit {\r\n  ngOnInit() {}\r\n    \r\n    //array da tabela\r\n    public dataTransactionBilling: any = dataTransactionBilling;\r\n    filterTransactionBilling: any [] =[];\r\n    filterdetran: any [] =[];;\r\n\r\n    //filtros da tabela\r\n    detran: string;\r\n    creditor: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n\r\n    //botões mostrar filtro\r\n    filter: string[] =['semFiltros'];\r\n\r\n    // detranList: any[] = ['','Acre', 'Pernambuco', 'Bahia'];\r\n    // gestoraList: string[] = ['ITAU', 'Santander', 'CaixaEconômica'];\r\n\r\n    //paginação\r\n    page = 1;\r\n    pageSize= 5;\r\n\r\n    //export XLS\r\n    groupData: any;\r\n    \r\n    constructor( \r\n                  private excelService:ExcelService, \r\n                  public csvFileService:CsvFileService\r\n                )\r\n    {\r\n\r\n    this.groupData = this.organise(this.filterTransactionBilling);\r\n\r\n    }\r\n    exportAsXLSX(){\r\n\r\n      this.excelService.exportAsExcelFile(this.filterTransactionBilling, 'Bilhetagem_Transações_RainTI');\r\n       \r\n    } \r\n\r\n    organise(arr) {\r\n      var headers = [], \r\n        objs = [],    \r\n        i, j;\r\n      for (i = 0; i < arr.length; ++i) {\r\n        j = headers.indexOf(arr[i].id); \r\n        if (j === -1) { \r\n          j = headers.length;\r\n          headers[j] = arr[i].id;\r\n          objs[j] = {};\r\n          objs[j].id = arr[i].id;\r\n          objs[j].data = [];\r\n        }\r\n        objs[j].data.push( \r\n          {\r\n            case_worked: arr[i].case_worked,\r\n            note: arr[i].note, id: arr[i].id\r\n          }\r\n        );\r\n      }\r\n      return objs;\r\n    }\r\n\r\n    CsvFile(){\r\n      return this.csvFileService.CsvFile(this.filterTransactionBilling)\r\n      }\r\n\r\n   \r\n \r\n  markAsActive(filter: string[]){\r\n    this.filter = filter;\r\n    this.detran ='';\r\n    this.creditor ='';\r\n    delete this.startDate;\r\n    delete this.endDate;\r\n    \r\n  }\r\n\r\n  getTotalCost() {\r\n    return this.filterTransactionBilling.reduce((acc, val) => acc += val.Taxa, 0);\r\n  }\r\n\r\n      getArray(){\r\n\r\n      if (this.filterTransactionBilling.length  == 0 && this.detran === undefined && this.creditor === undefined) {\r\n        this.filterTransactionBilling = dataTransactionBilling;\r\n        return this.filterTransactionBilling;\r\n      }\r\n      \r\n      if (this.detran !== undefined && this.creditor === undefined && this.startDate === undefined && this.endDate === undefined) {\r\n      \r\n      this.filterTransactionBilling = dataTransactionBilling.filter(\r\n         v => v.Detran.toLocaleLowerCase().includes(this.detran.toLocaleLowerCase()));\r\n      }\r\n      if (this.detran !== undefined && this.creditor !== undefined && this.startDate === undefined && this.endDate === undefined)\r\n      {\r\n         this.filterdetran = dataTransactionBilling.filter(\r\n          v => v.Detran.toLocaleLowerCase().includes(this.detran.toLocaleLowerCase()));\r\n          this.filterTransactionBilling = this.filterdetran\r\n      }\r\n\r\n      if (this.detran !== undefined && this.creditor === undefined && this.startDate !== undefined && this.endDate !== undefined )\r\n      {\r\n         this.filterdetran = dataTransactionBilling.filter(\r\n          v => v.Detran.toLocaleLowerCase().includes(this.detran.toLocaleLowerCase()));\r\n          this.filterTransactionBilling = this.filterdetran\r\n      }\r\n\r\n      if (this.creditor !== undefined && this.detran === undefined && this.startDate === undefined && this.endDate === undefined) {\r\n         this.filterTransactionBilling = dataTransactionBilling.filter(\r\n          d => d.Credora.toLocaleLowerCase().includes(this.creditor.toLocaleLowerCase()));\r\n        }\r\n\r\n        if (this.creditor !== undefined && this.detran === undefined && this.startDate !== undefined && this.endDate !== undefined ) {\r\n            this.filterTransactionBilling = this.filterdetran.filter(\r\n            d => d.Credora.toLocaleLowerCase().includes(this.creditor.toLocaleLowerCase()));\r\n      }\r\n\r\n      if (this.creditor !== undefined && this.detran !== undefined && this.startDate === undefined && this.endDate === undefined) {\r\n        this.filterTransactionBilling = this.filterdetran.filter(\r\n        d => d.Credora.toLocaleLowerCase().includes(this.creditor.toLocaleLowerCase()));\r\n      }\r\n\r\n      if (this.startDate !== undefined && this.endDate !== undefined && this.detran === undefined && this.creditor === undefined) {\r\n\r\n        this.dataTransactionBilling.Data = new Date().getTime();\r\n        this.filterTransactionBilling = dataTransactionBilling.filter((y) =>\r\n         y.Data >= this.startDate && y.Data <= this.endDate);\r\n      }\r\n\r\n      if (this.startDate !== undefined && this.endDate !== undefined && this.detran !== undefined && this.creditor === undefined) {\r\n\r\n      this.dataTransactionBilling.Data = new Date().getTime();\r\n      this.filterTransactionBilling = dataTransactionBilling.filter((y) =>\r\n        y.Data >= this.startDate && y.Data <= this.endDate);\r\n      }\r\n      \r\n      if (this.startDate !== undefined && this.endDate !== undefined && this.detran === undefined && this.creditor !== undefined) {\r\n\r\n        this.dataTransactionBilling.Data = new Date().getTime();\r\n        this.filterTransactionBilling = dataTransactionBilling.filter((y) =>\r\n          y.Data >= this.startDate && y.Data <= this.endDate);\r\n    \r\n      }\r\n\r\n      if (this.startDate !== undefined && this.endDate !== undefined && this.detran !== undefined && this.creditor !== undefined) {\r\n\r\n        this.dataTransactionBilling.Data = new Date().getTime();\r\n        this.filterTransactionBilling = dataTransactionBilling.filter((y) =>\r\n          y.Data >= this.startDate && y.Data <= this.endDate);\r\n        \r\n        this.filterTransactionBilling = this.filterTransactionBilling.filter(\r\n          d => d.Credora.toLocaleLowerCase().includes(this.creditor.toLocaleLowerCase()));\r\n\r\n        this.filterTransactionBilling = this.filterTransactionBilling.filter(\r\n          v => v.Detran.toLocaleLowerCase().includes(this.detran.toLocaleLowerCase()));\r\n    \r\n      }\r\n\r\n      return this.filterTransactionBilling;\r\n    \r\n\r\n}\r\n}\r\n\r\n\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from '../system-access-services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserIdleService } from 'angular-user-idle';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginUserData = {\r\n    userName: '',\r\n    password: '',\r\n  }\r\n  _errorMessage = ''\r\n\r\n  constructor(private _auth: AuthService, \r\n    private _router: Router,\r\n    private userIdle: UserIdleService) { }\r\n\r\n  ngOnInit() {\r\n    this.stop()\r\n  }\r\n\r\n  loginUser(){\r\n\r\n    this.stop()\r\n\r\n    // Setting configs of watching tims is setted in seconds\r\n    this.userIdle.setConfigValues({idle: 600/* 1 hour*/, timeout: 1, ping:120})\r\n    \r\n    this.userIdle.startWatching();\r\n    \r\n    // Start watching when user idle is starting.\r\n    this.userIdle.onTimerStart().subscribe(count => console.log(count));\r\n    \r\n    // Start watch when time is up.\r\n    this.userIdle.onTimeout().subscribe(() => {\r\n      sessionStorage.removeItem('token')\r\n      this.stopWatching()\r\n      this.stop()\r\n      this.restart()\r\n      this._router.navigate(['/login'])\r\n    });\r\n\r\n\r\n    this._auth.loginUser(this.loginUserData)\r\n      .subscribe(\r\n        res => {\r\n         // console.log(res)\r\n          sessionStorage.setItem('token',res.token)\r\n          this._router.navigate(['/registrar-contrato'])\r\n        },\r\n        error => {\r\n          this._errorMessage = error.error \r\n          console.log(error)\r\n        }\r\n      )\r\n  }\r\n\r\n  stop() {\r\n    this.userIdle.stopTimer();\r\n  }\r\n \r\n  stopWatching() {\r\n    this.userIdle.stopWatching();\r\n  }\r\n \r\n  startWatching() {\r\n    this.userIdle.startWatching();\r\n  }\r\n \r\n  restart() {\r\n    this.userIdle.resetTimer();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci1mYWlsZWQvcGFzc3dvcmQtcmVjb3Zlci1mYWlsZWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password-recover-failed',\r\n  templateUrl: './password-recover-failed.component.html',\r\n  styleUrls: ['./password-recover-failed.component.css']\r\n})\r\nexport class PasswordRecoverFailedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci1zdWNjZXNzL3Bhc3N3b3JkLXJlY292ZXItc3VjY2Vzcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password-recover-success',\r\n  templateUrl: './password-recover-success.component.html',\r\n  styleUrls: ['./password-recover-success.component.css']\r\n})\r\nexport class PasswordRecoverSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci9wYXNzd29yZC1yZWNvdmVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../system-access-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-password-recover',\r\n  templateUrl: './password-recover.component.html',\r\n  styleUrls: ['./password-recover.component.css']\r\n})\r\nexport class PasswordRecoverComponent implements OnInit {\r\n\r\n  recoverPasswordData = {\r\n    cpf: ''\r\n  }\r\n  resetCode = {}\r\n\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  recoverPassword() {\r\n    this._auth.recoverPassword(this.recoverPasswordData)\r\n      .subscribe(\r\n        res => {\r\n          this.resetCode = res.code\r\n          this.sendEmail(res.emailTo[0].email)\r\n          console.log(res)\r\n          this._router.navigate(['/recuperar-senha-reset/'+res.emailTo[0].id])\r\n        },\r\n        error => {\r\n          console.log(error),\r\n            this._router.navigate(['/recuperar-senha-falha'])\r\n        }\r\n      )\r\n  }\r\n\r\n  sendEmail(emailTo) {\r\n    var emailConfig = require('../../../assets/configs/config-email-noreply.json')\r\n\r\n    let emailData = {\r\n      host: emailConfig.host,\r\n      port: emailConfig.port,\r\n      secure: emailConfig.secure,\r\n      requireTLS: emailConfig.requireTLS,\r\n      userName: emailConfig.userName,\r\n      emailFrom: emailConfig.emailFrom,\r\n      password: emailConfig.password,\r\n      emailTo: emailTo,\r\n      subjectContent: \"[NÃO RESPONDA] - RainTI recuperar senha\",\r\n      plainText: \"Para recuperar sua senha acesse: http://localhost:4200/recuperar-senha-reset, informe seu usário e o código a seguir: \" + this.resetCode,\r\n      html: \r\n      ' <head> '\r\n      +' <title>Rating Reminder</title> '\r\n    +' <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\"> '\r\n    +' <meta content=\"width=device-width\" name=\"viewport\"> '\r\n    +' <style type=\"text/css\"> '\r\n    +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +' ; '\r\n            +' font-weight: 600; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Bold&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-bold.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n\r\n        +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +' ; '\r\n            +' font-weight: 500; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Medium&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-medium.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n\r\n        +' @font-face { '\r\n          +' font-family: &#x27; '\r\n            +' Postmates Std&#x27; '\r\n            +'  ; '\r\n            +' font-weight: 400; '\r\n            +' font-style: normal; '\r\n            +' src: local(&#x27; Postmates Std Regular&#x27; ), url(https://s3-us-west-1.amazonaws.com/buyer-static.postmates.com/assets/email/postmates-std-regular.woff) format(&#x27; woff&#x27; ); '\r\n            +' } '\r\n        +' </style> '\r\n    +' <style media=\"screen and (max-width: 680px)\"> '\r\n    +' @media screen and (max-width: 680px) { '\r\n          +' .page-center { '\r\n              +' padding-left: 0 !important; '\r\n                +' padding-right: 0 !important; '\r\n                +'  } '\r\n\r\n            +' .footer-center { '\r\n              +' padding-left: 20px !important; '\r\n                +' padding-right: 20px !important; '\r\n                +'  } '\r\n            +' } '\r\n        +' </style> '\r\n    +' </head> '\r\n\r\n+' <body style=\"background-color: #f4f4f5;\"> '\r\n+' <table cellpadding=\"0\" cellspacing=\"0\" '\r\n    +' style=\"width: 100%; height: 100%; background-color: #f4f4f5; text-align: center;\"> '\r\n        +' <tbody> '\r\n        +' <tr> '\r\n            +' <td style=\"text-align: center;\"> '\r\n                +' <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" id=\"body\" '\r\n                    +' style=\"background-color: #fff; width: 100%; max-width: 680px; height: 100%;\"> '\r\n                        +' <tbody> '\r\n                        +' <tr> '\r\n                            +' <td> '\r\n                                +' <table align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"page-center\" '\r\n                                    +' style=\"text-align: left; padding-bottom: 88px; width: 100%; padding-left: 120px; padding-right: 120px;\"> '\r\n                                        +' <tbody> '\r\n                                        +' <tr> '\r\n                                            +' <td style=\"padding-top: 24px;\"> '\r\n                                                +' <img src=\"cid:logo\" '\r\n                                                    +' style=\"width: 56px;\"> '\r\n                                                        +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td colspan=\"2\" '\r\n                                                +' style=\"padding-top: 72px; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #000000; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 48px; font-smoothing: always; font-style: normal; font-weight: 600; letter-spacing: -2.6px; line-height: 52px; mso-line-height-rule: exactly; text-decoration: none;\"> '\r\n                                                    +' Recupere sua senha</td> '\r\n                                                    +' </tr> '\r\n                                            +'  <tr> '\r\n                                            +' <td style=\"padding-top: 48px; padding-bottom: 48px;\"> '\r\n                                                +' <table cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%\"> '\r\n                                                    +' <tbody> '\r\n                                                        +' <tr> '\r\n                                                            +' <td '\r\n                                                                +' style=\"width: 100%; height: 1px; max-height: 1px; background-color: #d9dbe0; opacity: 0.81\"> '\r\n                                                                    +'  </td> '\r\n                                                                +' </tr> '\r\n                                                            +'  </tbody> '\r\n                                                        +' </table> '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td '\r\n                                                +' style=\"-ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #9095a2; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 16px; font-smoothing: always; font-style: normal; font-weight: 400; letter-spacing: -0.18px; line-height: 24px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 100%;\"> '\r\n                                                    +' Você está recebendo esse e-mail porque houve uma solicitação de recuperar '\r\n                                                    +' senha em sua conta da RainTI no SRC-e. '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td '\r\n                                                +' style=\"padding-top: 24px; -ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #9095a2; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 16px; font-smoothing: always; font-style: normal; font-weight: 400; letter-spacing: -0.18px; line-height: 24px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 100%;\"> '\r\n                                                    +' Por favor toque no botão abaixo e cadastre uma nova senha. '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +' <tr> '\r\n                                            +' <td> '\r\n                                                +' <a data-click-track-id=\"37\" href=\"http://localhost:4200/recuperar-senha-reset\" '\r\n                                                    +' style=\"margin-top: 36px; -ms-text-size-adjust: 100%; -ms-text-size-adjust: 100%; -webkit-font-smoothing: antialiased; -webkit-text-size-adjust: 100%; color: #ffffff; font-family: \\'Postmates Std\\', \\'Helvetica\\', -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\', \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\', \\'Helvetica Neue\\', sans-serif; font-size: 12px; font-smoothing: always; font-style: normal; font-weight: 600; letter-spacing: 0.7px; line-height: 48px; mso-line-height-rule: exactly; text-decoration: none; vertical-align: top; width: 220px; background-color: #0090D5; border-radius: 5px; display: block; text-align: center; text-transform: uppercase\" '\r\n                                                        +' target=\"_blank\"> '\r\n                                                        +' Recuperar senha '\r\n                                                        +' </a> '\r\n                                                    +' </td> '\r\n                                                +' </tr> '\r\n                                            +'  </tbody> '\r\n                                        +'  </table> '\r\n                                    +' </td> '\r\n                                +'  </tr> '\r\n                            +' </tbody> '\r\n                        +' </table> '\r\n                    +' </td> '\r\n                +' </tr> '\r\n            +'         </tbody> '\r\n+'     </table> '\r\n+' </body> '\r\n  }\r\n\r\n  console.log(emailData)\r\n     this._auth.sendEmail(emailData)\r\n  .subscribe(\r\n    res => {\r\n      console.log(res)\r\n    },\r\n    error => console.log(error)\r\n  )   \r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQuY29tcG9uZW50LmNzcyJ9 */\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../system-access-services/auth.service';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.css']\r\n})\r\nexport class PasswordResetComponent implements OnInit {\r\n  //const word = (<any>jsonData).name;  \r\n  \r\n\r\n  resetUserData = {\r\n    userId:'',\r\n    resetCode:'',\r\n    password:'',\r\n    confirmedPassword: '',\r\n    resetCode1: '',\r\n    resetCode2: '',\r\n    resetCode3: '',\r\n    resetCode4: '',\r\n    resetCode5: '',\r\n    resetCode6: '',\r\n  }\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router,\r\n    private _location: Location,\r\n    private _route: ActivatedRoute) {\r\n      \r\n     }\r\n  ngOnInit() {\r\n    this._route.paramMap.subscribe(\r\n      params => {\r\n        this.resetUserData.userId = params.get('id')\r\n      }\r\n    )\r\n  }\r\n\r\n  resetUser(){\r\n    this.resetUserData.resetCode = this.resetUserData.resetCode1 \r\n                                  +this.resetUserData.resetCode2\r\n                                  +this.resetUserData.resetCode3 \r\n                                  +this.resetUserData.resetCode4 \r\n                                  +this.resetUserData.resetCode5 \r\n                                  +this.resetUserData.resetCode6 \r\n\r\n    console.log(this.resetUserData)\r\n\r\n     this._auth.resetUser(this.resetUserData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._router.navigate(['/login'])          \r\n        },\r\n        error => console.log(error) \r\n        )       \r\n  }\r\n  backToEmailSender(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http'\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { throwError } from 'rxjs'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n\r\n  private _registerUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/register-user/register\"\r\n  private _loginUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/login/access\"\r\n  private _recoverPasswordUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/recover-password/recover\"\r\n  private _resetPasswordUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/reset-password/reset\"\r\n  private _sendEmailUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/send-email\"\r\n  \r\n  constructor(private http: HttpClient, private _router: Router) {}\r\n\r\n  registerUser(user){\r\n    return this.http.post<any>(this._registerUrl, user)\r\n  }\r\n\r\n  resetUser(user){\r\n    return this.http.post<any>(this._resetPasswordUrl, user)\r\n  }\r\n  \r\n  loginUser(user){\r\n    return this.http.post<any>(this._loginUrl, user)\r\n        .pipe(catchError(this.errorHandler))\r\n  }  \r\n\r\n  errorHandler(error: HttpErrorResponse){\r\n    return throwError(error)\r\n  }\r\n\r\n  loggedIn(){\r\n    return !!sessionStorage.getItem('token')\r\n  }\r\n\r\n  logoutUser(){\r\n    sessionStorage.removeItem('token')\r\n    this._router.navigate(['/login'])\r\n  }\r\n \r\n  getToken(){\r\n    return sessionStorage.getItem('token')\r\n  }\r\n\r\n  recoverPassword(userData){\r\n    return this.http.post<any>(this._recoverPasswordUrl, userData)\r\n  }\r\n\r\n  sendEmail(user){\r\n    return this.http.post<any>(this._sendEmailUrl, user)\r\n\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from \"./system-access/system-access-services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(req, next){\r\n    let authService = this.injector.get(AuthService)\r\n    let tokenizedReq = req.clone({\r\n      setHeaders:{\r\n        Authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core'\r\n\r\n@Directive({\r\n    selector: '[appConfirmEqualValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: ConfirmEqualValidator,\r\n        multi: true\r\n    }]\r\n})\r\n\r\nexport class ConfirmEqualValidator implements Validator{\r\n    @Input() appConfirmEqualValidator: string\r\n    validate(control: AbstractControl): {[key:string]: any} | null{\r\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidator)\r\n        if(controlToCompare && controlToCompare.value !== control.value){\r\n            return { 'notEqual': true };\r\n        }\r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}