{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/contract/contract-add/contract-add.component.html","./src/app/contract/contract-main/contract-main.component.html","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.html","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.html","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.html","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.html","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.html","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.html","./src/app/entities/creditor/creditor-add/creditor-add.component.html","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.html","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.html","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.html","./src/app/entities/creditor/creditor-detail/creditor-detail.component.html","./src/app/entities/creditor/creditor-main/creditor-main.component.html","./src/app/entities/detran/detran-add/detran-add.component.html","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.html","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.html","./src/app/entities/detran/detran-contacts/detran-contacts.component.html","./src/app/entities/detran/detran-detail/detran-detail.component.html","./src/app/entities/detran/detran-main/detran-main.component.html","./src/app/entities/registrar/registrar.component.html","./src/app/help/help.component.html","./src/app/home/home.component.html","./src/app/registers/groups/group-add/group-add.component.html","./src/app/registers/groups/group-main/group-main.component.html","./src/app/registers/user/user-add/user-add.component.html","./src/app/registers/user/user-main/user-main.component.html","./src/app/reports/audit-history/audit-history.component.html","./src/app/reports/financial-transaction/financial-transaction.component.html","./src/app/reports/transaction-billing/transaction-billing.component.html","./src/app/system-access/login/login.component.html","./src/app/system-access/password-recover-failed/password-recover-failed.component.html","./src/app/system-access/password-recover-success/password-recover-success.component.html","./src/app/system-access/password-recover/password-recover.component.html","./src/app/system-access/password-reset/password-reset.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/contract/contract-add/contract-add.component.css","./src/app/contract/contract-add/contract-add.component.ts","./src/app/contract/contract-main/contract-main.component.css","./src/app/contract/contract-main/contract-main.component.ts","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.css","./src/app/entities/creditor-group/creditor-group-add/creditor-group-add.component.ts","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.css","./src/app/entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component.ts","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.css","./src/app/entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component.ts","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.css","./src/app/entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component.ts","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.css","./src/app/entities/creditor-group/creditor-group-detail/creditor-group-detail.component.ts","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.css","./src/app/entities/creditor-group/creditor-group-main/creditor-group-main.component.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-add-contact.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-add.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-contact-detail.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-contacts.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-detail.service.ts","./src/app/entities/creditor-group/creditor-group-services/creditor-group-main.service.ts","./src/app/entities/creditor/creditor-add/creditor-add.component.css","./src/app/entities/creditor/creditor-add/creditor-add.component.ts","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.css","./src/app/entities/creditor/creditor-contact-add/creditor-contact-add.component.ts","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.css","./src/app/entities/creditor/creditor-contact-detail/creditor-contact-detail.component.ts","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.css","./src/app/entities/creditor/creditor-contacts/creditor-contacts.component.ts","./src/app/entities/creditor/creditor-detail/creditor-detail.component.css","./src/app/entities/creditor/creditor-detail/creditor-detail.component.ts","./src/app/entities/creditor/creditor-main/creditor-main.component.css","./src/app/entities/creditor/creditor-main/creditor-main.component.ts","./src/app/entities/creditor/creditor-services/creditor-add-contact.service.ts","./src/app/entities/creditor/creditor-services/creditor-add.service.ts","./src/app/entities/creditor/creditor-services/creditor-contact-detail.service.ts","./src/app/entities/creditor/creditor-services/creditor-contacts.service.ts","./src/app/entities/creditor/creditor-services/creditor-detail.service.ts","./src/app/entities/creditor/creditor-services/creditor-main.service.ts","./src/app/entities/detran/detran-add/detran-add.component.css","./src/app/entities/detran/detran-add/detran-add.component.ts","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.css","./src/app/entities/detran/detran-contact-add/detran-contact-add.component.ts","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.css","./src/app/entities/detran/detran-contact-detail/detran-contact-detail.component.ts","./src/app/entities/detran/detran-contacts/detran-contacts.component.css","./src/app/entities/detran/detran-contacts/detran-contacts.component.ts","./src/app/entities/detran/detran-detail/detran-detail.component.css","./src/app/entities/detran/detran-detail/detran-detail.component.ts","./src/app/entities/detran/detran-main/detran-main.component.css","./src/app/entities/detran/detran-main/detran-main.component.ts","./src/app/entities/detran/detran-services/detran-add-contact.service.ts","./src/app/entities/detran/detran-services/detran-add.service.ts","./src/app/entities/detran/detran-services/detran-contact-detail.service.ts","./src/app/entities/detran/detran-services/detran-contacts.service.ts","./src/app/entities/detran/detran-services/detran-detail.service.ts","./src/app/entities/detran/detran-services/detran-main.service.ts","./src/app/entities/entities-services/entities.service.ts","./src/app/entities/registrar/registrar.component.css","./src/app/entities/registrar/registrar.component.ts","./src/app/filter-name.pipe.ts","./src/app/help/help.component.css","./src/app/help/help.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/registers/groups/group-add/group-add.component.css","./src/app/registers/groups/group-add/group-add.component.ts","./src/app/registers/groups/group-main/group-main.component.css","./src/app/registers/groups/group-main/group-main.component.ts","./src/app/registers/groups/group-services/group-add.service.ts","./src/app/registers/groups/group-services/group-main.service.ts","./src/app/registers/user/user-add/user-add.component.css","./src/app/registers/user/user-add/user-add.component.ts","./src/app/registers/user/user-main/user-main.component.css","./src/app/registers/user/user-main/user-main.component.ts","./src/app/registers/user/user-services/user-add.service.ts","./src/app/registers/user/user-services/user-main.service.ts","./src/app/reports/audit-history/audit-history.component.css","./src/app/reports/audit-history/audit-history.component.ts","./src/app/reports/financial-transaction/financial-transaction.component.css","./src/app/reports/financial-transaction/financial-transaction.component.ts","./src/app/reports/transaction-billing/transaction-billing.component.css","./src/app/reports/transaction-billing/transaction-billing.component.ts","./src/app/system-access/login/login.component.css","./src/app/system-access/login/login.component.ts","./src/app/system-access/password-recover-failed/password-recover-failed.component.css","./src/app/system-access/password-recover-failed/password-recover-failed.component.ts","./src/app/system-access/password-recover-success/password-recover-success.component.css","./src/app/system-access/password-recover-success/password-recover-success.component.ts","./src/app/system-access/password-recover/password-recover.component.css","./src/app/system-access/password-recover/password-recover.component.ts","./src/app/system-access/password-reset/password-reset.component.css","./src/app/system-access/password-reset/password-reset.component.ts","./src/app/system-access/system-access-services/auth.service.ts","./src/app/token-interceptor.service.ts","./src/custom/confirm-equal-validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-white shadow fixed-top\\\" >\\r\\n    \\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/principal\\\" routerLinkActive=\\\"active\\\"><img src=\\\"../assets/images/logo.png\\\" class=\\\"img-reponsive\\\"></a>\\r\\n    \\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  \\r\\n  <div class=\\\"collapse navbar-collapse\\\"  id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"nav navbar-nav mr-auto\\\" >\\r\\n      <div class= \\\"row justify-content-lg align-items-center\\\" *ngIf=\\\"_authService.loggedIn()\\\">       \\r\\n        <li class=\\\"dropdown px-3\\\"  >\\r\\n          <a class=\\\"nav-link\\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Registro de Contratos\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\"  >\\r\\n              <li >\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/contratos\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/registrar-contrato\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n              </li>\\r\\n              <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n        </li>     \\r\\n        <li class=\\\"dropdown px-3\\\"  >\\r\\n          <a class=\\\"nav-link\\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Detran\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\"  >\\r\\n              <li >\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/detran\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/detran-adicionar\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n              </li>\\r\\n              <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n        </li>     \\r\\n        <li class=\\\"dropdown px-3\\\" >\\r\\n          <a class=\\\"nav-link \\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Credora\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\"  >\\r\\n              <li >\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/credora\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/credor-adicionar\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n              </li>\\r\\n              <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n        </li>\\r\\n        <li class=\\\"dropdown px-3\\\" >\\r\\n          <a class=\\\"nav-link \\\" class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Gestora\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\"  >\\r\\n              <li >\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/gestora\\\" routerLinkActive=\\\"active\\\">Consultar</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/gestor-adicionar\\\" routerLinkActive=\\\"active\\\">Adicionar</a>\\r\\n              </li>\\r\\n              <!-- <li *ngFor=\\\"let entityType of entityTypes\\\"> \\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/{{entityType.name.toLocaleLowerCase()}}\\\" routerLinkActive=\\\"active\\\" >{{entityType.name}}</a>\\r\\n              </li> -->\\r\\n            </ul>\\r\\n        </li>   \\r\\n        <li class=\\\"dropdown px-3\\\">\\r\\n          <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Administração\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <li>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/user-main\\\" routerLinkActive=\\\"active\\\" >Usuários</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/group-main\\\" routerLinkActive=\\\"active\\\" >Grupos</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n        </li>\\r\\n        <li class=\\\"dropdown px-3\\\">\\r\\n          <a class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Relatórios\\r\\n          <span class=\\\"caret\\\"></span></a>\\r\\n            <ul class=\\\"dropdown-menu\\\">\\r\\n              <li>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/historico-transacao\\\" routerLinkActive=\\\"active\\\" >Histórico de auditoria</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/bilhetagem-transacoes\\\" routerLinkActive=\\\"active\\\" >Bilhetagem de transações</a>\\r\\n                <a class=\\\"nav-link px-2 text-dark\\\" routerLink=\\\"/transacoes-financeiras\\\" routerLinkActive=\\\"active\\\" >Transações financeira</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n        </li>   \\r\\n      </div>   \\r\\n    </ul>   \\r\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n        <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" >Perfil</a>\\r\\n        <a class=\\\"nav-link\\\" style=\\\"cursor:pointer\\\" *ngIf=\\\"_authService.loggedIn()\\\" (click)=\\\"_authService.logoutUser()\\\">Sair</a>\\r\\n    </ul> \\r\\n  </div>\\r\\n</nav>  \\r\\n\\r\\n<nav class=\\\"navbar-sm fixed-bottom navbar-dark bg-rainti shadow-lg\\\" >\\r\\n    <div class=\\\"col\\\" >\\r\\n      <h6  class=\\\"text-center text-light font-weight-lighter\\\" >© 2019 - RainTI Tecnologia e Sistemas de Informação LTDA <br> Rua Paulino Corado, 20, Jardim Santa Teresa - Jundiaí/SP - Todos os direitos reservados.</h6>\\r\\n    </div> \\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"padding: 80px 0px 80px 0px\\\">\\r\\n  \\r\\n  <router-outlet></router-outlet>  \\r\\n           \\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Registro de contrato</h4>\\r\\n                    <div class=\\\"form-group\\\">         \\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-4\\\" >                                                                                  \\r\\n                                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"customRadioInlineOCRN1\\\" name=\\\"customRadioInlineOCRN\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActiveOCRN('registro')\\\" checked>\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineOCRN1\\\">Registro</label>\\r\\n                                </div>\\r\\n                                <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                    <input type=\\\"radio\\\" id=\\\"customRadioInlineOCRN2\\\" name=\\\"customRadioInlineOCRN\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActiveOCRN('aditivo')\\\">\\r\\n                                    <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineOCRN2\\\">Aditivo</label>\\r\\n                                </div>            \\r\\n                            </div>\\r\\n                            <div class=\\\"col\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col\\\"><!--  *ngIf=\\\"_aditivo\\\" > -->\\r\\n                                            <label for=\\\"uname1\\\">Número do registro original do Contrato</label>\\r\\n                                            <div class=\\\"input-group mb-3\\\">\\r\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.originalCRN\\\" name=\\\"aditivo\\\" class=\\\"form-control\\\" \\r\\n                                                pattern=\\\"^\\\\d{6,}$\\\" [disabled] = \\\"_registro\\\"\\r\\n                                                [class.is-invalid]=\\\"originalCRN.invalid && originalCRN.touched\\\" #originalCRN=\\\"ngModel\\\" required >\\r\\n                                                <div class=\\\"input-group-append\\\">\\r\\n                                                    <span class=\\\"input-group-btn\\\">                                                  \\r\\n                                                        <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\" [disabled] = \\\"_registro\\\" >Buscar</button>\\r\\n                                                    </span>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"md-errors-spacer text-danger\\\" [hidden]=\\\"originalCRN.valid || originalCRN.untouched\\\">\\r\\n                                                    <small  class=\\\"text-danger\\\"*ngIf=\\\"originalCRN.errors && originalCRN.errors.required\\\">\\r\\n                                                        Número do registro original do Contrato inválido\\r\\n                                                    </small>                                                    \\r\\n                                                    <small  class=\\\"text-danger\\\" *ngIf=\\\"originalCRN.errors && originalCRN.errors.pattern\\\">\\r\\n                                                        Registro do Contrato deve ter minimo 6 posições numericas\\r\\n                                                    </small> \\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                     </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                                                            \\r\\n                    </div>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                        <nav>\\r\\n                            <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                                <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-contrato-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contrato\\\" [ngClass]=\\\"{'active':activeTab==='nav-contrato'}\\\" (click)=\\\"nextTab('nav-contrato')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contrato\\\" aria-selected=\\\"false\\\">Contrato </a>\\r\\n                                <a class=\\\"nav-item nav-link\\\" id=\\\"nav-credor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-credor\\\" [ngClass]=\\\"{'active':activeTab==='nav-credor'}\\\" (click)=\\\"nextTab('nav-credor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-credor\\\" aria-selected=\\\"true\\\">Credor</a>\\r\\n                                <a class=\\\"nav-item nav-link\\\" id=\\\"nav-comprador-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-comprador\\\" [ngClass]=\\\"{'active':activeTab==='nav-comprador'}\\\" (click)=\\\"nextTab('nav-comprador')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-comprador\\\" aria-selected=\\\"false\\\">Comprador</a>\\r\\n                                <a class=\\\"nav-item nav-link\\\" id=\\\"nav-vendedor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-vendedor\\\" [ngClass]=\\\"{'active':activeTab==='nav-vendedor'}\\\" (click)=\\\"nextTab('nav-vendedor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-vendedor\\\" aria-selected=\\\"false\\\">Vendedor</a>\\r\\n                                <a class=\\\"nav-item nav-link\\\" id=\\\"nav-garantidor-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-garantidor\\\" [ngClass]=\\\"{'active':activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-garantidor\\\" aria-selected=\\\"false\\\">Garantidor</a>\\r\\n                                <a class=\\\"nav-item nav-link\\\" id=\\\"nav-veiculo-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-veiculo\\\" [ngClass]=\\\"{'active':activeTab==='nav-veiculo'}\\\" (click)=\\\"nextTab('nav-veiculo')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-veiculo\\\" aria-selected=\\\"false\\\">Veículo</a>\\r\\n                               \\r\\n                            </div>\\r\\n                        </nav>\\r\\n                        <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-contrato'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contrato\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contrato-tab\\\"><br>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" \\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    Contrato obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    Contrato deve ter minimo 6 posições alfanumericas\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data do Contrato</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.contractDate\\\" name=\\\"contractDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractDate.invalid && contractDate.touched\\\" #contractDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractDate.valid || contractDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractDate.errors && contractDate.errors.required\\\">\\r\\n                                                    Data do Contrato inválida \\r\\n                                                </small>\\r\\n                                            </div>  \\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col-sm-5\\\">\\r\\n                                            <div class=\\\"dropup\\\">\\r\\n                                                <a class=\\\"nav-link \\\"class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> Tipo de Gravame\\r\\n                                                   <span class=\\\"caret\\\"></span>\\r\\n                                                </a>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" style=\\\"padding-top: 10px; height: 150px; overflow: auto; white-space: nowrap;\\\">\\r\\n                                                    <li *ngFor=\\\"let lien of _liensType\\\">\\r\\n                                                        <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" autocomplete=\\\"off\\\"> {{ alien.description }}\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Tipo de Gravame</small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número da restrição</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.restrictionNumber\\\" name=\\\"restrictionNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{6,}$\\\" \\r\\n                                            [class.is-invalid]=\\\"restrictionNumber.invalid && restrictionNumber.touched\\\" #restrictionNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"restrictionNumber.valid || restrictionNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.required\\\">\\r\\n                                                    Número da restrição inválida\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.pattern\\\">\\r\\n                                                    Restrição deve ter minimo 6 posições numericas\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Valor financiamento</label>\\r\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.totalDebitAmount\\\" name=\\\"totalDebitAmount\\\"  class=\\\"form-control rounded-0\\\"  \\r\\n                                                pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                                [class.is-invalid]=\\\"totalDebitAmount.invalid && totalDebitAmount.touched\\\" #totalDebitAmount=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"totalDebitAmount.valid || totalDebitAmount.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"totalDebitAmount.errors && totalDebitAmount.errors.required\\\">\\r\\n                                                    Valor total da divida obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"restrictionNumber.errors && restrictionNumber.errors.pattern\\\">\\r\\n                                                    Valor total da divida obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div> \\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col-sm-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">Parcelas</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.numberOfInstallments\\\" name=\\\"numberOfInstallments\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                                pattern=\\\"([1-9]|[1-8][0-9]|9[0-9])\\\" \\r\\n                                                [class.is-invalid]=\\\"numberOfInstallments.invalid && numberOfInstallments.touched\\\" #numberOfInstallments=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"numberOfInstallments.valid || numberOfInstallments.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"numberOfInstallments.errors && numberOfInstallments.errors.required\\\">\\r\\n                                                    Quantidade de parcelas obrigatória\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"numberOfInstallments.errors && numberOfInstallments.errors.pattern\\\">\\r\\n                                                    Parcelas deve ter ate 2 posições numericas\\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Valor da Parcelas</label>\\r\\n                                            <input type=\\\"text\\\" [disabled] = true [(ngModel)]=\\\"_installmentValue\\\"\\r\\n                                                name=\\\"installmentValue\\\" class=\\\"form-control rounded-0 \\\">\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Valor do Registro de Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractRegistrationAmount\\\" name=\\\"contractRegistrationAmount\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,2})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"contractRegistrationAmount.invalid && contractRegistrationAmount.touched\\\" #contractRegistrationAmount=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractRegistrationAmount.valid || contractRegistrationAmount.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractRegistrationAmount.errors && contractRegistrationAmount.errors.required\\\">\\r\\n                                                    Valor do Registro de Contrato obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contractRegistrationAmount.errors && contractRegistrationAmount.errors.pattern\\\">\\r\\n                                                    Valor do Registro de Contrato obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Valor do IOF</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.iofAmount\\\" name=\\\"iofAmount\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"iofAmount.invalid && iofAmount.touched\\\" #iofAmount=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"iofAmount.valid || iofAmount.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"iofAmount.errors && iofAmount.errors.required\\\">\\r\\n                                                    Valor do IOF obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"iofAmount.errors && iofAmount.errors.pattern\\\">\\r\\n                                                    IOF deve ter um valor ate 3 decimais\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>               \\r\\n                                </div>\\r\\n\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Taxa Juros ao mês</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.interestRatePerMonth\\\" name=\\\"interestRatePerMonth\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"interestRatePerMonth.invalid && interestRatePerMonth.touched\\\" #interestRatePerMonth=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"interestRatePerMonth.valid || interestRatePerMonth.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"interestRatePerMonth.errors && interestRatePerMonth.errors.required\\\">\\r\\n                                                    Taxa de Juros ao mês obrigatória\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"interestRatePerMonth.errors && interestRatePerMonth.errors.pattern\\\">\\r\\n                                                   Juros deve ter um valor ate 3 decimais\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Taxa Juros de Multa</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.interestRate\\\" name=\\\"interestRate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"interestRate.invalid && interestRate.touched\\\" #interestRate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"interestRate.valid || interestRate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"interestRate.errors && interestRate.errors.required\\\">\\r\\n                                                    Taxa de Juros de multa obrigatória\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"interestRate.errors && interestRate.errors.pattern\\\">\\r\\n                                                    Juros de multa deve ter um valor ate 3 decimais\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Taxa de mora ao dia</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.dailyInterestRate\\\" name=\\\"dailyInterestRate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"dailyInterestRate.invalid && dailyInterestRate.touched\\\" #dailyInterestRate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dailyInterestRate.valid || dailyInterestRate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dailyInterestRate.errors && dailyInterestRate.errors.required\\\">\\r\\n                                                    Taxa de mora ao dia obrigatória\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"dailyInterestRate.errors && dailyInterestRate.errors.pattern\\\">\\r\\n                                                    Mora deve ter um valor ate 3 decimais\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Indice</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractIndex\\\" name=\\\"contractIndex\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^[0-9]+(\\\\.[0-9]{1,3})?$\\\"\\r\\n                                            [class.is-invalid]=\\\"contractIndex.invalid && contractIndex.touched\\\" #contractIndex=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractIndex.valid || contractIndex.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractIndex.errors && contractIndex.errors.required\\\">\\r\\n                                                    Indice obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contractIndex.errors && contractIndex.errors.pattern\\\">\\r\\n                                                    Indice deve ter um valor ate 3 decimais\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>               \\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data primer pagamento</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.paymentStartDate\\\" name=\\\"paymentStartDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"paymentStartDate.invalid && paymentStartDate.touched\\\" #paymentStartDate=\\\"ngModel\\\" required >\\r\\n                                                <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"paymentStartDate.valid || paymentStartDate.untouched\\\">\\r\\n                                                    <small  class=\\\"text-danger\\\"*ngIf=\\\"paymentStartDate.errors && paymentStartDate.errors.required\\\">\\r\\n                                                        Data primer pagamento inválida \\r\\n                                                    </small>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data ultimo pagamento</label>\\r\\n                                            <input type=\\\"text\\\" [disabled] = true [(ngModel)]=\\\"_paymentEndDate\\\"\\r\\n                                                name=\\\"paymentEndDateValue\\\" class=\\\"form-control rounded-0 \\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data da liberação</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.creditReleaseDate\\\" name=\\\"creditReleaseDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"creditReleaseDate.invalid && creditReleaseDate.touched\\\" #creditReleaseDate=\\\"ngModel\\\" required >\\r\\n                                                <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditReleaseDate.valid || creditReleaseDate.untouched\\\">\\r\\n                                                    <small  class=\\\"text-danger\\\"*ngIf=\\\"creditReleaseDate.errors && creditReleaseDate.errors.required\\\">\\r\\n                                                        Data da liberação inválida \\r\\n                                                    </small>\\r\\n                                                </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-5\\\">\\r\\n                                            <div class=\\\"dropup\\\">\\r\\n                                                <a class=\\\"nav-link \\\"class=\\\"dropdown-toggle\\\" style=\\\"cursor:pointer\\\" data-toggle=\\\"dropdown\\\" routerLinkActive=\\\"active\\\"> UF da liberação\\r\\n                                                   <span class=\\\"caret\\\"></span>\\r\\n                                                </a>\\r\\n                                                <ul class=\\\"dropdown-menu\\\" style=\\\"padding-top: 10px; height: 150px; overflow: auto; white-space: nowrap;\\\">\\r\\n                                                    <li *ngFor=\\\"let state of _creditReleaseState\\\">\\r\\n                                                        <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" autocomplete=\\\"off\\\"> {{ state.description }}\\r\\n                                                    </li>\\r\\n                                                </ul>\\r\\n                                            </div>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Cidade da liberação</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.creditReleaseCity\\\" name=\\\"creditReleaseCity\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{4,}$\\\" \\r\\n                                            [class.is-invalid]=\\\"creditReleaseCity.invalid && creditReleaseCity.touched\\\" #creditReleaseCity=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"creditReleaseCity.valid || creditReleaseCity.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"creditReleaseCity.errors && creditReleaseCity.errors.required\\\">\\r\\n                                                    Cidade inválida\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"creditReleaseCity.errors && creditReleaseCity.errors.pattern\\\">\\r\\n                                                    Cidade inválida minimo 4 posições alfanumericas\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Núm. grupo do consórcio</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.consortiumGroupNumber\\\" name=\\\"consortiumGroupNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{4,}$\\\" \\r\\n                                            [class.is-invalid]=\\\"consortiumGroupNumber.invalid && consortiumGroupNumber.touched\\\" #consortiumGroupNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"consortiumGroupNumber.valid || consortiumGroupNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"consortiumGroupNumber.errors && consortiumGroupNumber.errors.required\\\">\\r\\n                                                    Número do grupo inválido\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"consortiumGroupNumber.errors && consortiumGroupNumber.errors.pattern\\\">\\r\\n                                                    Número do grupo minimo 4 posições alfanumericas\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                            <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Núm. cota do consórcio</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.consortiumQuotaNumber\\\" name=\\\"consortiumQuotaNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{4,}$\\\" \\r\\n                                            [class.is-invalid]=\\\"consortiumQuotaNumber.invalid && consortiumQuotaNumber.touched\\\" #consortiumQuotaNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"consortiumQuotaNumber.valid || consortiumQuotaNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"consortiumQuotaNumber.errors && consortiumQuotaNumber.errors.required\\\">\\r\\n                                                    Número da cota do consórcio inválida\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"consortiumQuotaNumber.errors && consortiumQuotaNumber.errors.pattern\\\">\\r\\n                                                    Número da cota minimo 4 posições alfanumericas\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button class=\\\"btn btn-info btn-block\\\" routerLink=\\\"/contratos\\\">Cancelar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-contrato'}\\\" (click)=\\\"nextTab('nav-credor')\\\" class=\\\"btn btn-rainti btn-block\\\"> Próximo </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-credor'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-credor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-credor-tab\\\"> <br>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xl\\\">\\r\\n                                            <label for=\\\"uname1\\\">Detran</label>\\r\\n                                            <select class=\\\"custom-select\\\" #detran=\\\"ngModel\\\" [class.is-invalid]=\\\"detranTopicHasError && detran.touched\\\"\\r\\n                                            name=\\\"detran\\\" [(ngModel)]=\\\"contractData.detran\\\" (change)=\\\"validateTopic(detran.value)\\\" (blur)=\\\"validateTopic(detran.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um Detran</option>\\r\\n                                                <option *ngFor=\\\"let detran of _detrans\\\">{{ contractData.creditor }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!detranTopicHasError || detran.untouched\\\">Escolha uma credora</small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-xl\\\">\\r\\n                                            <label for=\\\"uname1\\\">Credora</label>\\r\\n                                            <select class=\\\"custom-select\\\" #creditor=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && creditor.touched\\\"\\r\\n                                            name=\\\"creditor\\\" [(ngModel)]=\\\"contractData.creditor\\\" (change)=\\\"validateTopic(creditor.value)\\\" (blur)=\\\"validateTopic(creditor.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha uma credora</option>\\r\\n                                                <option *ngFor=\\\"let creditor of _creditor\\\">{{ contractData.creditor }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || creditor.untouched\\\">Escolha uma credora</small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-credor'}\\\" (click)=\\\"nextTab('nav-contrato')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-credor'}\\\" (click)=\\\"nextTab('nav-comprador')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-comprador'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-comprador\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-comprador-tab\\\"><br>\\r\\n                                <div class=\\\"form-group col-xl\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <label for=\\\"uname1\\\">Nome completo do comprador</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyername\\\" name=\\\"buyername\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        [class.is-invalid]=\\\"buyername.invalid && buyername.touched\\\" #buyername=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyername.valid || buyername.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"buyername.errors && buyername.errors.required\\\">\\r\\n                                                Nome completo do comprador obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>        \\r\\n                                <div class=\\\"form-group col-xl\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                        <input #buyerEmail=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                        [(ngModel)]=\\\"contractData.buyerEmail\\\" name=\\\"buyerEmail\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        [class.is-invalid]=\\\"buyerEmail.invalid && buyerEmail.touched\\\" required>\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerEmail.valid || buyerEmail.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerEmail.errors && buyerEmail.errors.required\\\">\\r\\n                                                e-mail obrigatório\\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"buyerEmail.errors && buyerEmail.errors.pattern\\\">\\r\\n                                                e-mail inválido\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">         \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-4\\\" >                                                                                  \\r\\n                                            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                                <input type=\\\"radio\\\" id=\\\"customRadioInline1\\\" name=\\\"customRadioInline1\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActiveConsumer('cpf')\\\" checked>\\r\\n                                                <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline1\\\">CPF</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                                <input type=\\\"radio\\\" id=\\\"customRadioInline2\\\" name=\\\"customRadioInline1\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActiveConsumer('cnpj')\\\">\\r\\n                                                <label class=\\\"custom-control-label\\\" for=\\\"customRadioInline2\\\">CNPJ</label>\\r\\n                                            </div>                                        \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <div class=\\\"col\\\"*ngIf=\\\"cpfcnpjActiveConsumer=='cpf'\\\" >\\r\\n                                                <input type=\\\"text\\\" name=\\\"cpf\\\" [cpf]=\\\"cpf\\\" placeholder=\\\"Insira o CPF\\\" \\r\\n                                                [(ngModel)]=\\\"cpf\\\" [class.is-invalid]=\\\"cpfInput.invalid && cpfInput.touched\\\" #cpfInput=\\\"ngModel\\\" required>\\r\\n                                                <div class=\\\"md-errors-spacer text-danger\\\" [hidden]=\\\"cpfInput.valid || cpfInput.untouched\\\" *ngIf=\\\"cpfInput?.errors?.required\\\">CPF obrigatório</div>\\r\\n                                                <div class=\\\"text-danger\\\" *ngIf=\\\"cpfInput?.errors?.cpf\\\">CPF inválido!</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\"*ngIf=\\\"cpfcnpjActiveConsumer=='cnpj'\\\" >\\r\\n                                                <input  type=\\\"text\\\" name=\\\"cnpj\\\" [cnpj]=\\\"cnpj\\\" placeholder=\\\"Insira o CNPJ\\\"\\r\\n                                                [(ngModel)]=\\\"cnpj\\\" [class.is-invalid]=\\\"cnpjInput.invalid && cnpjInput.touched\\\" #cnpjInput=\\\"ngModel\\\" required >\\r\\n                                                <div class=\\\"md-errors-spacer text-danger\\\" [hidden]=\\\"cnpjInput.valid || cnpjInput.untouched\\\" *ngIf=\\\"cnpjInput?.errors?.required\\\">CNPJ obrigatório</div>\\r\\n                                                <div class=\\\"text-danger\\\" *ngIf=\\\"cnpjInput?.errors?.cnpj\\\">CNPJ Inválido</div>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>                                                            \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"contractData.buyerDddModel\\\" name=\\\"buyerDddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerDddModel.invalid && buyerDddModel.touched\\\" #buyerDddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDddModel.valid || buyerDddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDddModel.errors && buyerDddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(buyerDddModel.errors && buyerDddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"contractData.buyerPhone\\\" name=\\\"buyerPhone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerPhone.invalid && buyerPhone.touched\\\" #buyerPhone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerPhone.valid || buyerPhone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerPhone.errors && buyerPhone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerPhone.errors && buyerPhone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"contractData.buyerDddMobile\\\" name=\\\"buyerDddMobile\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerDddMobile.invalid && buyerDddMobile.touched\\\" #buyerDddMobile=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDddMobile.valid || buyerDddMobile.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDddMobile.errors && buyerDddMobile.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(buyerDddMobile.errors && buyerDddMobile.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <label for=\\\"uname1\\\">Celular</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"contractData.buyerMobilePhone\\\" name=\\\"buyerMobilePhone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerMobilePhone.invalid && buyerMobilePhone.touched\\\" #buyerMobilePhone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerMobilePhone.valid || buyerMobilePhone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerMobilePhone.errors && buyerMobilePhone.errors.required\\\">\\r\\n                                                    Celular obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerMobilePhone.errors && buyerMobilePhone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CEP</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerZipCode\\\" name=\\\"buyerZipCode\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerZipCode.invalid && buyerZipCode.touched\\\" #buyerZipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerZipCode.valid || buyerZipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerZipCode.errors && buyerZipCode.errors.required\\\">\\r\\n                                                    CEP obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerNeighborhood\\\" name=\\\"buyerNeighborhood\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerNeighborhood.invalid && buyerNeighborhood.touched\\\" #buyerNeighborhood=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerNeighborhood.valid || buyerNeighborhood.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerNeighborhood.errors && buyerNeighborhood.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerAddress\\\" name=\\\"buyerAddress\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerAddress.invalid && buyerAddress.touched\\\" #buyerAddress=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerAddress.valid || buyerAddress.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerAddress.errors && buyerAddress.errors.required\\\">\\r\\n                                                    Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerHouseNumber\\\" name=\\\"buyerHouseNumber\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerHouseNumber.invalid && buyerHouseNumber.touched\\\" #buyerHouseNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerHouseNumber.valid || buyerHouseNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerHouseNumber.errors && buyerHouseNumber.errors.required\\\">\\r\\n                                                    Número da residência obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerState\\\" name=\\\"buyerState\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerState.invalid && buyerState.touched\\\" #buyerState=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerState.valid || buyerState.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerState.errors && buyerState.errors.required\\\">\\r\\n                                                    Estado obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Município</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerDistrict\\\" name=\\\"buyerDistrict\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerDistrict.invalid && buyerDistrict.touched\\\" #buyerDistrict=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerDistrict.valid || buyerDistrict.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerDistrict.errors && buyerDistrict.errors.required\\\">\\r\\n                                                    Município obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Complemento</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.buyerComplement\\\" name=\\\"buyerComplement\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"buyerComplement.invalid && buyerComplement.touched\\\" #buyerComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"buyerComplement.valid || buyerComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"buyerComplement.errors && buyerComplement.errors.required\\\">\\r\\n                                                    Complemento obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>            \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-comprador'}\\\" (click)=\\\"nextTab('nav-credor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-comprador'}\\\" (click)=\\\"nextTab('nav-vendedor')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-vendedor'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-vendedor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-vendedor-tab\\\"> <br>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractNeighborhood\\\" name=\\\"contractNeighborhood\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractNeighborhood.invalid && contractNeighborhood.touched\\\" #contractNeighborhood=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractNeighborhood.valid || contractNeighborhood.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractNeighborhood.errors && contractNeighborhood.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Município</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractDistrict\\\" name=\\\"contractDistrict\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractDistrict.invalid && contractDistrict.touched\\\" #contractDistrict=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractDistrict.valid || contractDistrict.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractDistrict.errors && contractDistrict.errors.required\\\">\\r\\n                                                    Município obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractAddress\\\" name=\\\"contractAddress\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractAddress.invalid && contractAddress.touched\\\" #contractAddress=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractAddress.valid || contractAddress.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractAddress.errors && contractAddress.errors.required\\\">\\r\\n                                                    Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractHouseNumber\\\" name=\\\"contractHouseNumber\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractHouseNumber.invalid && contractHouseNumber.touched\\\" #contractHouseNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractHouseNumber.valid || contractHouseNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractHouseNumber.errors && contractHouseNumber.errors.required\\\">\\r\\n                                                    Número da residência obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.contractState\\\" name=\\\"contractState\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"contractState.invalid && contractState.touched\\\" #contractState=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contractState.valid || contractState.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contractState.errors && contractState.errors.required\\\">\\r\\n                                                    Estado obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-vendedor'}\\\" (click)=\\\"nextTab('nav-comprador')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-vendedor'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" class=\\\"btn btn-rainti btn-block\\\"> Próximo </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-garantidor'}\\\" class=\\\"tab-pane fade \\\" id=\\\"nav-garantidor\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-garantidor-tab\\\"><br>\\r\\n                                <div class=\\\"form-group col-xl\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <label for=\\\"uname1\\\">Nome do Garantidor</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.responsible\\\" name=\\\"responsible\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                        [class.is-invalid]=\\\"responsible.invalid && responsible.touched\\\" #responsible=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"responsible.valid || responsible.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"responsible.errors && responsible.errors.required\\\">\\r\\n                                                Nome do garantidor obrigatório\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                                <div class=\\\"form-group\\\">         \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-md-4\\\" >                                                                                  \\r\\n                                            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                                <input type=\\\"radio\\\" id=\\\"customRadioInlineGarantidor\\\" name=\\\"customRadioInline\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActive('cpf')\\\" checked>\\r\\n                                                <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineGarantidor\\\">CPF</label>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n                                                <input type=\\\"radio\\\" id=\\\"customRadioInlineGarantidor2\\\" name=\\\"customRadioInline\\\" class=\\\"custom-control-input\\\" (click)=\\\"markAsActive('cnpj')\\\">\\r\\n                                                <label class=\\\"custom-control-label\\\" for=\\\"customRadioInlineGarantidor2\\\">CNPJ</label>\\r\\n                                            </div>                                        \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <div class=\\\"col\\\"*ngIf=\\\"cpfcnpjActive=='cpf'\\\" >\\r\\n                                                <input type=\\\"text\\\" name=\\\"cpf\\\" [cpf]=\\\"cpf\\\" placeholder=\\\"Insira o CPF\\\" \\r\\n                                                [(ngModel)]=\\\"cpf\\\" [class.is-invalid]=\\\"cpfInput.invalid && cpfInput.touched\\\" #cpfInput=\\\"ngModel\\\" required>\\r\\n                                                <div class=\\\"md-errors-spacer text-danger\\\" [hidden]=\\\"cpfInput.valid || cpfInput.untouched\\\" *ngIf=\\\"cpfInput?.errors?.required\\\">CPF obrigatório</div>\\r\\n                                                <div class=\\\"text-danger\\\" *ngIf=\\\"cpfInput?.errors?.cpf\\\">CPF inválido!</div>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"col\\\"*ngIf=\\\"cpfcnpjActive=='cnpj'\\\" >\\r\\n                                                <input  type=\\\"text\\\" name=\\\"cnpj\\\" [cnpj]=\\\"cnpj\\\" placeholder=\\\"Insira o CNPJ\\\"\\r\\n                                                [(ngModel)]=\\\"cnpj\\\" [class.is-invalid]=\\\"cnpjInput.invalid && cnpjInput.touched\\\" #cnpjInput=\\\"ngModel\\\" required >\\r\\n                                                <div class=\\\"md-errors-spacer text-danger\\\" [hidden]=\\\"cnpjInput.valid || cnpjInput.untouched\\\" *ngIf=\\\"cnpjInput?.errors?.required\\\">CNPJ obrigatório</div>\\r\\n                                                <div class=\\\"text-danger\\\" *ngIf=\\\"cnpjInput?.errors?.cnpj\\\">CNPJ Inválido</div>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-vendedor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-garantidor'}\\\" (click)=\\\"nextTab('nav-veiculo')\\\" class=\\\"btn btn-rainti btn-block\\\" >Próximo </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div [ngClass]=\\\"{'show active':activeTab==='nav-veiculo'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-veiculo\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-veiculo-tab\\\"><br>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Chassi</label>\\r\\n                                            <input type=\\\"text\\\"\\r\\n                                            [(ngModel)]=\\\"contractData.chassi\\\" name=\\\"chassi\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"chassi.invalid && chassi.touched\\\" #chassi=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassi.valid || chassi.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"chassi.errors && chassi.errors.required\\\">\\r\\n                                                    Chassi obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Confirme o chassi</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.chassiConfirmation\\\" name=\\\"chassiConfirmation\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"chassiConfirmation.invalid && chassiConfirmation.touched\\\" #chassiConfirmation=\\\"ngModel\\\" \\r\\n                                            appConfirmEqualValidator=\\\"chassi\\\"required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassiConfirmation.valid || chassiConfirmation.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"chassiConfirmation.errors && chassiConfirmation.errors.required\\\">\\r\\n                                                    confirmação de chassi obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"chassiConfirmation.valid || chassiConfirmation.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"chassiConfirmation.errors && chassiConfirmation.errors?.notEqual\\\">\\r\\n                                                    confirmação de chassi incorreto\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">               \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Chassi Remarcado</label>\\r\\n                                            <select class=\\\"custom-select\\\" #remarkedChassi=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && remarkedChassi.touched\\\"\\r\\n                                                name=\\\"remarkedChassi\\\" [(ngModel)]=\\\"contractData.remarkedChassi\\\" (change)=\\\"validateTopic(remarkedChassi.value)\\\" (blur)=\\\"validateTopic(remarkedChassi.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha uma opção</option>\\r\\n                                                <option *ngFor=\\\"let remarkedChassi of _remarkedChassi\\\">{{ contractData.remarkedChassi }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || remarkedChassi.untouched\\\">Escolha uma opção</small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">Placa </label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.plate\\\" name=\\\"plate\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"plate.invalid && plate.touched\\\" #plate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"plate.valid || plate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"plate.errors && plate.errors.required\\\">\\r\\n                                                    Placa obrigatória\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-sm-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">UF da placa</label>\\r\\n                                            <select class=\\\"custom-select\\\" #plateUf=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && plateUf.touched\\\"\\r\\n                                                name=\\\"plateUf\\\" [(ngModel)]=\\\"contractData.plateUf\\\" (change)=\\\"validateTopic(plateUf.value)\\\" (blur)=\\\"validateTopic(plateUf.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha uma UF</option>\\r\\n                                                <option *ngFor=\\\"let plateUf of _plateUf\\\">{{ contractData.plateUf }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || plateUf.untouched\\\">Escolha uma UF</small>\\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Renavan</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.renavam\\\" name=\\\"renavam\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"renavam.invalid && renavam.touched\\\" #renavam=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"renavam.valid || renavam.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"renavam.errors && renavam.errors.required\\\">\\r\\n                                                    Renavan obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Gravame</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.gravame\\\" name=\\\"gravame\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"gravame.invalid && gravame.touched\\\" #gravame=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"gravame.valid || gravame.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"gravame.errors && gravame.errors.required\\\">\\r\\n                                                    Gravame obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Espécie</label>\\r\\n                                            <select class=\\\"custom-select\\\" #specie=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && specie.touched\\\"\\r\\n                                                name=\\\"specie\\\" [(ngModel)]=\\\"contractData.specie\\\" (change)=\\\"validateTopic(specie.value)\\\" (blur)=\\\"validateTopic(specie.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha uma espécie</option>\\r\\n                                                <option *ngFor=\\\"let specie of _specie\\\">{{ contractData.specie }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || specie.untouched\\\">Escolha uma espécie</small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Ano de Fabricação</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.fabriactionYear\\\" name=\\\"fabriactionYear\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"fabriactionYear.invalid && fabriactionYear.touched\\\" #fabriactionYear=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fabriactionYear.valid || fabriactionYear.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"fabriactionYear.errors && fabriactionYear.errors.required\\\">\\r\\n                                                    Ano de Fabricação inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Ano do modelo</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"contractData.modelYear\\\" name=\\\"modelYear\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"modelYear.invalid && modelYear.touched\\\" #modelYear=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"modelYear.valid || modelYear.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"modelYear.errors && modelYear.errors.required\\\">\\r\\n                                                    Ano do modelo inválido \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Marca </label>\\r\\n                                            <select class=\\\"custom-select\\\" #brand=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && brand.touched\\\"\\r\\n                                                name=\\\"brand\\\" [(ngModel)]=\\\"contractData.brand\\\" (change)=\\\"validateTopic(brand.value)\\\" (blur)=\\\"validateTopic(brand.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha uma marca </option>\\r\\n                                                <option *ngFor=\\\"let brand of _brand\\\">{{ contractData.brand }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || brand.untouched\\\">Escolha uma marca </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Modelo  </label>\\r\\n                                            <select class=\\\"custom-select\\\" #model=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && model.touched\\\"\\r\\n                                                name=\\\"model\\\" [(ngModel)]=\\\"contractData.model\\\" (change)=\\\"validateTopic(model.value)\\\" (blur)=\\\"validateTopic(model.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um modelo  </option>\\r\\n                                                <option *ngFor=\\\"let model of _model\\\">{{ contractData.model }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || model.untouched\\\">Escolha um modelo </small>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Cor</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"contractData.color\\\" name=\\\"color\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"color.invalid && color.touched\\\" #color=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"color.valid || color.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"color.errors && color.errors.required\\\">\\r\\n                                                    Cor obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\"> \\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-veiculo'}\\\" (click)=\\\"nextTab('nav-garantidor')\\\" class=\\\"btn btn-info btn-block\\\" >Anterior</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">      \\r\\n                                            <button class=\\\"btn btn-rainti btn-block\\\" >Confirma </button>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>                \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contratos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <div class=\\\"col\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-md btn-block\\\" routerLink=\\\"/registrar-contrato\\\">Adicionar</button>\\r\\n          </div>        \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let users of user | filter: fristname : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{users.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Last:</b> {{users.lastname}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>usuário:</b> {{users.username}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{users.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/contratos/\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/contratos/\\\" routerLinkActive=\\\"active\\\">Desativar</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorGroupAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Gestora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-home')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-address')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-contract')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-home'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">    \\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorGroupData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-address')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                                         \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-address'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorGroupData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-contract')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                              \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-contract'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"contractForm.form.invalid\\\" (click)=\\\"createCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>                             \\r\\n                            </form> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                        {{_createdMessage}}\\r\\n                    </div>                                \\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addCreditorGroupContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroupContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateCreditorGroupContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteCreditorGroupContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Excluir</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorGroupContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addCreditorGroupContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let creditorGroupContact of creditorGroupContacts | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{creditorGroupContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{creditorGroupContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{creditorGroupContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"creditorGroupContact.additionalinfo\\\"><b>Info. adicionais:</b> {{creditorGroupContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/gestor-detalhe-contato/{{creditorGroupContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorGroupDetail\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Gestora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contracto</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorGroupData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorGroupData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>              \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorGroupData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">{{creditorGroupData.topic }}</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>    \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorGroupData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorGroupData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"updateCreditorGroup()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"deleteCreditorGroup()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" (click)=\\\"backToCreditorGroup()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>                            \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>     \\r\\n                            </form> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                        {{_registerUpdated}}\\r\\n                    </div>                                    \\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <h1>Gestora</h1>  \\r\\n  </div>  \\r\\n  <div class=\\\"col-md-auto\\\">    \\r\\n    <form class=\\\"form-inline \\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">          \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>   \\r\\n    </form> \\r\\n  </div>\\r\\n</div>\\r\\n<hr/>\\r\\n<div class=\\\"row mt-2\\\">    \\r\\n    <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: name : searchText\\\"> \\r\\n      <div class=\\\"card text-center shadow rounded\\\">\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <h5 class=\\\"card-title \\\">{{entity.businessname}}</h5>\\r\\n          <hr/>\\r\\n          <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n          <p class=\\\"card-text\\\"><b>tel.:</b> {{entity.phone}}</p>\\r\\n          <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\">\\r\\n          <div class=\\\"row align-items-center mb-1\\\">    \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/gestor-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n            </div>        \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/gestor-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n            </div>            \\r\\n          </div>         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastro de Credora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                        <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-home')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-address')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-contract')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n                        <a class=\\\"nav-item nav-link\\\" id=\\\"nav-entities-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-entities\\\" [ngClass]=\\\"{'active':activeTab==='nav-entities'}\\\" (click)=\\\"nextTab('nav-entities')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-entities\\\" aria-selected=\\\"false\\\">Entidades</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-home'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">    \\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                            \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-home'}\\\" (click)=\\\"nextTab('nav-address')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>   \\t\\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-address'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                            Complemento Endereço obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                       \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>                                                                                    \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div>\\r\\n                                    </div>     \\r\\n                                    <div class=\\\"col-5\\\"> \\r\\n                                        <label for=\\\"uname1\\\">Cep</label>\\r\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                        pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                        [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                        <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                            <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                Cep obrigatório\\r\\n                                            </small>\\r\\n                                            <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                Cep inválido (Ex.: 12345-678)\\r\\n                                            </small>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-address'}\\\" (click)=\\\"nextTab('nav-contract')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-contract'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>  \\r\\n                                        </div>   \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\t\\r\\n                                        </div>  \\r\\n                                    </div>  \\r\\n                                </div>\\t\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [ngClass]=\\\"{'active':activeTab==='nav-contract'}\\\" (click)=\\\"nextTab('nav-entities')\\\" class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div [ngClass]=\\\"{'show active':activeTab==='nav-entities'}\\\" class=\\\"tab-pane fade\\\" id=\\\"nav-entities\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-entities-tab\\\">\\r\\n                            <form class=\\\"form\\\" #entitiesForm=\\\"ngForm\\\"> \\r\\n                                <nav>\\r\\n                                    <div class=\\\"nav nav-tabs2\\\" id=\\\"nav-tab2\\\" role=\\\"tablist2\\\">\\r\\n                                        <a class=\\\"nav-item2 nav-link active\\\" id=\\\"nav-detrans-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-detrans\\\" role=\\\"tab\\\" aria-controls=\\\"nav-detran\\\" aria-selected=\\\"true\\\">Detrans</a>\\r\\n                                        <a class=\\\"nav-item2 nav-link\\\" id=\\\"nav-creditorsgroup-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-creditorsgroup\\\" role=\\\"tab\\\" aria-controls=\\\"nav-creditorsgroup\\\" aria-selected=\\\"false\\\">Gestoras</a>\\r\\n                                    </div>\\r\\n                                </nav>      \\r\\n                                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent2\\\">\\r\\n                                    <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-detrans\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-detrans-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #detransForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione os Detrans</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <label>Selecionar/Limpar Todos: <input type=\\\"checkbox\\\" (click)=\\\"checkAllOptions()\\\"></label><br/>   \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 10px;\\\"required>                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let detran of _detrans \\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"detran.checked\\\" name=\\\"detranOptions\\\" id=\\\"{{detran.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkDetransChange($event)\\\"> {{ detran.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-creditorsgroup\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-creditorsgroup-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #creditorsgroupForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione a Gestora</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <div>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\" (click)=\\\"uncheckAllOptions()\\\">Limpar</button>\\r\\n                                                </div>                                    \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 20px;\\\">                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let creditorgroup of _creditorsgroup\\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"creditorgroup.checked\\\" name=\\\"creditorgroupOptions\\\" id=\\\"{{creditorgroup.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkCreditorsGroupChange($event)\\\"> {{ creditorgroup.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\t\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"entitiesForm.form.invalid\\\" (click)=\\\"createCreditor()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>    \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                        {{_createdMessage}}\\r\\n                    </div>    \\r\\n                </div>                             \\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addCreditorContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateCreditorContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteCreditorContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Desativar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToCreditorContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addCreditorContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let creditorContact of creditorContacts | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{creditorContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{creditorContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{creditorContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"creditorContact.additionalinfo\\\"><b>Info. adicionais:</b> {{creditorContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/credor-detalhe-contato/{{creditorContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"creditorDetail\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar da Credora</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                            <a class=\\\"nav-item nav-link active\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-home\\\" role=\\\"tab\\\" aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\">Geral</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-address\\\" role=\\\"tab\\\" aria-controls=\\\"nav-address\\\" aria-selected=\\\"false\\\">Endereço</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-contract-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-contract\\\" role=\\\"tab\\\" aria-controls=\\\"nav-contract\\\" aria-selected=\\\"false\\\">Contrato</a>\\r\\n                            <a class=\\\"nav-item nav-link\\\" id=\\\"nav-entities-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-entities\\\" role=\\\"tab\\\" aria-controls=\\\"nav-entities\\\" aria-selected=\\\"false\\\">Entidades</a>\\r\\n                        </div>\\r\\n                    </nav>\\r\\n                    <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\">\\r\\n                        <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-home-tab\\\">\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Razão Social</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.businessname\\\" name=\\\"businessName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"businessName.invalid && businessName.touched\\\" #businessName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"businessName.valid || businessName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"businessName.errors && businessName.errors.required\\\">\\r\\n                                            Razão Social obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome Fantasia</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.fantasyname\\\" name=\\\"fantasyName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"fantasyName.invalid && fantasyName.touched\\\" #fantasyName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"fantasyName.valid || fantasyName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"fantasyName.errors && fantasyName.errors.required\\\">\\r\\n                                            Nome Fantasia obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                                </small>\\r\\n                                            </div>      \\r\\n                                        </div>   \\r\\n                                    </div>\\r\\n                                </div>     \\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-2\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                            </div>                                         \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"creditorData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    placeHolder=\\\"example@example.com\\\"\\r\\n                                    [(ngModel)]=\\\"creditorData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido (Ex.: example@example.com)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\t\\r\\n\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-address\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-address-tab\\\">\\r\\n                            <form class=\\\"form\\\" #addressForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Logradouro</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.address\\\" name=\\\"address\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"address.invalid && address.touched\\\" #address=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"address.valid || address.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"address.errors && address.errors.required\\\">\\r\\n                                            Logradouro obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-4\\\">\\r\\n                                            <label for=\\\"uname1\\\">Número</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.streetnumber\\\" name=\\\"streetNumber\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"streetNumber.invalid && streetNumber.touched\\\" #streetNumber=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"streetNumber.valid || streetNumber.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"streetNumber.errors && streetNumber.errors.required\\\">\\r\\n                                                    Número do Logradouro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Complemento Endereço</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.addresscomplement\\\" name=\\\"addressComplement\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"addressComplement.invalid && addressComplement.touched\\\" #addressComplement=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"addressComplement.valid || addressComplement.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"addressComplement.errors && addressComplement.errors.required\\\">\\r\\n                                                    Complemento Endereço obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Bairro</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.district\\\" name=\\\"district\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"district.invalid && district.touched\\\" #district=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"district.valid || district.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"district.errors && district.errors.required\\\">\\r\\n                                                    Bairro obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Municipio</label>\\r\\n                                             <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.county\\\" name=\\\"county\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                             [class.is-invalid]=\\\"county.invalid && county.touched\\\" #county=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"county.valid || county.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"county.errors && county.errors.required\\\">\\r\\n                                                    Municipio obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>                                                   \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-7\\\">\\r\\n                                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                                            <select class=\\\"custom-select\\\" \\r\\n                                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                                            [(ngModel)]=\\\"creditorData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                                <option value=\\\"default\\\">{{creditorData.topic }}</option>\\r\\n                                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                                            </select>\\r\\n                                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-5\\\">   \\r\\n                                            <label for=\\\"uname1\\\">Cep</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.zipcode\\\" name=\\\"zipCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^([0-9]{5})(-)([0-9]{3})$\\\" placeHolder=\\\"12345-678\\\"\\r\\n                                            [class.is-invalid]=\\\"zipCode.invalid && zipCode.touched\\\" #zipCode=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"zipCode.valid || zipCode.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"zipCode.errors && zipCode.errors.required\\\">\\r\\n                                                    Cep obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"zipCode.errors && zipCode.errors.pattern\\\">\\r\\n                                                    Cep inválido (Ex.: 12345-678)\\r\\n                                                </small>\\r\\n                                            </div>                                   \\r\\n                                        </div> \\r\\n                                    </div> \\r\\n                                </div>    \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-contract\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-contract-tab\\\">\\r\\n                            <form class=\\\"form\\\" #contractForm=\\\"ngForm\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Contrato</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"creditorData.contract\\\" name=\\\"contract\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            pattern=\\\"^.{6,}$\\\" placeHolder=\\\"A1B23C\\\"\\r\\n                                            [class.is-invalid]=\\\"contract.invalid && contract.touched\\\" #contract=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"contract.valid || contract.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"contract.errors && contract.errors.required\\\">\\r\\n                                                    contrato inválido (Minimo 6 posições)\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"contract.errors && contract.errors.pattern\\\">\\r\\n                                                    contrato inválido (Ex.: A1B23C minimo 6 posições)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Inicio</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.startdate\\\" name=\\\"startDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"startDate.invalid && startDate.touched\\\" #startDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"startDate.valid || startDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"startDate.errors && startDate.errors.required\\\">\\r\\n                                                    Data Inicio inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div> \\r\\n                                        <div class=\\\"col-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Data Final</label>\\r\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"creditorData.enddate\\\" name=\\\"endDate\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"endDate.invalid && endDate.touched\\\" #endDate=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"endDate.valid || endDate.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"endDate.errors && endDate.errors.required\\\">\\r\\n                                                    Data Final inválida \\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>    \\r\\n                                    </div>                                                   \\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>  \\r\\n                            </form> \\r\\n                        </div>\\r\\n                        <div class=\\\"tab-pane fade\\\" id=\\\"nav-entities\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-entities-tab\\\">\\r\\n                            <form class=\\\"form\\\" #entitiesForm=\\\"ngForm\\\"> \\r\\n                                <nav>\\r\\n                                    <div class=\\\"nav nav-tabs2\\\" id=\\\"nav-tab2\\\" role=\\\"tablist2\\\">\\r\\n                                        <a class=\\\"nav-item2 nav-link active\\\" id=\\\"nav-detrans-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-detrans\\\" role=\\\"tab\\\" aria-controls=\\\"nav-detran\\\" aria-selected=\\\"true\\\">Detrans</a>\\r\\n                                        <a class=\\\"nav-item2 nav-link\\\" id=\\\"nav-creditorsgroup-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#nav-creditorsgroup\\\" role=\\\"tab\\\" aria-controls=\\\"nav-creditorsgroup\\\" aria-selected=\\\"false\\\">Gestoras</a>\\r\\n                                    </div>\\r\\n                                </nav>      \\r\\n                                <div class=\\\"tab-content\\\" id=\\\"nav-tabContent2\\\">\\r\\n                                    <div class=\\\"tab-pane fade show active\\\" id=\\\"nav-detrans\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-detrans-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #detransForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione os Detrans</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <label>Selecionar/Limpar Todos: <input type=\\\"checkbox\\\" (click)=\\\"checkAllOptions()\\\"></label><br/>   \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 10px;\\\"required>                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let detran of _detrans \\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"detran.checked\\\" name=\\\"detranOptions\\\" id=\\\"{{detran.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkDetransChange($event)\\\"> {{ detran.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                    <div class=\\\"tab-pane fade\\\" id=\\\"nav-creditorsgroup\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-creditorsgroup-tab\\\">\\r\\n                                        <form class=\\\"form\\\" #creditorsgroupForm=\\\"ngForm\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <div>\\r\\n                                                    <h5>Selecione a Gestora</h5>                                                                 \\r\\n                                                </div>                                    \\r\\n                                                <div>\\r\\n                                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"button\\\" aria-pressed=\\\"false\\\" autocomplete=\\\"off\\\" (click)=\\\"uncheckAllOptions()\\\">Limpar</button>\\r\\n                                                </div>                                    \\r\\n                                                <div class=\\\"container-rainti btn-group btn-group-toggle btn-group-vertical\\\" style=\\\"padding-top: 20px;\\\">                                            \\r\\n                                                    <div class=\\\"text-left\\\" *ngFor=\\\"let creditorgroup of _creditorsgroup\\\">\\r\\n                                                        <label class=\\\"custom-control custom-checkbox\\\" >\\r\\n                                                            <input type=\\\"checkbox\\\" [checked]=\\\"creditorgroup.checked\\\" name=\\\"creditorgroupOptions\\\" id=\\\"{{creditorgroup.id}}\\\" autocomplete=\\\"off\\\" (change)=\\\"checkCreditorsGroupChange($event)\\\"> {{ creditorgroup.description }}\\r\\n                                                        </label>\\r\\n                                                    </div>\\r\\n                                                </div> \\t\\r\\n                                            </div>\\r\\n                                        </form>\\r\\n                                    </div>    \\r\\n                                </div>                          \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"updateCreditor()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"deleteCreditor()\\\" class=\\\"btn btn-danger btn-block\\\">Desativar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-4\\\">\\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToCreditor()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div>     \\r\\n                            </form>                \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <hr/>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div> \\r\\n                    <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                        {{_registerUpdated}}\\r\\n                    </div>                                    \\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <h1>Credora</h1>  \\r\\n  </div>  \\r\\n  <div class=\\\"col-md-auto\\\">    \\r\\n    <form class=\\\"form-inline \\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">      \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>   \\r\\n    </form> \\r\\n  </div>\\r\\n</div>\\r\\n<hr/>\\r\\n<div class=\\\"row mt-2\\\">    \\r\\n    <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: name : searchText\\\"> \\r\\n      <div class=\\\"card text-center shadow rounded\\\">\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <h5 class=\\\"card-title \\\">{{entity.businessname}}</h5>\\r\\n          <hr/>\\r\\n          <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n          <p class=\\\"card-text\\\"><b>tel.:</b> {{entity.phone}}</p>\\r\\n          <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\">\\r\\n          <div class=\\\"row align-items-center mb-1\\\">    \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/credor-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n            </div>        \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/credor-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n            </div>            \\r\\n          </div>         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"detranAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar de Detran</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Estado</label>\\r\\n                            <select class=\\\"custom-select\\\" \\r\\n                            #topic=\\\"ngModel\\\" [class.is-invalid]=\\\"topicHasError && topic.touched\\\" name=\\\"topic\\\" \\r\\n                            [(ngModel)]=\\\"userData.topic\\\" (change)=\\\"validateTopic(topic.value)\\\" (blur)=\\\"validateTopic(topic.value)\\\">                            \\r\\n                                <option value=\\\"default\\\">--Escolha um Estado</option>\\r\\n                                <option *ngFor=\\\"let state of _states\\\">{{ state.description }}</option>\\r\\n                            </select>\\r\\n                            <small class=\\\"text-danger\\\" [class.d-none]=\\\"!topicHasError || topic.untouched\\\">Escolha um Estado</small>\\r\\n                        </div>    \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                            CNPJ obrigatório \\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                            CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid || topicHasError\\\" (click)=\\\"createDetran()\\\" class=\\\"btn btn-rainti btn-block \\\">Confirmar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetran()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                 \\r\\n                       \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastrar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalInfo\\\" name=\\\"additionalInfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalInfo.invalid && additionalInfo.touched\\\" #additionalInfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"addDetranContact()\\\" class=\\\"btn btn-rainti btn-block \\\">Adicionar</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetranContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_createdMessage\\\">\\r\\n                            {{_createdMessage}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar Contato</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.name\\\" name=\\\"name\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"userData.dddmodel\\\" name=\\\"dddmodel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddmodel.invalid && dddmodel.touched\\\" #dddmodel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddmodel.valid || dddmodel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddmodel.errors && dddmodel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddmodel.errors && dddmodel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"userData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"userData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Informações adicionais</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"userData.additionalinfo\\\" name=\\\"additionalinfo\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"additionalinfo.invalid && additionalinfo.touched\\\" #additionalinfo=\\\"ngModel\\\" >\\r\\n                        </div>\\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"updateDetranContactById()\\\" class=\\\"btn btn-rainti btn-block \\\">Alterar</button>                \\r\\n                                </div> \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\"  (click)=\\\"deleteDetranContactById()\\\" class=\\\"btn btn-danger btn-block \\\">Excluir</button>                \\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetranContacts()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                             \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div>                                  \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_updatedMessage\\\">\\r\\n                            {{_updatedMessage}}\\r\\n                        </div>  \\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Contatos</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addDetranContact()\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let detranContact of detranContacts | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{detranContact.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>Tel.:</b> {{detranContact.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{detranContact.email}}</p>          \\r\\n            <p class=\\\"card-text\\\" *ngIf=\\\"detranContact.additionalinfo\\\"><b>Info. adicionais:</b> {{detranContact.additionalinfo}}</p>         \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/detran-detalhe-contato/{{detranContact.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>                    \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"detranAdd\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Editar de Detran</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <h5>Estado: {{detranData.state}}</h5>\\r\\n                        </div>    \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"detranData.name\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                            Nome obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">CNPJ</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"detranData.cnpj\\\" name=\\\"cnpj\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            pattern=\\\"^\\\\d{2}\\\\.\\\\d{3}\\\\.\\\\d{3}\\\\/\\\\d{4}(-\\\\d{2})$\\\" placeHolder=\\\"12.123.123/0001-12\\\"\\r\\n                            [class.is-invalid]=\\\"cnpj.invalid && cnpj.touched\\\" #cnpj=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cnpj.valid || cnpj.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"cnpj.errors && cnpj.errors.required\\\">\\r\\n                                            CNPJ obrigatório \\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"cnpj.errors && cnpj.errors.pattern\\\">\\r\\n                                            CNPJ inválido (Ex.: 12.123.123/0001-12)\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">                            \\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-3\\\">\\r\\n                                    <label for=\\\"uname1\\\">DDD</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                    placeHolder=\\\"11\\\"\\r\\n                                    [(ngModel)]=\\\"detranData.dddmodel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                            DDD obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                            DDD inválido\\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                  \\r\\n                                </div>\\r\\n                                <div class=\\\"col\\\">\\r\\n                                    <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                    <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                    placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                    [(ngModel)]=\\\"detranData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                            Telefone obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                            Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                        </small>\\r\\n                                   </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>                          \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">E-mail</label>\\r\\n                            <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                            placeHolder=\\\"example@example.com\\\"\\r\\n                            [(ngModel)]=\\\"detranData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                    e-mail obrigatório\\r\\n                                </small>\\r\\n                                <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                    e-mail inválido (Ex.: example@example.com)\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <hr/> \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"updateDetran()\\\" class=\\\"btn btn-rainti btn-block\\\">Alterar</button>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"deleteDetran()\\\" class=\\\"btn btn-danger btn-block\\\">Excluir</button>\\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-4\\\">\\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToDetran()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                               \\r\\n                        <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                            {{_errorMessage}}\\r\\n                        </div> \\r\\n                        <div class=\\\"alert alert-primary text-center text-primary\\\" *ngIf=\\\"_registerUpdated\\\">\\r\\n                            {{_registerUpdated}}\\r\\n                        </div>                                  \\r\\n                       \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Detran</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <!-- <div class=\\\"col\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" (click)=\\\"addDetran()\\\">Adicionar</button>\\r\\n          </div>   -->      \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row mt-2\\\">    \\r\\n      <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let entity of entities | filter: name : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{entity.name}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>CNPJ:</b> {{entity.cnpj}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>tel.:</b> ({{entity.dddmodel}}) {{entity.tel}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail:</b> {{entity.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/detran-detalhe/{{entity.id}}\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/detran-contatos/{{entity.id}}\\\" routerLinkActive=\\\"active\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \"","export default \"<h1>Em breve</h1>\\r\\n\"","export default \"<h1>Em breve Ajuda</h1>\"","export default \"<h1>Em breve Dashboard</h1>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-15 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastro de grupos</h4>\\r\\n                    <hr/>\\r\\n                    <form class=\\\"form\\\" #profileForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Grupo</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"groupData.planname\\\" name=\\\"planname\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    placeholder=\\\"Digite o nome do grupo a ser criado\\\"\\r\\n                                    [class.is-invalid]=\\\"planname.invalid && planname.touched\\\" #planname=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"planname.valid || planname.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"planname.errors && planname.errors.required\\\">\\r\\n                                            nome do grupo obrigatório\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>                    \\r\\n                        <div class=\\\"form-group\\\">                                   \\r\\n                            <div class=\\\"row\\\">          \\r\\n                                <div class=\\\"col-md-12 \\\">                                        \\r\\n                                    <div class=\\\"form-inline border-bottom\\\" style=\\\"padding-bottom: 10px;\\\">\\r\\n                                            <div class=\\\"col-md-auto\\\">\\r\\n                                                <label for=\\\"uname1\\\">Entidade(s)</label>       \\r\\n                                            </div>\\r\\n                                            <div class=\\\"col-md-3\\\">\\r\\n                                                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                            </div>                                                    \\r\\n                                    </div>                                            \\r\\n                                    <div class=\\\"btn-group btn-group-toggle btn-group\\\"  data-toggle=\\\"buttons\\\" style=\\\"padding-top: 10px;\\\" required> <!--style=\\\"padding-top: 10px; overflow: auto; white-space: nowrap;\\\"-->\\r\\n                                        <div class=\\\"row\\\">\\r\\n                                            <div class=\\\"col-md-auto\\\" *ngFor=\\\"let entities of _entities | filter : name: searchText\\\">\\r\\n                                                <label class=\\\"btn btn-outline-rainti\\\" >\\r\\n                                                    <input type=\\\"checkbox\\\" name=\\\"profileOptions\\\" id=\\\"{{entities.name}}.{{entities.id}}\\\" autocomplete=\\\"off\\\"> {{ entities.name }}\\r\\n                                                </label>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        \\r\\n                                    </div>                                      \\r\\n                                </div>                                                       \\r\\n                                \\r\\n                                <div class=\\\"col-md-12\\\"style=\\\"padding-top: 10px; \\\" >  \\r\\n                                    <div class=\\\"form-inline border-bottom \\\" style=\\\"padding-bottom: 10px;\\\">\\r\\n                                        <div class=\\\"col-md-auto\\\">\\r\\n                                            <label for=\\\"uname1\\\">Funcionalidade(s)</label>       \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-md-3\\\">\\r\\n                                            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchTextFunc\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n                                        </div>                                                    \\r\\n                                    </div>                                            \\r\\n                                                                           \\r\\n                                    <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\" style=\\\"padding-top: 10px; height: 180px;  overflow: auto; white-space: nowrap;\\\" required>                                            \\r\\n                                    \\r\\n                                        <div class=\\\"col-md-3 \\\"  *ngFor=\\\"let feature of _features | filter : name : searchTextFunc\\\">\\r\\n                                            <label class=\\\"btn btn-outline-rainti\\\"  >\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" id=\\\"{{ feature.name }}.{{ feature.id}}\\\" autocomplete=\\\"off\\\"> {{ feature.name }}\\r\\n                                            </label>\\r\\n                                        </div>                                \\r\\n                                        \\r\\n                                    </div>                  \\r\\n                                    <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\" style=\\\"padding-top: 10px; height: 180px;  overflow: auto; white-space: nowrap;\\\" required>                                            \\r\\n                                    \\r\\n                                        <div class=\\\"col-md-3 \\\"  *ngFor=\\\"let feature of _features | filter : name : searchTextFunc\\\">\\r\\n                                            <label class=\\\"btn btn-outline-rainti\\\"  >\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" id=\\\"{{ feature.name }}.{{ feature.id}}\\\" autocomplete=\\\"off\\\"> {{ feature.name }}\\r\\n                                            </label>\\r\\n                                        </div>                                \\r\\n                                        \\r\\n                                    </div>                  \\r\\n                                    <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\" style=\\\"padding-top: 10px; height: 180px;  overflow: auto; white-space: nowrap;\\\" required>                                            \\r\\n                                    \\r\\n                                        <div class=\\\"col-md-3 \\\"  *ngFor=\\\"let feature of _features | filter : name : searchTextFunc\\\">\\r\\n                                            <label class=\\\"btn btn-outline-rainti\\\"  >\\r\\n                                                <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" id=\\\"{{ feature.name }}.{{ feature.id}}\\\" autocomplete=\\\"off\\\"> {{ feature.name }}\\r\\n                                            </label>\\r\\n                                        </div>                                \\r\\n                                        \\r\\n                                    </div>  \\r\\n                                    <div style=\\\"padding-top: 10px; height: 180px; overflow: auto; white-space: nowrap;\\\">\\r\\n                                        <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\"  required>                                            \\r\\n                                    \\r\\n                                            <div class=\\\"col-md-3 \\\"  *ngFor=\\\"let feature of _features | filter : name : searchTextFunc\\\">\\r\\n                                                <label class=\\\"btn btn-outline-rainti\\\"  >\\r\\n                                                    <input type=\\\"checkbox\\\" name=\\\"groupOptions\\\" id=\\\"{{ feature.name }}.{{ feature.id}}\\\" autocomplete=\\\"off\\\"> {{ feature.name }}\\r\\n                                                </label>\\r\\n                                            </div>                                \\r\\n                                            \\r\\n                                        </div>                                 \\r\\n                                    </div>\\r\\n                                    \\r\\n                                </div>                                    \\r\\n                                \\r\\n                            </div> \\r\\n                        </div>  \\r\\n                        <hr/>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">                   \\r\\n                                    <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>\\r\\n                                </div>  \\r\\n                                <div class=\\\"col-sm-6\\\">                                        \\r\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"profileForm.form.invalid\\\" (click)=\\\"createGroup()\\\" class=\\\"btn btn-rainti btn-block \\\">Finalizar</button>                \\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div> \\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <h1>Grupos</h1>  \\r\\n  </div>  \\r\\n  <div class=\\\"col-md-auto\\\">    \\r\\n    <form class=\\\"form-inline \\\">\\r\\n      <div class=\\\"row align-items-center mb-1\\\">    \\r\\n        <div class=\\\"col\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-md btn-block\\\" routerLink=\\\"/group-add\\\">Adicionar</button>\\r\\n        </div>        \\r\\n        <div class=\\\"col\\\">\\r\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n        </div>            \\r\\n      </div>   \\r\\n    </form> \\r\\n  </div>\\r\\n</div>\\r\\n<hr/>\\r\\n<div class=\\\"row mt-2\\\">    \\r\\n    <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let group of groupMain | filter: fristname : searchText\\\"> \\r\\n      <div class=\\\"card text-center shadow rounded\\\">\\r\\n        <div class=\\\"card-body \\\">\\r\\n          <h5 class=\\\"card-title \\\">{{group.name}}</h5>\\r\\n          <hr/>\\r\\n          <p class=\\\"card-text\\\"><b>Entidade:</b> {{group.entityname}}</p>       \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\">\\r\\n          <div class=\\\"row align-items-center mb-1\\\">    \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-md btn-block\\\" routerLink=\\\"/group-main/\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n            </div>        \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" routerLink=\\\"/group-main/\\\" routerLinkActive=\\\"active\\\">Desativar</button>\\r\\n            </div>            \\r\\n          </div>         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Cadastro de usuário</h4>\\r\\n                    <hr/>\\r\\n                    <nav>\\r\\n                        <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\r\\n                          <a class=\\\"nav-item nav-link active\\\" id=\\\"user-data-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-data\\\" role=\\\"tab\\\" aria-controls=\\\"user-data\\\" aria-selected=\\\"true\\\"  >Dados do Usuário</a>\\r\\n                          <a class=\\\"nav-item nav-link \\\" id=\\\"user-profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-profile\\\" role=\\\"tab\\\" aria-controls=\\\"user-profile\\\" aria-selected=\\\"false\\\" >Perfil de Acesso</a>\\r\\n                        </div>\\r\\n                      </nav>\\r\\n                      <!-- User data TAB -->\\r\\n                      <div class=\\\"tab-content\\\" id=\\\"nav-tabContent\\\" style=\\\"padding-top: 10px;\\\">\\r\\n                        <div class=\\\"tab-pane fade show active \\\" id=\\\"user-data\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-data-tab\\\" >\\r\\n\\r\\n                            <form class=\\\"form\\\" #registerForm=\\\"ngForm\\\" >\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Nome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.firstName\\\" name=\\\"firstName\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"name.invalid && name.touched\\\" #name=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"name.valid || name.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"name.errors && name.errors.required\\\">\\r\\n                                                    nome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <label for=\\\"uname1\\\">Sobrenome</label>\\r\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"lastName.invalid && lastName.touched\\\" #lastName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"lastName.valid || lastName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"lastName.errors && lastName.errors.required\\\">\\r\\n                                                    sobrenome obrigatório\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                        </div>  \\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">Nome de usuário</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                                    Nome de usuário obrigatória\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">E-mail</label>\\r\\n                                    <input #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" type=\\\"text\\\" \\r\\n                                    [(ngModel)]=\\\"registerUserData.email\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"email.invalid && email.touched\\\" required>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"email.valid || email.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"email.errors && email.errors.required\\\">\\r\\n                                            e-mail obrigatório\\r\\n                                        </small>\\r\\n                                        <small  class=\\\"text-danger\\\" *ngIf=\\\"email.errors && email.errors.pattern\\\">\\r\\n                                            e-mail inválido\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"form-group\\\">                            \\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-3\\\">\\r\\n                                            <label for=\\\"uname1\\\">DDD</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{2})\\\"\\r\\n                                            placeHolder=\\\"11\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.dddModel\\\" name=\\\"dddModel\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"dddModel.invalid && dddModel.touched\\\" #dddModel=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"dddModel.valid || dddModel.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"dddModel.errors && dddModel.errors.required\\\">\\r\\n                                                    DDD obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"(dddModel.errors && dddModel.errors.pattern) || ddHasError\\\">\\r\\n                                                    DDD inválido\\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                          \\r\\n                                        </div>\\r\\n                                        <div class=\\\"col\\\">\\r\\n                                            <label for=\\\"uname1\\\">Telefone</label>\\r\\n                                            <input type=\\\"text\\\" pattern=\\\"^([1-9]{1}[0-9]{3}|[1-9]{1}[0-9]{4})(-)([0-9]{4})\\\"\\r\\n                                            placeHolder=\\\"1234-5678 ou 12345-6789\\\"\\r\\n                                            [(ngModel)]=\\\"registerUserData.phone\\\" name=\\\"phone\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                            [class.is-invalid]=\\\"phone.invalid && phone.touched\\\" #phone=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"phone.valid || phone.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.required\\\">\\r\\n                                                    Telefone obrigatório\\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"phone.errors && phone.errors.pattern\\\">\\r\\n                                                    Formato inválido (Ex.: 1234-5678 ou 12345-6789) \\r\\n                                                </small>\\r\\n                                           </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"uname1\\\">CPF</label>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"registerUserData.cpf\\\" name=\\\"cpf\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    pattern=\\\"^\\\\d{3}\\\\.\\\\d{3}\\\\.\\\\d{3}(-\\\\d{2})$\\\" placeHolder=\\\"123.123.123-12\\\"\\r\\n                                    [class.is-invalid]=\\\"cpf.invalid && cpf.touched\\\" #cpf=\\\"ngModel\\\" required >\\r\\n                                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"cpf.valid || cpf.untouched\\\">\\r\\n                                                <small  class=\\\"text-danger\\\"*ngIf=\\\"cpf.errors && cpf.errors.required\\\">\\r\\n                                                    CNPJ obrigatório \\r\\n                                                </small>\\r\\n                                                <small  class=\\\"text-danger\\\" *ngIf=\\\"cpf.errors && cpf.errors.pattern\\\">\\r\\n                                                    CNPJ inválido (Ex.: 123.123.123-12)\\r\\n                                                </small>\\r\\n                                            </div>\\r\\n                                </div>                     \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block\\\">Voltar</button>                                            \\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">\\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"registerForm.form.invalid\\\" (click)=\\\"nextTab('user-profile')\\\"  class=\\\"btn btn-rainti btn-block \\\">Próximo</button>                                                            \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                          </form>\\r\\n                        </div>\\r\\n\\r\\n                        <!-- User Profile TAB -->\\r\\n                        <form\\r\\n                         class=\\\"tab-pane fade\\\" id=\\\"user-profile\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"user-profile-tab\\\" >\\r\\n                            <form class=\\\"form\\\" #profileForm=\\\"ngForm\\\" ></form>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div>\\r\\n                                        <h5>Selecione o Grupo de Acesso</h5>                                                                 \\r\\n                                    </div>                                        \\r\\n                                    <div class=\\\"btn-group btn-group-toggle btn-group-vertical\\\" data-toggle=\\\"buttons\\\" style=\\\"padding-top: 10px;\\\" required>                                            \\r\\n                                        <button type=\\\"button\\\" (click)=\\\"CheckAllOptions()\\\">Toggle</button>\\r\\n                                        <div class=\\\"col-lg\\\" *ngFor=\\\"let group of _groups\\\">\\r\\n                                            \\r\\n                                            <label class=\\\"btn btn-outline-rainti\\\"  >\\r\\n                                                <input  class=\\\"btn btn-outline-rainti\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"group.checked\\\" value=\\\"group.value\\\" name=\\\"groupOptions\\\"  id=\\\"{{group.id}}\\\" autocomplete=\\\"off\\\"> {{ group.name }}\\r\\n                                            </label>\\r\\n                                            <label class=\\\"px-2\\\">{{group.entityname}}</label>\\r\\n                                        </div>\\r\\n                                    </div> \\r\\n                                    \\r\\n                                </div>  \\r\\n                                <hr/>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-sm-6\\\">                   \\r\\n                                            <button type=\\\"submit\\\" (click)=\\\"backToUsers()\\\" class=\\\"btn btn-info btn-block float-right\\\">Voltar</button>\\r\\n                                        </div>  \\r\\n                                        <div class=\\\"col-sm-6\\\">                                        \\r\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"profileForm.form.invalid\\\" (click)=\\\"createUser()\\\" class=\\\"btn btn-rainti btn-block \\\">Finalizar</button>                \\r\\n                                        </div>  \\r\\n                                    </div>                            \\r\\n                                </div> \\r\\n                            </form>\\r\\n                        </div>\\r\\n                        \\r\\n                      </div>\\r\\n                                       \\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"row justify-content-lg align-items-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h1>Usuários</h1>  \\r\\n    </div>  \\r\\n    <div class=\\\"col-md-auto\\\">    \\r\\n      <form class=\\\"form-inline \\\">\\r\\n        <div class=\\\"row align-items-center mb-1\\\">    \\r\\n          <div class=\\\"col\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-primary btn-md btn-block\\\" routerLink=\\\"/user-add\\\">Adicionar</button>\\r\\n          </div>        \\r\\n          <div class=\\\"col\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeHolder=\\\"Buscar\\\">\\r\\n          </div>            \\r\\n        </div>   \\r\\n      </form> \\r\\n    </div>\\r\\n  </div>\\r\\n  <hr/>\\r\\n  <div class=\\\"row\\\">    \\r\\n    <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let users of user | filter: fristname : searchText\\\"> \\r\\n      <div class=\\\"card text shadow rounded\\\">\\r\\n        <img src=\\\"../../../../assets/images/profile.png\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">{{users.name}} {{users.lastname}}</h5>\\r\\n          <hr/>\\r\\n          <p class=\\\"card-text\\\"><b>usuário: </b> {{users.username}} </p>\\r\\n          <p class=\\\"card-text\\\"><b>e-mail: </b> {{users.email}}</p>          \\r\\n        </div>\\r\\n        <div class=\\\"card-footer text-muted\\\">\\r\\n          <div class=\\\"row align-items-center mb-1\\\">    \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/usuario-detalhe\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n            </div>        \\r\\n            <div class=\\\"col\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" (click)=\\\"deleteUser()\\\">Contatos</button>\\r\\n            </div>            \\r\\n          </div>         \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n      <!-- <div class=\\\"col-md-4 mb-4\\\" *ngFor=\\\"let users of user | filter: fristname : searchText\\\"> \\r\\n        <div class=\\\"card text-center shadow rounded\\\">\\r\\n          <div class=\\\"card-body \\\">\\r\\n            <h5 class=\\\"card-title \\\">{{users.name}} {{users.lastname}}</h5>\\r\\n            <hr/>\\r\\n            <p class=\\\"card-text\\\"><b>usuário: </b> {{users.username}}</p>\\r\\n            <p class=\\\"card-text\\\"><b>e-mail: </b> {{users.email}}</p>          \\r\\n          </div>\\r\\n          <div class=\\\"card-footer text-muted\\\">\\r\\n            <div class=\\\"row align-items-center mb-1\\\">    \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-rainti btn-md btn-block\\\" routerLink=\\\"/usuario-detalhe\\\" routerLinkActive=\\\"active\\\" >Editar</button>\\r\\n              </div>        \\r\\n              <div class=\\\"col\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-info btn-md btn-block\\\" (click)=\\\"deleteUser()\\\">Contatos</button>\\r\\n              </div>            \\r\\n            </div>         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div> -->\\r\\n    </div>\\r\\n  \"","export default \"<p>audit-history works!</p>\\n\"","export default \"<p>financial-transaction works!</p>\\n\"","export default \"<p>transaction-billing works!</p>\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                <article class=\\\"card-body\\\">\\r\\n                    <!-- <a routerLink=\\\"/register\\\" routerLinkActive=\\\"active\\\" class=\\\"float-right btn btn-outline-primary\\\">Cadastre-se</a> -->\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Entrar</h4>\\r\\n                    <form #loginForm=\\\"ngForm\\\">                        \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label>Usuário</label>\\r\\n                            <input  type=\\\"text\\\" [(ngModel)]=\\\"loginUserData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\"  \\r\\n                            #user=\\\"ngModel\\\" [class.is-invalid]=\\\"user.invalid && user.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"user.valid || user.untouched\\\">\\r\\n                                <small class=\\\"text-danger\\\"  *ngIf=\\\"user.errors && user.errors.required\\\">\\r\\n                                    Nome de usuário obrigatório\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div> <!-- form-group// -->\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <a class=\\\"float-right\\\" routerLink=\\\"/recuperar-senha\\\" routerLinkActive=\\\"active\\\">Recuperar senha</a>\\r\\n                            <label>Senha</label>\\r\\n                            <input  type=\\\"password\\\" [(ngModel)]=\\\"loginUserData.password\\\" name=\\\"password\\\" class=\\\"form-control rounded-0\\\"  \\r\\n                            #password=\\\"ngModel\\\" [class.is-invalid]=\\\"password.invalid && password.touched\\\" required>\\r\\n                            <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"password.valid || password.untouched\\\">\\r\\n                                <small class=\\\"text-danger\\\"  *ngIf=\\\"password.errors && password.errors.required\\\">\\r\\n                                    Senha obrigatória\\r\\n                                </small>\\r\\n                            </div>\\r\\n                        </div> <!-- form-group// --> \\r\\n                        <div class=\\\"form-group\\\"> \\r\\n                        <div class=\\\"checkbox\\\">\\r\\n                        <label> <input type=\\\"checkbox\\\"> Salvar senha </label>\\r\\n                        </div> <!-- checkbox .// -->\\r\\n                        </div> <!-- form-group// -->  \\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <button [disabled]=\\\"loginForm.form.invalid\\\" type=\\\"button\\\" (click)=\\\"loginUser()\\\" class=\\\"btn btn-rainti btn-block\\\">Entrar</button>\\r\\n                        </div> <!-- form-group// -->                                                           \\r\\n                    </form>\\r\\n                    <div class=\\\"alert alert-danger text-center text-danger\\\" *ngIf=\\\"_errorMessage\\\">\\r\\n                        {{_errorMessage}}\\r\\n                    </div>\\r\\n                </article>\\r\\n                </div> <!-- card.// -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">E-mail inválido!</h4>\\r\\n                <h6 class=\\\"card-title mb-4 mt-1 text-center\\\">Verifique seu e-mail e tente novamente.</h6>\\r\\n                <button type=\\\"button\\\" routerLink=\\\"/recuperar-senha\\\" class=\\\"btn btn-danger btn-block\\\">Voltar</button>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">E-mail enviado com sucesso!</h4>\\r\\n                <h6 class=\\\"card-title mb-4 mt-1 text-center\\\">Acesse seu e-mail e cadastre sua senha novamente.</h6>\\r\\n                <button type=\\\"button\\\" routerLink=\\\"/login\\\" class=\\\"btn btn-rainti btn-block\\\">Voltar</button>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"col-md-6 mx-auto\\\">\\r\\n        <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n        <div class=\\\"card shadow\\\">\\r\\n            <article class=\\\"card-body\\\">\\r\\n                <h4 class=\\\"card-title mb-4 mt-1 text-center\\\">Esqueceu sua senha?</h4>\\r\\n                <form>                        \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"recoverPasswordData.email\\\" placeHolder=\\\"Digite seu e-mail ou usuário\\\" name=\\\"email\\\" class=\\\"form-control rounded-0\\\" required>\\r\\n                    </div> <!-- form-group// -->            \\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" (click)=\\\"recoverPassword()\\\" class=\\\"btn btn-rainti btn-block\\\">Resetar senha</button>\\r\\n                    </div>                                                      \\r\\n                </form>\\r\\n            </article>\\r\\n            </div> \\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","export default \"<div class=\\\"py-5\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n            <span class=\\\"anchor\\\" id=\\\"formLogin\\\"></span>\\r\\n            <!-- form card login -->\\r\\n            <div class=\\\"card shadow\\\">\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h4 class=\\\"card-title mb-4 mt-1\\\">Criar nova senha</h4>\\r\\n                    <form  class=\\\"form\\\" #resetForm=\\\"ngForm\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Nome de usuário</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"resetUserData.userName\\\" name=\\\"userName\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"userName.invalid && userName.touched\\\" #userName=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"userName.valid || userName.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"userName.errors && userName.errors.required\\\">\\r\\n                                            nome de usuário obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"uname1\\\">Código de enviado</label>\\r\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"resetUserData.resetCode\\\" name=\\\"resetCode\\\" class=\\\"form-control rounded-0\\\" \\r\\n                            [class.is-invalid]=\\\"resetCode.invalid && resetCode.touched\\\" #resetCode=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"resetCode.valid || resetCode.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"resetCode.errors && resetCode.errors.required\\\">\\r\\n                                            nome de usuário obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Senha</label>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"resetUserData.password\\\" name=\\\"password\\\"  class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"password.invalid && password.touched\\\" #password=\\\"ngModel\\\" required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"password.valid || password.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"password.errors && password.errors.required\\\">\\r\\n                                            senha obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"col-sm-6\\\">\\r\\n                                    <label for=\\\"uname1\\\">Confirme sua senha</label>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"resetUserData.confirmedPassword\\\" name=\\\"confirmedPassword\\\" class=\\\"form-control rounded-0\\\" \\r\\n                                    [class.is-invalid]=\\\"confirmedPassword.invalid && confirmedPassword.touched\\\" #confirmedPassword=\\\"ngModel\\\" \\r\\n                                    appConfirmEqualValidator=\\\"password\\\"required >\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"confirmedPassword.valid || confirmedPassword.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"confirmedPassword.errors && confirmedPassword.errors.required\\\">\\r\\n                                            confirmação de senha obrigatória\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"md-errors-spacer\\\" [hidden]=\\\"confirmedPassword.valid || confirmedPassword.untouched\\\">\\r\\n                                        <small  class=\\\"text-danger\\\"*ngIf=\\\"confirmedPassword.errors && confirmedPassword.errors?.notEqual\\\">\\r\\n                                            confirmação de senha incorreta\\r\\n                                        </small>\\r\\n                                    </div>\\r\\n                                </div>  \\r\\n                            </div>                            \\r\\n                        </div>                                          \\r\\n                        <button [disabled]=\\\"resetForm.form.invalid\\\" type=\\\"submit\\\" (click)=\\\"resetUser()\\\" class=\\\"btn btn-rainti btn-block\\\">Confirmar</button>\\r\\n                    </form>\\r\\n                  </div>\\r\\n            </div>\\r\\n            <!-- /form card login -->\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n    \\r\\n\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './system-access/login/login.component';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { DetranMainComponent } from './entities/detran/detran-main/detran-main.component';\r\nimport { RegistrarComponent } from './entities/registrar/registrar.component'; \r\nimport { HomeComponent } from './home/home.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { PasswordRecoverComponent } from './system-access/password-recover/password-recover.component';\r\nimport { DetranDetailComponent } from './entities/detran/detran-detail/detran-detail.component';\r\nimport { DetranContactsComponent } from './entities/detran/detran-contacts/detran-contacts.component';\r\nimport { PasswordRecoverSuccessComponent } from './system-access/password-recover-success/password-recover-success.component';\r\nimport { PasswordRecoverFailedComponent } from './system-access/password-recover-failed/password-recover-failed.component';\r\nimport { PasswordResetComponent } from './system-access/password-reset/password-reset.component';\r\nimport { DetranAddComponent } from './entities/detran/detran-add/detran-add.component';\r\nimport { DetranContactAddComponent } from './entities/detran/detran-contact-add/detran-contact-add.component';\r\nimport { CreditorMainComponent } from './entities/creditor/creditor-main/creditor-main.component';\r\nimport { CreditorDetailComponent } from './entities/creditor/creditor-detail/creditor-detail.component';\r\nimport { CreditorAddComponent } from './entities/creditor/creditor-add/creditor-add.component';\r\nimport { CreditorContactsComponent } from './entities/creditor/creditor-contacts/creditor-contacts.component';\r\nimport { CreditorContactDetailComponent } from './entities/creditor/creditor-contact-detail/creditor-contact-detail.component';\r\nimport { CreditorContactAddComponent } from './entities/creditor/creditor-contact-add/creditor-contact-add.component';\r\nimport { CreditorGroupMainComponent } from './entities/creditor-group/creditor-group-main/creditor-group-main.component';\r\nimport { CreditorGroupDetailComponent } from './entities/creditor-group/creditor-group-detail/creditor-group-detail.component';\r\nimport { CreditorGroupAddComponent } from './entities/creditor-group/creditor-group-add/creditor-group-add.component';\r\nimport { CreditorGroupContactsComponent } from './entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component';\r\nimport { CreditorGroupContactDetailComponent } from './entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component';\r\nimport { CreditorGroupContactAddComponent } from './entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component';\r\nimport { DetranContactDetailComponent } from './entities/detran/detran-contact-detail/detran-contact-detail.component';\r\nimport { UserAddComponent } from './registers/user/user-add/user-add.component';\r\nimport { UserMainComponent } from './registers/user/user-main/user-main.component';\r\nimport { GroupAddComponent } from './registers/groups/group-add/group-add.component';\r\nimport { GroupMainComponent } from './registers/groups/group-main/group-main.component';\r\nimport { ContractMainComponent } from './contract/contract-main/contract-main.component';\r\nimport { ContractAddComponent } from './contract/contract-add/contract-add.component';\r\nimport { AuditHistoryComponent } from './reports/audit-history/audit-history.component';\r\nimport { TransactionBillingComponent } from './reports/transaction-billing/transaction-billing.component';\r\nimport { FinancialTransactionComponent } from './reports/financial-transaction/financial-transaction.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'user-add',\r\n    component: UserAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'user-main',\r\n    component: UserMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n  path: 'group-main',\r\n  component: GroupMainComponent,\r\n  canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'group-add',\r\n    component: GroupAddComponent,\r\n    canActivate: [AuthGuard]\r\n    },\r\n\r\n  {\r\n    path: 'recuperar-senha',\r\n    component: PasswordRecoverComponent,\r\n  },\r\n  {\r\n    path: 'recuperar-senha-enviado',\r\n    component: PasswordRecoverSuccessComponent,\r\n  },\r\n  {\r\n    path: 'recuperar-senha-falha',\r\n    component: PasswordRecoverFailedComponent\r\n  },\r\n  {\r\n    path: 'recuperar-senha-reset',\r\n    component: PasswordResetComponent\r\n  },\r\n  {\r\n    path: 'detran',\r\n    component: DetranMainComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {        \r\n    path: 'detran-detalhe/:id',\r\n    component: DetranDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-contatos/:id',\r\n    component: DetranContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar',\r\n    component: DetranAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar-contato',\r\n    component: DetranContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credora',\r\n    component: CreditorMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-detalhe/:id',\r\n    component: CreditorDetailComponent,\r\n    canActivate : [AuthGuard],\r\n  },\r\n  {\r\n    path: 'detran-detalhe-contato/:id',\r\n    component: DetranContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  \r\n  {\r\n    path: 'detran-adicionar',\r\n    component: DetranAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-contatos/:id',\r\n    component: CreditorContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-detalhe-contato/:id',\r\n    component: CreditorContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-adicionar',\r\n    component: CreditorAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'credor-adicionar-contato/:id',\r\n    component: CreditorContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestora',\r\n    component: CreditorGroupMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-detalhe/:id',\r\n    component: CreditorGroupDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-contatos/:id',\r\n    component: CreditorGroupContactsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-detalhe-contato/:id',\r\n    component: CreditorGroupContactDetailComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-adicionar',\r\n    component: CreditorGroupAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'gestor-adicionar-contato/:id',\r\n    component: CreditorGroupContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'detran-adicionar-contato/:id',\r\n    component: DetranContactAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'registradora',\r\n    component: RegistrarComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'principal',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'ajuda',\r\n    component: HelpComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'contratos',\r\n    component: ContractMainComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  \r\n  {\r\n    path: 'registrar-contrato',\r\n    component: ContractAddComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'historico-transacao',\r\n    component: AuditHistoryComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'bilhetagem-transacoes',\r\n    component: TransactionBillingComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n  {\r\n    path: 'transacoes-financeiras',\r\n    component: FinancialTransactionComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EntitiesService } from './entities/entities-services/entities.service';\r\nimport { AuthService } from './system-access/system-access-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent    implements OnInit {\r\n    title = 'SRC - Sistema de Registro de Contrato';\r\n\r\n    entityTypes: Array<any> = []    \r\n\r\n    detranAllowed = ''\r\n\r\n    constructor(private _entitiesService: EntitiesService, public _authService: AuthService) { \r\n        \r\n    }\r\n  \r\n    ngOnInit() {\r\n      this._entitiesService.getEntitiesTypes()\r\n      .subscribe(      \r\n        res => this.entityTypes = res,\r\n        err => console.log(err)\r\n      ) \r\n    }     \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core'; \r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { UserIdleModule } from 'angular-user-idle';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './system-access/login/login.component';\r\n\r\nimport { AuthService } from './system-access/system-access-services/auth.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport { TokenInterceptorService } from './token-interceptor.service';\r\nimport { FilterPipe } from './filter-name.pipe';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegistrarComponent } from './entities/registrar/registrar.component';\r\nimport { DetranContactsComponent } from './entities/detran/detran-contacts/detran-contacts.component';\r\nimport { PasswordRecoverComponent } from './system-access/password-recover/password-recover.component';\r\nimport { DetranDetailComponent } from './entities/detran/detran-detail/detran-detail.component';\r\nimport { PasswordRecoverSuccessComponent } from './system-access/password-recover-success/password-recover-success.component';\r\nimport { PasswordRecoverFailedComponent } from './system-access/password-recover-failed/password-recover-failed.component';\r\nimport { PasswordResetComponent } from './system-access/password-reset/password-reset.component';\r\nimport { ConfirmEqualValidator } from '../custom/confirm-equal-validator';\r\nimport { DetranAddComponent } from './entities/detran/detran-add/detran-add.component';\r\nimport { DetranContactAddComponent } from './entities/detran/detran-contact-add/detran-contact-add.component';\r\nimport { DetranMainComponent } from './entities/detran/detran-main/detran-main.component';\r\n\r\nimport { CreditorMainComponent } from './entities/creditor/creditor-main/creditor-main.component';\r\nimport { CreditorDetailComponent } from './entities/creditor/creditor-detail/creditor-detail.component';\r\nimport { CreditorAddComponent } from './entities/creditor/creditor-add/creditor-add.component';\r\nimport { CreditorContactsComponent } from './entities/creditor/creditor-contacts/creditor-contacts.component';\r\nimport { CreditorContactAddComponent } from './entities/creditor/creditor-contact-add/creditor-contact-add.component';\r\nimport { CreditorContactDetailComponent } from './entities/creditor/creditor-contact-detail/creditor-contact-detail.component';\r\n\r\nimport { CreditorGroupMainComponent } from './entities/creditor-group/creditor-group-main/creditor-group-main.component';\r\nimport { CreditorGroupDetailComponent } from './entities/creditor-group/creditor-group-detail/creditor-group-detail.component';\r\nimport { CreditorGroupAddComponent } from './entities/creditor-group/creditor-group-add/creditor-group-add.component';\r\nimport { CreditorGroupContactsComponent } from './entities/creditor-group/creditor-group-contacts/creditor-group-contacts.component';\r\nimport { CreditorGroupContactAddComponent } from './entities/creditor-group/creditor-group-contact-add/creditor-group-contact-add.component';\r\nimport { CreditorGroupContactDetailComponent } from './entities/creditor-group/creditor-group-contact-detail/creditor-group-contact-detail.component';\r\nimport { DetranContactDetailComponent } from './entities/detran/detran-contact-detail/detran-contact-detail.component';\r\nimport { GroupAddComponent } from './registers/groups/group-add/group-add.component';\r\nimport { GroupMainComponent } from './registers/groups/group-main/group-main.component';\r\nimport { UserAddComponent } from './registers/user/user-add/user-add.component';\r\nimport { UserMainComponent } from './registers/user/user-main/user-main.component';\r\nimport { ContractAddComponent } from './contract/contract-add/contract-add.component';\r\nimport { ContractMainComponent } from './contract/contract-main/contract-main.component';\r\nimport { CpfCnpjModule } from 'ng2-cpf-cnpj';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport { AuditHistoryComponent } from './reports/audit-history/audit-history.component';\r\nimport { FinancialTransactionComponent } from './reports/financial-transaction/financial-transaction.component';\r\nimport { TransactionBillingComponent } from './reports/transaction-billing/transaction-billing.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    FilterPipe,\r\n    HelpComponent,\r\n    HomeComponent,\r\n    RegistrarComponent,\r\n    DetranContactsComponent,\r\n    PasswordRecoverComponent,\r\n    DetranDetailComponent,\r\n    PasswordRecoverSuccessComponent,\r\n    PasswordRecoverFailedComponent,\r\n    PasswordResetComponent,\r\n    ConfirmEqualValidator,\r\n    DetranAddComponent,\r\n    DetranContactAddComponent,\r\n    DetranMainComponent,\r\n\r\n    CreditorMainComponent,\r\n    CreditorAddComponent,\r\n    CreditorDetailComponent,\r\n    CreditorContactsComponent,\r\n    CreditorContactAddComponent,\r\n    CreditorContactDetailComponent,\r\n\r\n    CreditorGroupMainComponent,\r\n    CreditorGroupAddComponent,\r\n    CreditorGroupDetailComponent,\r\n    CreditorGroupContactsComponent,\r\n    CreditorGroupContactAddComponent,\r\n    CreditorGroupContactDetailComponent,\r\n    DetranContactDetailComponent,\r\n    GroupAddComponent,\r\n    GroupMainComponent,\r\n    UserAddComponent,\r\n    UserMainComponent,\r\n\r\n    ContractAddComponent,\r\n    ContractMainComponent,\r\n\r\n    AuditHistoryComponent,\r\n    FinancialTransactionComponent,\r\n    TransactionBillingComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    UserIdleModule,\r\n    CpfCnpjModule,\r\n    CurrencyMaskModule,\r\n\r\n  ],\r\n  providers: [AuthService, AuthGuard, \r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptorService, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './system-access/system-access-services/auth.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n      const currentUser = this._auth.loggedIn()\r\n      if(currentUser){\r\n       \r\n        console.log(route.component.toString().split(' ')[1].split(' ')[0])\r\n        \r\n        return true \r\n      }else{\r\n        this._router.navigate(['./login'])\r\n        return false\r\n      }\r\n    }\r\n\r\n  \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0L2NvbnRyYWN0LWFkZC9jb250cmFjdC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contract-add',\r\n  templateUrl: './contract-add.component.html',\r\n  styleUrls: ['./contract-add.component.css']\r\n})\r\nexport class ContractAddComponent implements OnInit {\r\n  public _activeOCRN ='registro';\r\n  public _aditivo = false\r\n  public _registro = true\r\n  public _installmentValue = 0\r\n  public cpfcnpjActiveConsumer ='cpf';\r\n  public cpfcnpjActive ='cpf';\r\n  contractData = {\r\n\r\n    // Credor\r\n    creditor: '',\r\n\r\n    // Detran\r\n    detran: '',\r\n\r\n    // Comprador\r\n    buyerName: '',\r\n    buyerEmail: '',\r\n    buyertype: '',\r\n    buyerCpf: '',\r\n    buyerCnpj: '',\r\n    buyerDddModel: '',\r\n    buyerDddMobile: '',\r\n    buyerPhone: '',\r\n    buyerMobilePhone: '',\r\n    buyerZipCode: '',\r\n    buyerNeighborhood: '',\r\n    buyerAddress: '',\r\n    buyerHouseNumber: '',\r\n    buyerState: '',\r\n    buyerDistrict: '',\r\n    buyerComplement: '',\r\n    \r\n    // Garantidor\r\n    responsible: '',\r\n    responsibleType: '',\r\n    responsibleCpf: '',\r\n    responsibleCnpj: '',\r\n\r\n    // Veículo\r\n    chassi: '',\r\n    chassiConfirmation: '',\r\n    remarkedChassi: '',\r\n    plate: '',\r\n    plateUf: '',\r\n    renavam: '',\r\n    gravame: '',\r\n    specie: '',\r\n    fabriactionYear: '',\r\n    modelYear: '',\r\n    brand: '',\r\n    model: '',\r\n    color: '',\r\n\r\n    // Contrato\r\n    originalCRN:'',\r\n    physicalContractNumber: '',\r\n    contractDate:'',\r\n    alienType:'',\r\n    restrictionNumber:'',\r\n    totalDebitAmount: '',\r\n    numberOfInstallments: '',\r\n    contractRegistrationAmount: '',\r\n    iofAmount: '',\r\n    interestRatePerMonth:'',\r\n    interestRate: '',\r\n    dailyInterestRate:'',\r\n    contractIndex: '',\r\n    paymentStartDate: '',\r\n    creditReleaseDate:'',\r\n    creditReleaseState:'',\r\n    creditReleaseCity: '',\r\n    consortiumGroupNumber: '',\r\n    consortiumQuotaNumber: '',\r\n  }\r\n\r\n  _creditor: Array<any>=[];\r\n  _detrans: Array<any>=[];\r\n  _financingType: Array<any>=[];\r\n  _contractForm: Array<any>=[];\r\n  _interestRate: Array<any>=[];\r\n  _dailyInterestRate: Array<any>=[];\r\n  _remarkedChassi: Array<any>=[];\r\n  _plateUf:Array<any>=[];\r\n  _brand:Array<any>=[];\r\n  _model:Array<any>=[];\r\n  \r\n  _paymentEndDate: any\r\n  _creditReleaseState : Array<any> = [] \r\n  //creditReleaseStateHasError = true\r\n  \r\n\r\n  activeTab = \"nav-contrato\"\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // validateCreditReleaseState(value) {\r\n  //   if (value === 'default') {\r\n  //     this.creditReleaseStateHasError = true;\r\n  //   } else {\r\n  //     this.creditReleaseStateHasError = false;\r\n  //   }\r\n\r\n  // }\r\n\r\n  ngOnInit() {\r\n\r\n   \r\n  }\r\n\r\n  markAsActive(cpfcnpjActive: string){\r\n    this.cpfcnpjActive = cpfcnpjActive;\r\n\r\n  }\r\n\r\n  getinstallmentValue(e) {\r\n    this._installmentValue = parseFloat(this.contractData.totalDebitAmount) / parseInt(this.contractData.numberOfInstallments)\r\n  }\r\n\r\n  nextTab(activeTab) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  validateTopic(){}\r\n\r\n  markAsActiveConsumer(cpfcnpjActiveConsumer: string){\r\n    this.cpfcnpjActiveConsumer = cpfcnpjActiveConsumer;\r\n  }\r\n\r\n  markAsActiveOCRN(activeOCRN: string){\r\n  this._aditivo = false\r\n  this._registro = true\r\n  if  (activeOCRN == 'aditivo'){\r\n    } else {\r\n      this._aditivo = true\r\n      this._registro = false\r\n    }\r\n    this._activeOCRN = activeOCRN;  \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0L2NvbnRyYWN0LW1haW4vY29udHJhY3QtbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contract-main',\r\n  templateUrl: './contract-main.component.html',\r\n  styleUrls: ['./contract-main.component.css']\r\n})\r\nexport class ContractMainComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWFkZC9jcmVkaXRvci1ncm91cC1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorGroupAddService } from '../creditor-group-services/creditor-group-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-add',\r\n  templateUrl: './creditor-group-add.component.html',\r\n  styleUrls: ['./creditor-group-add.component.css']\r\n})\r\nexport class CreditorGroupAddComponent implements OnInit {\r\n  creditorGroupData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddnodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,  \r\n  }\r\n  _errorMessage = ''\r\n  _states : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  activeTab = \"nav-home\"\r\n  \r\n  constructor(private _creditorGroupAddService: CreditorGroupAddService,\r\n    private _router: Router,\r\n    private _location: Location) { }\r\n\r\n    \r\n  validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n\r\n  }\r\n  ngOnInit() {\r\n    this._creditorGroupAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n  }\r\n\r\n  nextTab(activeTab) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  createCreditorGroup(){\r\n    this._creditorGroupAddService.createCreditorGroup(this.creditorGroupData)\r\n      .subscribe(\r\n        res => {\r\n          this._router.navigate(['/gestora'])\r\n        },\r\n        error => {console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )  \r\n    \r\n  }\r\n  backToCreditorGroup(){\r\n    this._location.back()\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtYWRkL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupAddContactService } from '../creditor-group-services/creditor-group-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contact-add',\r\n  templateUrl: './creditor-group-contact-add.component.html',\r\n  styleUrls: ['./creditor-group-contact-add.component.css']\r\n})\r\nexport class CreditorGroupContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorGroupAddContact: CreditorGroupAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n \r\n  addCreditorGroupContact(){ \r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {   \r\n        this._creditorGroupAddContact.addCreditorGroupContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToCreditorGroupContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtZGV0YWlsL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupContactDetailService } from '../creditor-group-services/creditor-group-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contact-detail',\r\n  templateUrl: './creditor-group-contact-detail.component.html',\r\n  styleUrls: ['./creditor-group-contact-detail.component.css']\r\n})\r\nexport class CreditorGroupContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorGroupContactDetail: CreditorGroupContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.getCreditorGroupContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateCreditorGroupContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.updateCreditorGroupContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteCreditorGroupContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactDetail.deleteCreditorGroupContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToCreditorGroupContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToCreditorGroupContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3RzL2NyZWRpdG9yLWdyb3VwLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreditorGroupContactsService } from '../creditor-group-services/creditor-group-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-contacts',\r\n  templateUrl: './creditor-group-contacts.component.html',\r\n  styleUrls: ['./creditor-group-contacts.component.css']\r\n})\r\nexport class CreditorGroupContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  creditorGroupContacts: Array<any> = []\r\n\r\n  constructor(private _creditorGroupContactsService: CreditorGroupContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupContactsService.getCreditorGroupContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.creditorGroupContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addCreditorGroupContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/gestor-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLWRldGFpbC9jcmVkaXRvci1ncm91cC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorGroupDetailService } from '../creditor-group-services/creditor-group-detail.service';\r\nimport { CreditorGroupAddService } from '../creditor-group-services/creditor-group-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-detail',\r\n  templateUrl: './creditor-group-detail.component.html',\r\n  styleUrls: ['./creditor-group-detail.component.css']\r\n})\r\nexport class CreditorGroupDetailComponent implements OnInit {\r\n\r\n  creditorGroupData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n  }\r\n\r\n  creditorGroupDataOld = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n  }\r\n\r\n  _registerUpdated = ''\r\n  _errorMessage = ''\r\n  _states : Array<any> = []\r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _creditorGroupDetail: CreditorGroupDetailService,\r\n    private _creditorGroupAddService: CreditorGroupAddService,\r\n    private _location: Location ) { }\r\n\r\n  validateTopic(value) {\r\n    if (value === 'default') {\r\n      this.topicHasError = true;\r\n    } else {\r\n      this.topicHasError = false;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this._creditorGroupAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupDetail.getCreditorGroup(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.creditorGroupData = res[0]\r\n            this.creditorGroupDataOld = res[0]          \r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  creditorGroupDataSender = {\r\n    old : this.creditorGroupDataOld,\r\n    new : this.creditorGroupData,\r\n  }\r\n\r\n  updateCreditorGroup(){\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorGroupDetail.updateCreditorGroup(this.creditorGroupData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Gestora atualizada com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n\r\n  }\r\n\r\n  deleteCreditorGroup(){\r\n     this.route.paramMap\r\n     .subscribe(\r\n       params => {\r\n         this._creditorGroupDetail.deleteCreditorGroup(this.creditorGroupData, params.get('id'))\r\n         .subscribe(\r\n           res => {\r\n             console.log(res)\r\n             this.backToCreditorGroup()\r\n           },\r\n          err => {\r\n             console.log(err)\r\n           }\r\n         )   \r\n       }  \r\n     );\r\n   }\r\n\r\n  backToCreditorGroup(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yLWdyb3VwL2NyZWRpdG9yLWdyb3VwLW1haW4vY3JlZGl0b3ItZ3JvdXAtbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorGroupMainService } from '../creditor-group-services/creditor-group-main.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-group-',\r\n  templateUrl: './creditor-group-main.component.html',\r\n  styleUrls: ['./creditor-group-main.component.css']\r\n})\r\nexport class CreditorGroupMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _creditorGroupMainService: CreditorGroupMainService,\r\n              private _router: Router){}   \r\n\r\n  ngOnInit() {\r\n    this._creditorGroupMainService.getCreditorsGroup()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n  addCreditorGroup(){\r\n      this._router.navigate(['/gestor-adicionar'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addCreditorGroupContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/add-creditor-group-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addCreditorGroupContact(id, user){  \r\n    return this.http.post<any>(this._addCreditorGroupContactUrl+id,user)\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupAddService {\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createCreditorGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/create-creditor-group\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  createCreditorGroup(user){\r\n    return this.http.post<any>(this._createCreditorGroupUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorGroupContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/contact/\"\r\n  private _creditorGroupUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/update-contact/\"\r\n  private _creditorGroupDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorGroupContactById(id){\r\n    return this.http.get<any>(this._creditorGroupContactByIdUrl+id)\r\n  }\r\n\r\n  updateCreditorGroupContactById(id, user){\r\n    return this.http.put<any>(this._creditorGroupUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteCreditorGroupContactById(id){\r\n    return this.http.delete<any>(this._creditorGroupDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorGroupContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditor-group-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorGroupContacts(id){       \r\n    return this.http.get<any>(this._creditorGroupContactsUrl+id)\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditors-group/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/update-creditor-group/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/delete-creditor-group/\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditorGroup(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n   updateCreditorGroup(user, id){\r\n    return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n   }\r\n\r\n   deleteCreditorGroup(user, id){\r\n    return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorGroupMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor-group/creditors-group\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditorsGroup(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n  }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWFkZC9jcmVkaXRvci1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorAddService } from '../creditor-services/creditor-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-creditor-add',\r\n  templateUrl: './creditor-add.component.html',\r\n  styleUrls: ['./creditor-add.component.css']\r\n})\r\nexport class CreditorAddComponent implements OnInit {\r\n  creditorData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddnodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,  \r\n    entities: []\r\n  }\r\n\r\n  _errorMessage = ''\r\n  _states : Array<any> = [] \r\n  _detrans : Array<any> = []\r\n  _creditorsgroup : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  entities : Array<any> = [] \r\n  activeTab = \"nav-home\"\r\n\r\n  constructor(private _creditorAddService: CreditorAddService,\r\n    private _router: Router,\r\n    private _location: Location) { }\r\n\r\n\r\n  validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n\r\n  }\r\n  ngOnInit() {\r\n    this._creditorAddService.getStates()\r\n        .subscribe(\r\n          res => {\r\n            this._states = res\r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error }\r\n          )\r\n      \r\n    this._creditorAddService.getDetrans()\r\n        .subscribe(\r\n          res => {\r\n              console.log(res)\r\n              this._detrans = res\r\n            },\r\n            error => {console.log(error)\r\n                      this._errorMessage = error.error \r\n            }\r\n        )   \r\n                    \r\n    this._creditorAddService.getCreditorsGroup()\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._creditorsgroup = res;   \r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error\r\n            }\r\n        )   \r\n     \r\n  }\r\n\r\n  nextTab(activeTab) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  checkAllOptions() {\r\n    if (this._detrans.every(val => val.checked == true))\r\n       this._detrans.forEach(val => { val.checked = false });\r\n    else\r\n      this._detrans.forEach(val => { val.checked = true });\r\n  }\r\n\r\n  uncheckAllOptions() {\r\n    this._creditorsgroup.forEach(val => { val.checked = false });\r\n  }\r\n\r\n  checkDetransChange(e) {\r\n    this._detrans.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  checkCreditorsGroupChange(e) {\r\n    this._creditorsgroup.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      } else {\r\n        val.checked = !e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  entitiesCheck() {\r\n    this.entities = []\r\n    this._detrans.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this._creditorsgroup.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this.creditorData.entities = this.entities;\r\n  }\r\n\r\n  createCreditor(){\r\n    this.entitiesCheck()\r\n    this._creditorAddService.createCreditor(this.creditorData)\r\n       .subscribe(\r\n         res => {\r\n           this._router.navigate(['/credora'])\r\n         },\r\n         error => {console.log(error)\r\n                   this._errorMessage = error.error }\r\n         )  \r\n    \r\n  }\r\n  backToCreditor(){\r\n    this._location.back()\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3QtYWRkL2NyZWRpdG9yLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorAddContactService } from '../creditor-services/creditor-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-creditor-contact-add',\r\n  templateUrl: './creditor-contact-add.component.html',\r\n  styleUrls: ['./creditor-contact-add.component.css']\r\n})\r\nexport class CreditorContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorAddContact: CreditorAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  addCreditorContact(){\r\n    \r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {   \r\n        this._creditorAddContact.addCreditorContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToCreditorContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3QtZGV0YWlsL2NyZWRpdG9yLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorContactDetailService } from '../creditor-services/creditor-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor-contact-detail',\r\n  templateUrl: './creditor-contact-detail.component.html',\r\n  styleUrls: ['./creditor-contact-detail.component.css']\r\n})\r\nexport class CreditorContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _creditorContactDetail: CreditorContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.getCreditorContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateCreditorContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.updateCreditorContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteCreditorContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactDetail.deleteCreditorContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToCreditorContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToCreditorContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWNvbnRhY3RzL2NyZWRpdG9yLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { CreditorContactsService } from '../creditor-services/creditor-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-creditor-contacts',\r\n  templateUrl: './creditor-contacts.component.html',\r\n  styleUrls: ['./creditor-contacts.component.css']\r\n})\r\nexport class CreditorContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  creditorContacts: Array<any> = []\r\n\r\n  constructor(private _creditorContactsService: CreditorContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorContactsService.getCreditorContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.creditorContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addCreditorContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/credor-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLWRldGFpbC9jcmVkaXRvci1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CreditorDetailService } from '../creditor-services/creditor-detail.service';\r\nimport { Location } from '@angular/common';\r\nimport { R3TargetBinder } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-creditor-detail',\r\n  templateUrl: './creditor-detail.component.html',\r\n  styleUrls: ['./creditor-detail.component.css']\r\n})\r\nexport class CreditorDetailComponent implements OnInit {\r\n\r\n  creditorData = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n    entities: []\r\n  }\r\n\r\n  creditorDataOld = {\r\n    businessname: '',\r\n    fantasyname: '',\r\n    cnpj: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    address: '',\r\n    streetnumber: '',\r\n    addresscomplement: '',\r\n    district: '',\r\n    county: '',\r\n    topic: '',\r\n    zipcode: '',\r\n    contract: '',\r\n    startdate: '',\r\n    enddate: '',\r\n    status: true,\r\n    entities: []\r\n  }\r\n\r\n  _registerUpdated = ''\r\n  _errorMessage = ''\r\n  _states : Array<any> = []\r\n  _detrans : Array<any> = []\r\n  _creditorsgroup : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  entities : Array<any> = [] \r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _creditorDetail: CreditorDetailService,\r\n    private _location: Location ) { }\r\n\r\n  validateTopic(value) {\r\n    if (value === 'default') {\r\n      this.topicHasError = true;\r\n    } else {\r\n      this.topicHasError = false;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this._creditorDetail.getStates()\r\n    .subscribe(\r\n      res => {\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getCreditor(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.creditorData = res[0]\r\n            this.creditorDataOld = res[0]          \r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n      }\r\n    )\r\n\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getDetrans(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n              console.log(res)\r\n              this._detrans = res\r\n            },\r\n            error => {console.log(error)\r\n                      this._errorMessage = error.error \r\n            }\r\n        )   \r\n      }\r\n    )\r\n    \r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.getCreditorsGroup(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._creditorsgroup = res;   \r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error\r\n            }\r\n        )   \r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  creditorDataSender = {\r\n    old : this.creditorDataOld,\r\n    new : this.creditorData,\r\n  }\r\n\r\n  checkAllOptions() {\r\n    if (this._detrans.every(val => val.checked == true))\r\n       this._detrans.forEach(val => { val.checked = false });\r\n    else\r\n      this._detrans.forEach(val => { val.checked = true });\r\n  }\r\n\r\n  uncheckAllOptions() {\r\n    this._creditorsgroup.forEach(val => { val.checked = false });\r\n  }\r\n\r\n  checkDetransChange(e) {\r\n    this._detrans.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  checkCreditorsGroupChange(e) {\r\n    this._creditorsgroup.forEach(val => { \r\n      if (e.target.id == val.id) {\r\n        val.checked = e.target.checked;\r\n      } else {\r\n        val.checked = !e.target.checked;\r\n      }; \r\n    });\r\n  }\r\n\r\n  entitiesCheck() {\r\n    this.entities = []\r\n    this._detrans.forEach(val => {      \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this._creditorsgroup.forEach(val => { \r\n      if (val.checked) {\r\n        this.entities.push(val.id)\r\n      }\r\n    });\r\n    this.creditorData.entities = this.entities;\r\n  }\r\n\r\n  updateCreditor(){\r\n    this.entitiesCheck()\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._creditorDetail.updateCreditor(this.creditorData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Credora atualizada com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n      }        \r\n    );\r\n  }\r\n\r\n  deleteCreditor(){\r\n     this.route.paramMap\r\n     .subscribe(\r\n       params => {\r\n         this._creditorDetail.deleteCreditor(this.creditorData, params.get('id'))\r\n         .subscribe(\r\n           res => {\r\n             console.log(res)\r\n             this.backToCreditor()\r\n           },\r\n          err => {\r\n             console.log(err)\r\n           }\r\n         )   \r\n       }  \r\n     );\r\n   }\r\n\r\n  backToCreditor(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2NyZWRpdG9yL2NyZWRpdG9yLW1haW4vY3JlZGl0b3ItbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CreditorMainService } from '../creditor-services/creditor-main.service';\r\n\r\n@Component({\r\n  selector: 'app-creditor',\r\n  templateUrl: './creditor-main.component.html',\r\n  styleUrls: ['./creditor-main.component.css']\r\n})\r\nexport class CreditorMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText= ''\r\n  businessname= ''\r\n\r\n  constructor(private _creditorMainService: CreditorMainService,\r\n              private _router: Router){}   \r\n\r\n  ngOnInit() {\r\n    this._creditorMainService.getCreditors()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n addCreditor(){\r\n    this._router.navigate(['/credor-adicionar'])\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addCreditorContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/add-creditor-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addCreditorContact(id, user){  \r\n    return this.http.post<any>(this._addCreditorContactUrl+id,user)\r\n\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorAddService {\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createCreditorUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/create-creditor\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n  private _detransUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-detrans\"\r\n  private _creditorsGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-creditors-group\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n  \r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n  getDetrans(){\r\n    return this.http.get<any>(this._detransUrl)\r\n  }\r\n\r\n  getCreditorsGroup(){\r\n  return this.http.get<any>(this._creditorsGroupUrl)\r\n  }\r\n\r\n  createCreditor(user){\r\n    return this.http.post<any>(this._createCreditorUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/contact/\"\r\n  private _creditorUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/update-contact/\"\r\n  private _creditorDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorContactById(id){\r\n    return this.http.get<any>(this._creditorContactByIdUrl+id)\r\n  }\r\n\r\n  updateCreditorContactById(id, user){\r\n    return this.http.put<any>(this._creditorUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteCreditorContactById(id){\r\n    return this.http.delete<any>(this._creditorDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _creditorContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditor-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCreditorContacts(id){       \r\n    return this.http.get<any>(this._creditorContactsUrl+id)\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/states\"\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditors/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/update-creditor/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/delete-creditor/\"\r\n  private _detransUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-detrans/\"\r\n  private _creditorsGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/get-creditors-group/\"\r\n  \r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  getCreditor(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n  getDetrans(id){\r\n    return this.http.get<any>(this._detransUrl+id)\r\n  }\r\n\r\n  getCreditorsGroup(id){\r\n    return this.http.get<any>(this._creditorsGroupUrl+id)\r\n  }\r\n\r\n  updateCreditor(user, id){\r\n  return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n  }\r\n\r\n  deleteCreditor(user, id){\r\n  return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CreditorMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/creditor/creditors\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getCreditors(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n   \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tYWRkL2RldHJhbi1hZGQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DetranAddService } from '../detran-services/detran-add.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-detran-add',\r\n  templateUrl: './detran-add.component.html',\r\n  styleUrls: ['./detran-add.component.css']\r\n})\r\nexport class DetranAddComponent implements OnInit {  \r\n  \r\n \r\n  userData = {\r\n    userName : '',\r\n    cnpj : '',\r\n    phone : '',\r\n    email : '',\r\n    topic : '',\r\n    dddModel : ''\r\n  }\r\n  _errorMessage = ''\r\n  _createdMessage = ''\r\n  _states : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  constructor(private _detranAddService: DetranAddService,\r\n    private _router: Router,\r\n    private _location: Location) {       \r\n      \r\n    }\r\n\r\n    validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n    }\r\n\r\n  ngOnInit() {\r\n    this._detranAddService.getStates()\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        this._states = res\r\n      },\r\n      error => {console.log(error)\r\n                this._errorMessage = error.error }\r\n      )\r\n  }\r\n\r\n  createDetran(){\r\n    this._detranAddService.createDetran(this.userData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this.ngOnInit()\r\n          this._createdMessage = 'Detran '+this.userData.userName+' cadastrado com sucesso!'\r\n          // Reset form to add another Detran\r\n          //this.userData = {userName : '', cnpj : '', phone : '', email : '', topic : '', dddModel : '' } \r\n        },\r\n        error => {console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )      \r\n  }\r\n\r\n  backToDetran(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdC1hZGQvZGV0cmFuLWNvbnRhY3QtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranAddContactService } from '../detran-services/detran-add-contact.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-detran-contact-add',\r\n  templateUrl: './detran-contact-add.component.html',\r\n  styleUrls: ['./detran-contact-add.component.css']\r\n})\r\nexport class DetranContactAddComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddModel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalInfo: '',\r\n  }\r\n  _createdMessage =''\r\n  _errorMessage = ''\r\n\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _detranAddContact: DetranAddContactService ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  addDetranContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranAddContact.addDetranContact(params.get('id'), this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._createdMessage = 'Contato '+this.userData.name+' adicionado com sucesso!'\r\n            \r\n            // Reset form to add another contact\r\n            //this.userData = {name: '',dddModel: '',phone: '',email: '',additionalInfo: '',}               \r\n          },\r\n          error => {console.log(error)\r\n            this._errorMessage = error.error \r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToDetranContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdC1kZXRhaWwvZGV0cmFuLWNvbnRhY3QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranContactDetailService } from '../detran-services/detran-contact-detail.service';\r\n\r\n@Component({\r\n  selector: 'app-detran-contact-detail',\r\n  templateUrl: './detran-contact-detail.component.html',\r\n  styleUrls: ['./detran-contact-detail.component.css']\r\n})\r\nexport class DetranContactDetailComponent implements OnInit {\r\n\r\n  userData = {\r\n    name: '',\r\n    dddmodel: '',\r\n    phone: '',\r\n    email: '',\r\n    additionalinfo: '',\r\n  }\r\n  _updatedMessage = ''\r\n  constructor(private _location: Location,\r\n              private _route: ActivatedRoute,\r\n              private _detranContactDetail: DetranContactDetailService ) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.getDetranContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res[0])\r\n            this.userData = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  updateDetranContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.updateDetranContactById(params.get('id'),this.userData)\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this._updatedMessage = 'Dados de contato alterados com sucesso'\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  deleteDetranContactById(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactDetail.deleteDetranContactById(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToDetranContacts()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n  }\r\n\r\n  backToDetranContacts(){\r\n    this._location.back()\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tY29udGFjdHMvZGV0cmFuLWNvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DetranContactsService } from '../detran-services/detran-contacts.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-detran-contacts',\r\n  templateUrl: './detran-contacts.component.html',\r\n  styleUrls: ['./detran-contacts.component.css']\r\n})\r\nexport class DetranContactsComponent implements OnInit {\r\n\r\n  searchText: ''\r\n  name: ''\r\n  detranContacts: Array<any> = []\r\n\r\n  constructor(private _detranContactsService: DetranContactsService,\r\n    private _route: ActivatedRoute,\r\n    private _router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranContactsService.getDetranContacts(params.get('id'))\r\n          .subscribe(      \r\n            res => this.detranContacts = res,\r\n            err => console.log(err)\r\n          )\r\n      }\r\n    )    \r\n  }\r\n\r\n  addDetranContact(){\r\n    this._route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._router.navigate(['/detran-adicionar-contato/'+params.get('id')])           \r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tZGV0YWlsL2RldHJhbi1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DetranDetailService } from '../detran-services/detran-detail.service';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-detran-detail',\r\n  templateUrl: './detran-detail.component.html',\r\n  styleUrls: ['./detran-detail.component.css']\r\n})\r\nexport class DetranDetailComponent implements OnInit {\r\n\r\n  detranData = {\r\n    name: '',\r\n    cnpj: '',\r\n    state:'',\r\n    phone: '',\r\n    email: '',\r\n    dddModel: '',\r\n  }\r\n\r\n  detranDataOld = {\r\n    name: '',\r\n    cnpj: '',\r\n    state:'',\r\n    phone: '',\r\n    email: '',\r\n    dddModel: '',\r\n  }\r\n\r\n  _registerUpdated = ''\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private _detranDetail: DetranDetailService,\r\n    private _location: Location ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.getDetran(params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this.detranData = res[0]\r\n            this.detranDataOld = res[0]\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  detranDataSender = {\r\n    old : this.detranDataOld,\r\n    new : this.detranData,\r\n  }\r\n\r\n  updateDetran(){\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.updateDetran(this.detranData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            this._registerUpdated = 'Detran atualizado com sucesso.'\r\n            console.log(res)\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }      \r\n    );\r\n\r\n  }\r\n\r\n  deleteDetran(){\r\n    this.route.paramMap\r\n    .subscribe(\r\n      params => {\r\n        this._detranDetail.deleteDetran(this.detranData, params.get('id'))\r\n        .subscribe(\r\n          res => {\r\n            console.log(res)\r\n            this.backToDetran()\r\n          },\r\n          err => {\r\n            console.log(err)\r\n          }\r\n        )   \r\n    }\r\n      \r\n    );\r\n  }\r\n\r\n  backToDetran(){\r\n    this._location.back()\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL2RldHJhbi9kZXRyYW4tbWFpbi9kZXRyYW4tbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DetranMainService } from '../detran-services/detran-main.service';\r\nimport { DetranAddService } from '../detran-services/detran-add.service';\r\n\r\n@Component({\r\n  selector: 'app-detran',\r\n  templateUrl: './detran-main.component.html',\r\n  styleUrls: ['./detran-main.component.css']\r\n})\r\nexport class DetranMainComponent implements OnInit {\r\n\r\n  entities: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _detranService: DetranMainService,\r\n    private _router: Router,\r\n    private _detranAddService: DetranAddService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this._detranService.getDetrans()\r\n    .subscribe(      \r\n      res => this.entities = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n  addDetran(){\r\n    this._detranAddService.getStates()\r\n    .subscribe(      \r\n      res => {\r\n        if(res.length == 0){\r\n          console.log(\"Todos os Detrans já cadastrados\")\r\n        }else{\r\n          this._router.navigate(['/detran-adicionar'])\r\n        }\r\n        \r\n      },\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranAddContactService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _addDetranContactUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/add-detran-contact/\"\r\n\r\n  constructor(private http: HttpClient,) { }\r\n  \r\n  addDetranContact(id, user){\r\n    return this.http.post<any>(this._addDetranContactUrl+id,user)\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createDetranUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/create-detran\"\r\n  private _statesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/states-detran-add\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getStates(){\r\n    return this.http.get<any>(this._statesUrl)\r\n  }\r\n\r\n  createDetran(user){\r\n    return this.http.post<any>(this._createDetranUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranContactDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _detranContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/contact/\"\r\n  private _detranUpdateContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/update-contact/\"\r\n  private _detranDeleteContactByIdUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/delete-contact/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetranContactById(id){\r\n    return this.http.get<any>(this._detranContactByIdUrl+id)\r\n  }\r\n\r\n  updateDetranContactById(id, user){\r\n    return this.http.put<any>(this._detranUpdateContactByIdUrl+id, user)\r\n  }\r\n\r\n  deleteDetranContactById(id){\r\n    return this.http.delete<any>(this._detranDeleteContactByIdUrl+id)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranContactsService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _detranContactsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detran-contacts/\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDetranContacts(id){\r\n    return this.http.get<any>(this._detranContactsUrl+id)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranDetailService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _entitiyUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detrans/\"\r\n  private _entitiyUpdateUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/update-detran/\"\r\n  private _entitiyDeleteUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/delete-detran/\"\r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getDetran(id){\r\n    return this.http.get<any>(this._entitiyUrl+id)\r\n   }\r\n\r\n   updateDetran(user, id){\r\n    return this.http.put<any>(this._entitiyUpdateUrl+id, user)\r\n   }\r\n\r\n   deleteDetran(user, id){\r\n    return this.http.delete<any>(this._entitiyDeleteUrl+id, user)\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DetranMainService {\r\n  \r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/detran/detrans\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getDetrans(){\r\n    return this.http.get<any>(this._entitiesUrl)\r\n   }\r\n\r\n   \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntitiesService {\r\n\r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n  \r\n  private _entitiesTypesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/entities-types\"\r\n  \r\n  constructor(private http: HttpClient) {  }\r\n   \r\n\r\n   getEntitiesTypes(){\r\n    return this.http.get<any>(this._entitiesTypesUrl)\r\n   }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VudGl0aWVzL3JlZ2lzdHJhci9yZWdpc3RyYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-registrar',\r\n  templateUrl: './registrar.component.html',\r\n  styleUrls: ['./registrar.component.css']\r\n})\r\nexport class RegistrarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  \r\n  transform(items: any[], filterField: string, searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      //console.log(it)\r\n      return it.name.toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlbHAvaGVscC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\nexport class HelpComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { EntitiesService } from '../entities/entities-services/entities.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from \"../system-access/system-access-services/auth.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  entityTypes: Array<any> = []\r\n  \r\n    constructor(private _entitiesService: EntitiesService,\r\n      private _router: Router,\r\n      private _authService: AuthService\r\n      ) { }\r\n\r\n      ngOnInit() {\r\n        this._entitiesService.getEntitiesTypes()\r\n          .subscribe(      \r\n            res => this.entityTypes = res,\r\n            err => console.log(err)\r\n          ) \r\n      }\r\n       \r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy9ncm91cHMvZ3JvdXAtYWRkL2dyb3VwLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GroupAddService } from '../group-services/group-add.service';\r\nimport { UserAddService } from '../../user/user-services/user-add.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-group-add',\r\n  templateUrl: './group-add.component.html',\r\n  styleUrls: ['./group-add.component.css']\r\n})\r\nexport class GroupAddComponent implements OnInit {\r\n\r\n  groupData = {\r\n    planname : '',\r\n    entityid : '',\r\n    features: '',\r\n  }\r\n  _errorMessage = ''\r\n  _entities: Array<any> = [] \r\n  _features : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n  getFetuares: Array<any> = [] \r\n\r\n  constructor(private _groupAddService: GroupAddService,\r\n    private _router: Router,\r\n    private _userAddService: UserAddService,\r\n    ) {  }\r\n\r\n    validateTopic(value) {\r\n      if (value === 'default') {\r\n        this.topicHasError = true;\r\n      } else {\r\n        this.topicHasError = false;\r\n      }\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n      this._groupAddService.getUserGroupFeatures()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._features = res\r\n               },\r\n        error => {console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )\r\n\r\n        this._userAddService.getUserEntities()\r\n        .subscribe(\r\n          res => {\r\n            console.log(res) \r\n            this._entities = res\r\n          },\r\n          error => {console.log(error)\r\n                    this._errorMessage = error.error }\r\n          )       \r\n\r\n  }             \r\n    createGroup(){\r\n    this._groupAddService.createGroup(this.groupData)\r\n    .subscribe(\r\n      res => {\r\n        console.log(res)\r\n        //this._router.navigate(['/group-main'])\r\n      },\r\n      error => console.log(error) \r\n      )\r\n    }\r\n\r\n\r\n  \r\n\r\n  }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy9ncm91cHMvZ3JvdXAtbWFpbi9ncm91cC1tYWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { GroupMainService } from '../group-services/group-main.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-main',\r\n  templateUrl: './group-main.component.html',\r\n  styleUrls: ['./group-main.component.css']\r\n})\r\nexport class GroupMainComponent implements OnInit {\r\n\r\n  groupMain: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _groupService: GroupMainService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this._groupService.getGroup()\r\n    .subscribe(      \r\n      res => this.groupMain = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createGroupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/group-add\"\r\n  private _featuresUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/show-features-group\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getUserGroupFeatures(){\r\n    return this.http.get<any>(this._featuresUrl)\r\n  }\r\n\r\n  createGroup(group){\r\n    return this.http.post<any>(this._createGroupUrl, group)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupMainService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _groupUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration//show-user-groups\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getGroup(){\r\n    return this.http.get<any>(this._groupUrl)\r\n   }\r\n\r\n   \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy91c2VyL3VzZXItYWRkL3VzZXItYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserAddService } from '../user-services/user-add.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-add',\r\n  templateUrl: './user-add.component.html',\r\n  styleUrls: ['./user-add.component.css']\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n\r\n    registerUserData = {\r\n    firstName: 'Allan',\r\n    lastName: 'Finco', \r\n    userName: 'allan.finco',\r\n    dddModel: '11',\r\n    phone: '1234-5678',\r\n    cpf: '369.844.728-22',\r\n    email: 'allan.finco@rainti.com.br',\r\n    userGroup: '',\r\n    userEntities: '',\r\n\r\n  }\r\n\r\n  _errorMessage = ''\r\n  _groups : Array<any> = []\r\n  _entities : Array<any> = [] \r\n  topicHasError = true\r\n  dddHasError = true\r\n\r\n  _activeTab = 'user-data'\r\n\r\n  constructor(private _userAddService: UserAddService,\r\n    private _router: Router) { }\r\n\r\n    ngOnInit() {\r\n      this._userAddService.getUserGroups()\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._groups = res\r\n        },\r\n        error => {  console.log(error)\r\n                  this._errorMessage = error.error }\r\n        )\r\n    }\r\n\r\n\r\n  nextTab(tab){\r\n    this._activeTab = tab\r\n  }\r\n\r\n  saveUser(){\r\n\r\n   \r\n   /*  this._userAddService.createUser(this.registerUserData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._router.navigate(['/user-main'])\r\n        },\r\n        error => console.log(error) \r\n        )  \r\n    */\r\n  }\r\n  \r\n  createUser(){\r\n    /*  this._userAddService.createUser(this.registerUserData)\r\n       .subscribe(\r\n         res => {\r\n           console.log(res)\r\n           this._router.navigate(['/user-main'])\r\n         },\r\n         error => console.log(error) \r\n         )  \r\n     */\r\n   } \r\n\r\n  backToUsers(){\r\n\r\n  }\r\n  CheckAllOptions() {\r\n    if (this._groups.every(val => val.checked == true))\r\n      this._groups.forEach(val => { val.checked = false });\r\n    else\r\n      this._groups.forEach(val => { val.checked = true });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVycy91c2VyL3VzZXItbWFpbi91c2VyLW1haW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserMainService } from '../user-services/user-main.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-main',\r\n  templateUrl: './user-main.component.html',\r\n  styleUrls: ['./user-main.component.css']\r\n})\r\nexport class UserMainComponent implements OnInit {\r\n\r\n  user: Array<any> = []\r\n  searchText: ''\r\n  name: ''\r\n  constructor(private _userService: UserMainService) { \r\n      \r\n    }\r\n\r\n  ngOnInit() {\r\n    this._userService.getUser()\r\n    .subscribe(      \r\n      res => this.user = res,\r\n      err => console.log(err)\r\n    ) \r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAddService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n\r\n  private _createUserUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-add\"\r\n  private _showUserGroupsUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/show-user-groups\"\r\n  private _showUserEntitiesUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/show-user-entities\"\r\n\r\n\r\n  constructor(private http: HttpClient,) { }\r\n\r\n  getUserGroups(){\r\n    return this.http.get<any>(this._showUserGroupsUrl)\r\n  }\r\n\r\n  getUserEntities(){\r\n    return this.http.get<any>(this._showUserEntitiesUrl)\r\n  }\r\n\r\n\r\n  createUser(user){\r\n    return this.http.post<any>(this._createUserUrl, user)\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserMainService {\r\n\r\n  private _appServerConfig = require('../../../../assets/configs/config-app-server.json')\r\n  \r\n  private _userUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/administration/user-main\"\r\n  \r\n\r\n  constructor(private http: HttpClient) {  }\r\n\r\n  getUser(){\r\n    return this.http.get<any>(this._userUrl)\r\n   }\r\n\r\n   \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvYXVkaXQtaGlzdG9yeS9hdWRpdC1oaXN0b3J5LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-audit-history',\n  templateUrl: './audit-history.component.html',\n  styleUrls: ['./audit-history.component.css']\n})\nexport class AuditHistoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvZmluYW5jaWFsLXRyYW5zYWN0aW9uL2ZpbmFuY2lhbC10cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-financial-transaction',\n  templateUrl: './financial-transaction.component.html',\n  styleUrls: ['./financial-transaction.component.css']\n})\nexport class FinancialTransactionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlcG9ydHMvdHJhbnNhY3Rpb24tYmlsbGluZy90cmFuc2FjdGlvbi1iaWxsaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-transaction-billing',\n  templateUrl: './transaction-billing.component.html',\n  styleUrls: ['./transaction-billing.component.css']\n})\nexport class TransactionBillingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from '../system-access-services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { UserIdleService } from 'angular-user-idle';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginUserData = {\r\n    userName: '',\r\n    password: '',\r\n  }\r\n  _errorMessage = ''\r\n\r\n  constructor(private _auth: AuthService, \r\n    private _router: Router,\r\n    private userIdle: UserIdleService) { }\r\n\r\n  ngOnInit() {\r\n    this.stop()\r\n  }\r\n\r\n  loginUser(){\r\n\r\n    this.stop()\r\n\r\n    // Setting configs of watching tims is setted in seconds\r\n    this.userIdle.setConfigValues({idle: 600/* 1 hour*/, timeout: 1, ping:120})\r\n    \r\n    this.userIdle.startWatching();\r\n    \r\n    // Start watching when user idle is starting.\r\n    this.userIdle.onTimerStart().subscribe(count => console.log(count));\r\n    \r\n    // Start watch when time is up.\r\n    this.userIdle.onTimeout().subscribe(() => {\r\n      localStorage.removeItem('token')\r\n      this.stopWatching()\r\n      this.stop()\r\n      this.restart()\r\n      this._router.navigate(['/login'])\r\n    });\r\n\r\n\r\n    this._auth.loginUser(this.loginUserData)\r\n      .subscribe(\r\n        res => {\r\n         // console.log(res)\r\n          localStorage.setItem('token',res.token)\r\n          this._router.navigate(['/registrar-contrato'])\r\n        },\r\n        error => {\r\n          this._errorMessage = error.error \r\n          console.log(error)\r\n        }\r\n      )\r\n  }\r\n\r\n  stop() {\r\n    this.userIdle.stopTimer();\r\n  }\r\n \r\n  stopWatching() {\r\n    this.userIdle.stopWatching();\r\n  }\r\n \r\n  startWatching() {\r\n    this.userIdle.startWatching();\r\n  }\r\n \r\n  restart() {\r\n    this.userIdle.resetTimer();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci1mYWlsZWQvcGFzc3dvcmQtcmVjb3Zlci1mYWlsZWQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password-recover-failed',\r\n  templateUrl: './password-recover-failed.component.html',\r\n  styleUrls: ['./password-recover-failed.component.css']\r\n})\r\nexport class PasswordRecoverFailedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci1zdWNjZXNzL3Bhc3N3b3JkLXJlY292ZXItc3VjY2Vzcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-password-recover-success',\r\n  templateUrl: './password-recover-success.component.html',\r\n  styleUrls: ['./password-recover-success.component.css']\r\n})\r\nexport class PasswordRecoverSuccessComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVjb3Zlci9wYXNzd29yZC1yZWNvdmVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../system-access-services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-password-recover',\r\n  templateUrl: './password-recover.component.html',\r\n  styleUrls: ['./password-recover.component.css']\r\n})\r\nexport class PasswordRecoverComponent implements OnInit {\r\n\r\n  recoverPasswordData = {\r\n    email: ''\r\n  }\r\n  resetCode = {}\r\n  \r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) {\r\n     \r\n     }\r\n\r\n  ngOnInit() {\r\n \r\n  }\r\n\r\n  recoverPassword(){\r\n    this._auth.recoverPassword(this.recoverPasswordData)\r\n    .subscribe(\r\n      res => {\r\n        this.resetCode = res.code\r\n        this.sendEmail(res.emailTo[0].email)          \r\n        console.log(res)\r\n        this._router.navigate(['/recuperar-senha-enviado'])  \r\n      },\r\n      error => {\r\n          console.log(error) ,\r\n          this._router.navigate(['/recuperar-senha-falha'])\r\n      }\r\n      )\r\n  }\r\n\r\n  sendEmail(emailTo){\r\n    var emailConfig = require('../../../assets/configs/config-email-noreply.json')\r\n\r\n    let emailData = {\r\n      host: emailConfig.host, \r\n\t    port: emailConfig.port,\r\n      secure: emailConfig.secure,\r\n      userName: emailConfig.userName,\r\n      emailFrom: emailConfig.emailFrom,\r\n      password: emailConfig.password,\r\n      emailTo: emailTo,\r\n      subjectContent: \"[NÃO RESPONDA] - RainTI recuperar senha\",\r\n      bodyContent: \"Para recuperar sua senha acesse: http://localhost:4200/recuperar-senha-reset, informe seu usário e o código a seguir: \"+this.resetCode\r\n    }\r\n\r\n    console.log(emailData)\r\n     this._auth.sendEmail(emailData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n        },\r\n        error => console.log(error) \r\n        )   \r\n    \r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N5c3RlbS1hY2Nlc3MvcGFzc3dvcmQtcmVzZXQvcGFzc3dvcmQtcmVzZXQuY29tcG9uZW50LmNzcyJ9 */\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../system-access-services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.component.html',\r\n  styleUrls: ['./password-reset.component.css']\r\n})\r\nexport class PasswordResetComponent implements OnInit {\r\n  //const word = (<any>jsonData).name;  \r\n  \r\n\r\n  resetUserData = {\r\n    userName:'',\r\n    resetCode:'',\r\n    password:'',\r\n    confirmedPassword: '',\r\n  }\r\n\r\n  constructor(private _auth: AuthService,\r\n    private _router: Router) {\r\n      \r\n     }\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetUser(){\r\n    this._auth.resetUser(this.resetUserData)\r\n      .subscribe(\r\n        res => {\r\n          console.log(res)\r\n          this._router.navigate(['/login'])          \r\n        },\r\n        error => console.log(error) \r\n        )      \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse} from '@angular/common/http'\r\nimport { Router } from '@angular/router';\r\nimport { catchError } from 'rxjs/operators'\r\nimport { throwError } from 'rxjs'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private _appServerConfig = require('../../../assets/configs/config-app-server.json')\r\n\r\n  private _registerUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/register-user/register\"\r\n  private _loginUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/login/access\"\r\n  private _recoverPasswordUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/recover-password/recover\"\r\n  private _resetPasswordUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/reset-password/reset\"\r\n  private _sendEmailUrl = \"http://\"+this._appServerConfig.host+\":\"+this._appServerConfig.port+\"/api/common/send-email\"\r\n  \r\n  constructor(private http: HttpClient, private _router: Router) {}\r\n\r\n  registerUser(user){\r\n    return this.http.post<any>(this._registerUrl, user)\r\n  }\r\n\r\n  resetUser(user){\r\n    return this.http.post<any>(this._resetPasswordUrl, user)\r\n  }\r\n  \r\n  loginUser(user){\r\n    return this.http.post<any>(this._loginUrl, user)\r\n        .pipe(catchError(this.errorHandler))\r\n  }  \r\n\r\n  errorHandler(error: HttpErrorResponse){\r\n    return throwError(error)\r\n  }\r\n\r\n  loggedIn(){\r\n    return !!localStorage.getItem('token')\r\n  }\r\n\r\n  logoutUser(){\r\n    localStorage.removeItem('token')\r\n    this._router.navigate(['/login'])\r\n  }\r\n \r\n  getToken(){\r\n    return localStorage.getItem('token')\r\n  }\r\n\r\n  recoverPassword(user){\r\n    return this.http.post<any>(this._recoverPasswordUrl, user)\r\n  }\r\n\r\n  sendEmail(user){\r\n    return this.http.post<any>(this._sendEmailUrl, user)\r\n\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpInterceptor } from '@angular/common/http';\r\nimport { AuthService } from \"./system-access/system-access-services/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(req, next){\r\n    let authService = this.injector.get(AuthService)\r\n    let tokenizedReq = req.clone({\r\n      setHeaders:{\r\n        Authorization: `Bearer ${authService.getToken()}`\r\n      }\r\n    })\r\n    return next.handle(tokenizedReq)\r\n  }\r\n}\r\n","import { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core'\r\n\r\n@Directive({\r\n    selector: '[appConfirmEqualValidator]',\r\n    providers: [{\r\n        provide: NG_VALIDATORS,\r\n        useExisting: ConfirmEqualValidator,\r\n        multi: true\r\n    }]\r\n})\r\n\r\nexport class ConfirmEqualValidator implements Validator{\r\n    @Input() appConfirmEqualValidator: string\r\n    validate(control: AbstractControl): {[key:string]: any} | null{\r\n        const controlToCompare = control.parent.get(this.appConfirmEqualValidator)\r\n        if(controlToCompare && controlToCompare.value !== control.value){\r\n            return { 'notEqual': true };\r\n        }\r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}